<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-AvailabilityAddressSpace</command:name>
      <command:verb>Add</command:verb>
      <command:noun>AvailabilityAddressSpace</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Add-AvailabilityAddressSpace cmdlet to create availability address space objects that are used to share free/busy data across Exchange organizations.</maml:para>
        <maml:para>The maximum number off Availability address spaces returned by Active Directory to Exchange is 100. We recommend using 100 or fewer address spaces in order for Availability lookups to work properly.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>In Exchange Online, you need to run the New-AvailabilityConfig cmdlet before you run the Add-AvailabilityAddressSpace cmdlet.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-AvailabilityAddressSpace</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AccessMethod</maml:name>
          <maml:description>
            <maml:para>The AccessMethod parameter specifies how the free/busy data is accessed. Valid values are:</maml:para>
            <maml:para>- PerUserFB: Per-user free/busy information can be requested. The free/busy data is accessed in the defined per-user free/busy proxy account or group, or in the All Exchange Servers group. This value requires a trust between the two forests, and requires you to use either the UseServiceAccount parameter or Credentials parameter.</maml:para>
            <maml:para>- OrgWideFB: Only default free/busy for each user can be requested. The free/busy data is accessed in the per-user free/busy proxy account or group in the target forest. This value requires you to use either the UseServiceAccount parameter or Credentials parameter.</maml:para>
            <maml:para>- OrgWideFBBasic: This value is reserved for internal Microsoft use.</maml:para>
            <maml:para>- InternalProxy: The request is proxied to an Exchange in the site that has a later version of Exchange.</maml:para>
            <maml:para>- PublicFolder: This value was used to access free/busy data on Exchange Server 2003 servers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AvailabilityAccessMethod</command:parameterValue>
          <dev:type>
            <maml:name>AvailabilityAccessMethod</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ForestName</maml:name>
          <maml:description>
            <maml:para>The ForestName parameter specifies the SMTP domain name of the target forest for users whose free/busy data must be retrieved. If your users are distributed among multiple SMTP domains in the target forest, run the Add-AvailabilityAddressSpace command once for each SMTP domain.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credentials</maml:name>
          <maml:description>
            <maml:para>The Credentials parameter specifies the username and password that's used to access the Availability services in the target forest.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetAutodiscoverEpr</maml:name>
          <maml:description>
            <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.xml`. Exchange uses Autodiscover to automatically detect the correct server endpoint for external requests.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AccessMethod</maml:name>
        <maml:description>
          <maml:para>The AccessMethod parameter specifies how the free/busy data is accessed. Valid values are:</maml:para>
          <maml:para>- PerUserFB: Per-user free/busy information can be requested. The free/busy data is accessed in the defined per-user free/busy proxy account or group, or in the All Exchange Servers group. This value requires a trust between the two forests, and requires you to use either the UseServiceAccount parameter or Credentials parameter.</maml:para>
          <maml:para>- OrgWideFB: Only default free/busy for each user can be requested. The free/busy data is accessed in the per-user free/busy proxy account or group in the target forest. This value requires you to use either the UseServiceAccount parameter or Credentials parameter.</maml:para>
          <maml:para>- OrgWideFBBasic: This value is reserved for internal Microsoft use.</maml:para>
          <maml:para>- InternalProxy: The request is proxied to an Exchange in the site that has a later version of Exchange.</maml:para>
          <maml:para>- PublicFolder: This value was used to access free/busy data on Exchange Server 2003 servers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">AvailabilityAccessMethod</command:parameterValue>
        <dev:type>
          <maml:name>AvailabilityAccessMethod</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ForestName</maml:name>
        <maml:description>
          <maml:para>The ForestName parameter specifies the SMTP domain name of the target forest for users whose free/busy data must be retrieved. If your users are distributed among multiple SMTP domains in the target forest, run the Add-AvailabilityAddressSpace command once for each SMTP domain.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credentials</maml:name>
        <maml:description>
          <maml:para>The Credentials parameter specifies the username and password that's used to access the Availability services in the target forest.</maml:para>
          <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetAutodiscoverEpr</maml:name>
        <maml:description>
          <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.xml`. Exchange uses Autodiscover to automatically detect the correct server endpoint for external requests.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Add-AvailabilityAddressSpace -ForestName example.contoso.com -AccessMethod OrgWideFB -Credentials (Get-Credential)</dev:code>
        <dev:remarks>
          <maml:para>This example is useful with an untrusted cross-forest Availability service, or if detailed cross-forest free/busy service isn't desired. Enter a username and password when you're prompted by the command. For an untrusted cross-forest configuration, make sure that the user doesn't have a mailbox.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Add-AvailabilityAddressSpace -ForestName example.contoso.com -AccessMethod PerUserFB -Credentials (Get-Credential)</dev:code>
        <dev:remarks>
          <maml:para>This example is useful with a trusted cross-forest Availability service. The contoso.com forest trusts the current forest, and the specified account connects to the contoso.com forest. The specified account must be an existing account in the contoso.com forest.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Add-AvailabilityAddressSpace -ForestName example.contoso.com -AccessMethod PerUserFB -UseServiceAccount $true</dev:code>
        <dev:remarks>
          <maml:para>This example is useful with a trusted cross-forest Availability service. The contoso.com forest trusts the current forest and uses the service account (typically the local system account or the computer account) to connect to the contoso.com forest. Because the service is trusted, there is no issue with authorization when the current forest tries to retrieve free/busy information from contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/add-availabilityaddressspace</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-DistributionGroupMember</command:name>
      <command:verb>Add</command:verb>
      <command:noun>DistributionGroupMember</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Add-DistributionGroupMember cmdlet to add a single recipient to distribution groups and mail-enabled security groups. To replace all members, use the Update-DistributionGroupMember cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-DistributionGroupMember</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>The Member parameter specifies the recipient that you want to add to the group. A member can be any mail-enabled recipient in your organization. You can use any value that uniquely identifies the recipient. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientWithAdUserGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>RecipientWithAdUserGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>Member</maml:name>
        <maml:description>
          <maml:para>The Member parameter specifies the recipient that you want to add to the group. A member can be any mail-enabled recipient in your organization. You can use any value that uniquely identifies the recipient. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientWithAdUserGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>RecipientWithAdUserGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Add-DistributionGroupMember -Identity "Staff" -Member "JohnEvans@contoso.com"</dev:code>
        <dev:remarks>
          <maml:para>This example adds John Evans to the distribution group named Staff.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/add-distributiongroupmember</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-MailboxFolderPermission</command:name>
      <command:verb>Add</command:verb>
      <command:noun>MailboxFolderPermission</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Add-MailboxFolderPermission cmdlet to add folder-level permissions for users in mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>To modify the permissions that are assigned to the user on a mailbox folder, use the Set-MailboxFolderPermission cmdlet. To remove all permissions that are assigned to a user on a mailbox folder, use the Remove-MailboxFolderPermission cmdlet.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-MailboxFolderPermission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
            <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AccessRights</maml:name>
          <maml:description>
            <maml:para>The AccessRights parameter specifies the permissions that you want to add for the user on the mailbox folder.</maml:para>
            <maml:para>You can specify individual folder permissions or roles, which are combinations of permissions. You can specify multiple permissions and roles separated by commas.</maml:para>
            <maml:para>The following individual permissions are available:</maml:para>
            <maml:para>- CreateItems: The user can create items within the specified folder.</maml:para>
            <maml:para>- CreateSubfolders: The user can create subfolders in the specified folder.</maml:para>
            <maml:para>- DeleteAllItems: The user can delete all items in the specified folder.</maml:para>
            <maml:para>- DeleteOwnedItems: The user can only delete items that they created from the specified folder.</maml:para>
            <maml:para>- EditAllItems: The user can edit all items in the specified folder.</maml:para>
            <maml:para>- EditOwnedItems: The user can only edit items that they created in the specified folder.</maml:para>
            <maml:para>- FolderContact: The user is the contact for the specified public folder.</maml:para>
            <maml:para>- FolderOwner: The user is the owner of the specified folder. The user can view the folder, move the folder and create subfolders. The user can't read items, edit items, delete items or create items.</maml:para>
            <maml:para>- FolderVisible: The user can view the specified folder, but can't read or edit items within the specified public folder.</maml:para>
            <maml:para>- ReadItems: The user can read items within the specified folder.</maml:para>
            <maml:para></maml:para>
            <maml:para>The roles that are available, along with the permissions that they assign, are described in the following list:</maml:para>
            <maml:para>- Author: CreateItems, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Contributor: CreateItems, FolderVisible</maml:para>
            <maml:para>- Editor: CreateItems, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- None: FolderVisible</maml:para>
            <maml:para>- NonEditingAuthor: CreateItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Owner: CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderContact, FolderOwner, FolderVisible, ReadItems</maml:para>
            <maml:para>- PublishingEditor: CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- PublishingAuthor: CreateItems, CreateSubfolders, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Reviewer: FolderVisible, ReadItems</maml:para>
            <maml:para></maml:para>
            <maml:para>The following roles apply specifically to calendar folders:</maml:para>
            <maml:para>- AvailabilityOnly: View only availability data</maml:para>
            <maml:para>- LimitedDetails: View availability data with subject and location</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderAccessRight[]</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderAccessRight[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The User parameter specifies who's granted permission to the mailbox folder. Valid values are mail-enabled security principals (mail-enabled accounts or groups that have security identifiers or SIDs that can have permissions assigned to them). For example:</maml:para>
            <maml:para>- User mailboxes</maml:para>
            <maml:para>- Mail users</maml:para>
            <maml:para>- Mail-enabled security groups</maml:para>
            <maml:para></maml:para>
            <maml:para>You can use any value that uniquely identifies the user or group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderUserIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendNotificationToUser</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The SendNotificationToUser parameter specifies whether to send a sharing invitation to the user when you add calendar permissions for them. The message will be a normal calendar sharing invitation that can be accepted by the recipient. Valid values are:</maml:para>
            <maml:para>- $true: A sharing invitation is sent.</maml:para>
            <maml:para>- $false: No sharing invitation is sent. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter only applies to calendar folders and can only be used with the following AccessRights parameter values:</maml:para>
            <maml:para>- AvailabilityOnly</maml:para>
            <maml:para>- LimitedDetails</maml:para>
            <maml:para>- Reviewer</maml:para>
            <maml:para>- Editor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SharingPermissionFlags</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The SharingPermissionFlags parameter assigns calendar delegate permissions. This parameter only applies to calendar folders and can only be used when the AccessRights parameter value is Editor. Valid values are:</maml:para>
            <maml:para>- None: Has no effect. This is the default value.</maml:para>
            <maml:para>- Delegate: The user is made a calendar delegate, which includes receiving meeting invites and responses. If there are no other delegates, this value will create the meeting message rule. If there are existing delegates, the user is added to the meeting message rule without changing how delegate messages are sent.</maml:para>
            <maml:para>- CanViewPrivateItems: The user can access private items on the calendar. You must use this value with the Delegate value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderPermissionFlags</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderPermissionFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
          <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AccessRights</maml:name>
        <maml:description>
          <maml:para>The AccessRights parameter specifies the permissions that you want to add for the user on the mailbox folder.</maml:para>
          <maml:para>You can specify individual folder permissions or roles, which are combinations of permissions. You can specify multiple permissions and roles separated by commas.</maml:para>
          <maml:para>The following individual permissions are available:</maml:para>
          <maml:para>- CreateItems: The user can create items within the specified folder.</maml:para>
          <maml:para>- CreateSubfolders: The user can create subfolders in the specified folder.</maml:para>
          <maml:para>- DeleteAllItems: The user can delete all items in the specified folder.</maml:para>
          <maml:para>- DeleteOwnedItems: The user can only delete items that they created from the specified folder.</maml:para>
          <maml:para>- EditAllItems: The user can edit all items in the specified folder.</maml:para>
          <maml:para>- EditOwnedItems: The user can only edit items that they created in the specified folder.</maml:para>
          <maml:para>- FolderContact: The user is the contact for the specified public folder.</maml:para>
          <maml:para>- FolderOwner: The user is the owner of the specified folder. The user can view the folder, move the folder and create subfolders. The user can't read items, edit items, delete items or create items.</maml:para>
          <maml:para>- FolderVisible: The user can view the specified folder, but can't read or edit items within the specified public folder.</maml:para>
          <maml:para>- ReadItems: The user can read items within the specified folder.</maml:para>
          <maml:para></maml:para>
          <maml:para>The roles that are available, along with the permissions that they assign, are described in the following list:</maml:para>
          <maml:para>- Author: CreateItems, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Contributor: CreateItems, FolderVisible</maml:para>
          <maml:para>- Editor: CreateItems, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- None: FolderVisible</maml:para>
          <maml:para>- NonEditingAuthor: CreateItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Owner: CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderContact, FolderOwner, FolderVisible, ReadItems</maml:para>
          <maml:para>- PublishingEditor: CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- PublishingAuthor: CreateItems, CreateSubfolders, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Reviewer: FolderVisible, ReadItems</maml:para>
          <maml:para></maml:para>
          <maml:para>The following roles apply specifically to calendar folders:</maml:para>
          <maml:para>- AvailabilityOnly: View only availability data</maml:para>
          <maml:para>- LimitedDetails: View availability data with subject and location</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderAccessRight[]</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderAccessRight[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The User parameter specifies who's granted permission to the mailbox folder. Valid values are mail-enabled security principals (mail-enabled accounts or groups that have security identifiers or SIDs that can have permissions assigned to them). For example:</maml:para>
          <maml:para>- User mailboxes</maml:para>
          <maml:para>- Mail users</maml:para>
          <maml:para>- Mail-enabled security groups</maml:para>
          <maml:para></maml:para>
          <maml:para>You can use any value that uniquely identifies the user or group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderUserIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendNotificationToUser</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The SendNotificationToUser parameter specifies whether to send a sharing invitation to the user when you add calendar permissions for them. The message will be a normal calendar sharing invitation that can be accepted by the recipient. Valid values are:</maml:para>
          <maml:para>- $true: A sharing invitation is sent.</maml:para>
          <maml:para>- $false: No sharing invitation is sent. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter only applies to calendar folders and can only be used with the following AccessRights parameter values:</maml:para>
          <maml:para>- AvailabilityOnly</maml:para>
          <maml:para>- LimitedDetails</maml:para>
          <maml:para>- Reviewer</maml:para>
          <maml:para>- Editor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SharingPermissionFlags</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The SharingPermissionFlags parameter assigns calendar delegate permissions. This parameter only applies to calendar folders and can only be used when the AccessRights parameter value is Editor. Valid values are:</maml:para>
          <maml:para>- None: Has no effect. This is the default value.</maml:para>
          <maml:para>- Delegate: The user is made a calendar delegate, which includes receiving meeting invites and responses. If there are no other delegates, this value will create the meeting message rule. If there are existing delegates, the user is added to the meeting message rule without changing how delegate messages are sent.</maml:para>
          <maml:para>- CanViewPrivateItems: The user can access private items on the calendar. You must use this value with the Delegate value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderPermissionFlags</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderPermissionFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Add-MailboxFolderPermission -Identity ayla@contoso.com:\Marketing -User ed@contoso.com -AccessRights Owner</dev:code>
        <dev:remarks>
          <maml:para>This example grants the Owner role to Ed on the Marketing folder in Ayla's mailbox.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Add-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User julia@contoso.com -AccessRights Editor -SharingPermissionFlags Delegate</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example adds Julia as a calendar delegate to Ayla's mailbox, but without access to private items.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Add-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User laura@contoso.com -AccessRights Editor -SharingPermissionFlags Delegate,CanViewPrivateItems</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example adds Laura as a calendar delegate to Ayla's mailbox with access to private items.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/add-mailboxfolderpermission</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-EXOMailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Export-MailboxDiagnosticLogs</command:name>
      <command:verb>Export</command:verb>
      <command:noun>MailboxDiagnosticLogs</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Export-MailboxDiagnosticLogs cmdlet to export diagnostic data from user and system mailboxes in your organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Export-MailboxDiagnosticLogs</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies that mailbox that contains the diagnostics logs that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralMailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralMailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ComponentName</maml:name>
          <maml:description>
            <maml:para>The ComponentName parameter specifies the component that you want to retrieve the diagnostic logs for. Valid values depend on the type and location of the mailbox (on-premises Exchange or Exchange Online). Valid values include:</maml:para>
            <maml:para>- ActionProcessingAgent</maml:para>
            <maml:para>- BirthdayAssistant</maml:para>
            <maml:para>- CalendarPermissions</maml:para>
            <maml:para>- CalendarSharingLocalFolder</maml:para>
            <maml:para>- DefaultViewIndexer</maml:para>
            <maml:para>- FreeBusyPublishingAssistantQuickLog</maml:para>
            <maml:para>- HoldTracking</maml:para>
            <maml:para>- InternetCalendar</maml:para>
            <maml:para>- InternalCalendarSharingMigration</maml:para>
            <maml:para>- MRM</maml:para>
            <maml:para>- OnlineMeetings</maml:para>
            <maml:para>- OOFRules</maml:para>
            <maml:para>- RemindersAssistant</maml:para>
            <maml:para>- SharingMigrationAssistant</maml:para>
            <maml:para>- SharingSyncAssistant</maml:para>
            <maml:para>- SubstrateHoldTracking</maml:para>
            <maml:para>- SweepRules</maml:para>
            <maml:para>- TimeProfile</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Export-MailboxDiagnosticLogs</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies that mailbox that contains the diagnostics logs that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralMailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralMailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtendedProperties</maml:name>
          <maml:description>
            <maml:para>The ExtendedProperties switch specifies whether to retrieve all of the well-known properties from the mailbox table that are useful for troubleshooting. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies that mailbox that contains the diagnostics logs that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralMailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralMailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ComponentName</maml:name>
        <maml:description>
          <maml:para>The ComponentName parameter specifies the component that you want to retrieve the diagnostic logs for. Valid values depend on the type and location of the mailbox (on-premises Exchange or Exchange Online). Valid values include:</maml:para>
          <maml:para>- ActionProcessingAgent</maml:para>
          <maml:para>- BirthdayAssistant</maml:para>
          <maml:para>- CalendarPermissions</maml:para>
          <maml:para>- CalendarSharingLocalFolder</maml:para>
          <maml:para>- DefaultViewIndexer</maml:para>
          <maml:para>- FreeBusyPublishingAssistantQuickLog</maml:para>
          <maml:para>- HoldTracking</maml:para>
          <maml:para>- InternetCalendar</maml:para>
          <maml:para>- InternalCalendarSharingMigration</maml:para>
          <maml:para>- MRM</maml:para>
          <maml:para>- OnlineMeetings</maml:para>
          <maml:para>- OOFRules</maml:para>
          <maml:para>- RemindersAssistant</maml:para>
          <maml:para>- SharingMigrationAssistant</maml:para>
          <maml:para>- SharingSyncAssistant</maml:para>
          <maml:para>- SubstrateHoldTracking</maml:para>
          <maml:para>- SweepRules</maml:para>
          <maml:para>- TimeProfile</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtendedProperties</maml:name>
        <maml:description>
          <maml:para>The ExtendedProperties switch specifies whether to retrieve all of the well-known properties from the mailbox table that are useful for troubleshooting. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Export-MailboxDiagnosticLogs -ComponentName OOF -Identity JohnSmith</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Server 2010 and 2013, this example retrieves the out-of-office diagnostic log for the user John Smith.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Export-MailboxDiagnosticLogs -ComponentName CalendarPermissions -Identity "Yuuto Sasaki"</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the calendar permissions diagnostic log for the mailbox named Yuuto Sasaki.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/export-mailboxdiagnosticlogs</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AvailabilityAddressSpace</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AvailabilityAddressSpace</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-AvailabilityAddressSpace cmdlet to view existing availability address space objects that are used to share free/busy data across Exchange organizations.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>In on-premises Exchange organizations, you run the Remove-AvailabilityAddressSpace cmdlet on Exchange servers that have the Client Access server role installed.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AvailabilityAddressSpace</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the availability address space that you want to view. You can use any value that uniquely identifies the object. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AvailabilityAddressSpaceIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>AvailabilityAddressSpaceIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the availability address space that you want to view. You can use any value that uniquely identifies the object. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">AvailabilityAddressSpaceIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>AvailabilityAddressSpaceIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-AvailabilityAddressSpace</dev:code>
        <dev:remarks>
          <maml:para>This example returns a summary list of all availability address space objects that are configured in your organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-AvailabilityAddressSpace -Identity Contoso.com | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns details information for the availability address space object named Contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-availabilityaddressspace</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AvailabilityConfig</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AvailabilityConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-AvailabilityConfig cmdlet to retrieve the accounts that are trusted in the cross-forest exchange of free/busy information.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-AvailabilityConfig cmdlet lists the accounts that have permissions to issue proxy availability service requests on an organizational or per-user basis.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AvailabilityConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the availability configuration to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the availability configuration to be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-AvailabilityConfig</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the accounts that are trusted in the cross-forest exchange of free/busy information.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-AvailabilityConfig -Identity &lt;AvailabilityConfig Value&gt;</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the accounts that are trusted in the cross-forest exchange of free/busy information. This example is scoped to return only the results of the specified Identity parameter.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-availabilityconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CalendarDiagnosticAnalysis</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CalendarDiagnosticAnalysis</command:noun>
      <maml:description>
        <maml:para>Although this cmdlet is available in on-premises Exchange and in the cloud-based service, it only works in on-premises Exchange.</maml:para>
        <maml:para>Use the Get-CalendarDiagnosticAnalysis cmdlet to troubleshoot calendar-related reliability issues. You can use this cmdlet to analyze calendar item data that's recorded in the Calendar Diagnostic logs. You provide the calendar item data to this cmdlet by using the Get-CalendarDiagnosticLog cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The following properties of the calendar item are returned in the default output of the cmdlet (when the DetailLevel parameter is set to Basic):</maml:para>
      <maml:para>- Local Log Time</maml:para>
      <maml:para>- ItemId</maml:para>
      <maml:para>- NormalizedSubject</maml:para>
      <maml:para>- StartTime</maml:para>
      <maml:para>- EndTime</maml:para>
      <maml:para>- CalendarLogTriggerAction</maml:para>
      <maml:para>- ClientInfoString</maml:para>
      <maml:para>- OriginalLastModifiedTime</maml:para>
      <maml:para>- ClientIntent</maml:para>
      <maml:para>- CleanGlobalObjectId</maml:para>
      <maml:para>- ItemClass</maml:para>
      <maml:para>- ParentDisplay</maml:para>
      <maml:para>- Duration</maml:para>
      <maml:para>- AppointmentRecurring</maml:para>
      <maml:para>- SentRepresentingEmailAddress</maml:para>
      <maml:para>- SenderEmailAddress</maml:para>
      <maml:para>- SentRepresentingDisplayName</maml:para>
      <maml:para></maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticAnalysis</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CalendarLogs</maml:name>
          <maml:description>
            <maml:para>The CalendarLogs parameter specifies the calendar item that you want to analyze. You identify the calendar item by storing the output of the Get-CalendarDiagnosticLog cmdlet to a variable and using that variable for the value of this parameter.</maml:para>
            <maml:para>For example, to analyze the meeting with the subject "November Budget Meeting" in Shannon Steele's mailbox, run the command `$Budget = Get-CalendarDiagnosticLog -Identity "Shannon Steele" -Subject "November Budget Meeting" -ExactMatch` and then use the value `$Budget` for this parameter.</maml:para>
            <maml:para>Note that you can't use this parameter to analyze multiple calendar items. The value that you use for this parameter must identify a single item.</maml:para>
            <maml:para>You can't use this parameter with the LogLocation parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CalendarLog[]</command:parameterValue>
          <dev:type>
            <maml:name>CalendarLog[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DetailLevel</maml:name>
          <maml:description>
            <maml:para>The DetailLevel parameter specifies the level of detail you want to see in the analysis output. Valid values are:</maml:para>
            <maml:para>- Basic: This is the default value. The calendar item properties that are returned are listed in the Detailed Description.</maml:para>
            <maml:para>- Advanced: 37 additional calendar item properties are returned. You should use this value only for detailed debugging information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AnalysisDetailLevel</command:parameterValue>
          <dev:type>
            <maml:name>AnalysisDetailLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GlobalObjectId</maml:name>
          <maml:description>
            <maml:para>The GlobalObjectId parameter specifies the identity of the calendar item you want to analyze. You can use this parameter with the LogLocation parameter to specify the calendar item if the location contains multiple exported .msg files.</maml:para>
            <maml:para>The GlobalObjectId property of the meeting uses the same format as the CleanGlobalObjectId property (for example, 040000008200E00074C5B7101A82E008000000009421DCCD5046CD0100000000000000001000000010B0349F6B17454685E17D9F9512E71F) and the value of the two properties is likely the same. However, the value of GlobalObjectId might not stay the same for all instances of the same meeting in multiple calendars (for example, different attendees invited to different instances of the same recurring meeting).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputAs</maml:name>
          <maml:description>
            <maml:para>The OutputAs parameter specifies the output format of the command. Valid values are:</maml:para>
            <maml:para>- CSV (This is the default value)</maml:para>
            <maml:para>- HTML</maml:para>
            <maml:para>- XML</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OutputType</command:parameterValue>
          <dev:type>
            <maml:name>OutputType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticAnalysis</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LogLocation</maml:name>
          <maml:description>
            <maml:para>The LogLocation parameter specifies the location of the exported calendar items that you want to analyze. You can specify a local path, or a UNC path (`\Server\Share\User`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>You export the calendar items to .msg files by using the Get-CalendarDiagnosticLog cmdlet with the LogLocation parameter. If the path contains multiple .msg files, all of those files are analyzed when you run Get-CalendarDiagnosticAnalysis.</maml:para>
            <maml:para>You can't use this parameter with the CalendarLogs parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DetailLevel</maml:name>
          <maml:description>
            <maml:para>The DetailLevel parameter specifies the level of detail you want to see in the analysis output. Valid values are:</maml:para>
            <maml:para>- Basic: This is the default value. The calendar item properties that are returned are listed in the Detailed Description.</maml:para>
            <maml:para>- Advanced: 37 additional calendar item properties are returned. You should use this value only for detailed debugging information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AnalysisDetailLevel</command:parameterValue>
          <dev:type>
            <maml:name>AnalysisDetailLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GlobalObjectId</maml:name>
          <maml:description>
            <maml:para>The GlobalObjectId parameter specifies the identity of the calendar item you want to analyze. You can use this parameter with the LogLocation parameter to specify the calendar item if the location contains multiple exported .msg files.</maml:para>
            <maml:para>The GlobalObjectId property of the meeting uses the same format as the CleanGlobalObjectId property (for example, 040000008200E00074C5B7101A82E008000000009421DCCD5046CD0100000000000000001000000010B0349F6B17454685E17D9F9512E71F) and the value of the two properties is likely the same. However, the value of GlobalObjectId might not stay the same for all instances of the same meeting in multiple calendars (for example, different attendees invited to different instances of the same recurring meeting).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputAs</maml:name>
          <maml:description>
            <maml:para>The OutputAs parameter specifies the output format of the command. Valid values are:</maml:para>
            <maml:para>- CSV (This is the default value)</maml:para>
            <maml:para>- HTML</maml:para>
            <maml:para>- XML</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OutputType</command:parameterValue>
          <dev:type>
            <maml:name>OutputType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CalendarLogs</maml:name>
        <maml:description>
          <maml:para>The CalendarLogs parameter specifies the calendar item that you want to analyze. You identify the calendar item by storing the output of the Get-CalendarDiagnosticLog cmdlet to a variable and using that variable for the value of this parameter.</maml:para>
          <maml:para>For example, to analyze the meeting with the subject "November Budget Meeting" in Shannon Steele's mailbox, run the command `$Budget = Get-CalendarDiagnosticLog -Identity "Shannon Steele" -Subject "November Budget Meeting" -ExactMatch` and then use the value `$Budget` for this parameter.</maml:para>
          <maml:para>Note that you can't use this parameter to analyze multiple calendar items. The value that you use for this parameter must identify a single item.</maml:para>
          <maml:para>You can't use this parameter with the LogLocation parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CalendarLog[]</command:parameterValue>
        <dev:type>
          <maml:name>CalendarLog[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LogLocation</maml:name>
        <maml:description>
          <maml:para>The LogLocation parameter specifies the location of the exported calendar items that you want to analyze. You can specify a local path, or a UNC path (`\Server\Share\User`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>You export the calendar items to .msg files by using the Get-CalendarDiagnosticLog cmdlet with the LogLocation parameter. If the path contains multiple .msg files, all of those files are analyzed when you run Get-CalendarDiagnosticAnalysis.</maml:para>
          <maml:para>You can't use this parameter with the CalendarLogs parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DetailLevel</maml:name>
        <maml:description>
          <maml:para>The DetailLevel parameter specifies the level of detail you want to see in the analysis output. Valid values are:</maml:para>
          <maml:para>- Basic: This is the default value. The calendar item properties that are returned are listed in the Detailed Description.</maml:para>
          <maml:para>- Advanced: 37 additional calendar item properties are returned. You should use this value only for detailed debugging information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">AnalysisDetailLevel</command:parameterValue>
        <dev:type>
          <maml:name>AnalysisDetailLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GlobalObjectId</maml:name>
        <maml:description>
          <maml:para>The GlobalObjectId parameter specifies the identity of the calendar item you want to analyze. You can use this parameter with the LogLocation parameter to specify the calendar item if the location contains multiple exported .msg files.</maml:para>
          <maml:para>The GlobalObjectId property of the meeting uses the same format as the CleanGlobalObjectId property (for example, 040000008200E00074C5B7101A82E008000000009421DCCD5046CD0100000000000000001000000010B0349F6B17454685E17D9F9512E71F) and the value of the two properties is likely the same. However, the value of GlobalObjectId might not stay the same for all instances of the same meeting in multiple calendars (for example, different attendees invited to different instances of the same recurring meeting).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OutputAs</maml:name>
        <maml:description>
          <maml:para>The OutputAs parameter specifies the output format of the command. Valid values are:</maml:para>
          <maml:para>- CSV (This is the default value)</maml:para>
          <maml:para>- HTML</maml:para>
          <maml:para>- XML</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OutputType</command:parameterValue>
        <dev:type>
          <maml:name>OutputType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>$logs = Get-CalendarDiagnosticLog -Identity oevans -MeetingID 040000008200E00074C5B7101A82E008000000009421DCCD5046CD0100000000000000001000000010B0349F6B17454685E17D9F9512E71F
Get-CalendarDiagnosticAnalysis -CalendarLogs $logs -DetailLevel Advanced | Set-Content -Path "C:\My Documents\Oscar Evans Analysis.csv"</dev:code>
        <dev:remarks>
          <maml:para>This example gets the specified calendar item from Oscar Evans' mailbox, stores the item as a variable and writes the advanced analysis of the item to a CSV file.</maml:para>
          <maml:para>For basic analysis of the item, don't include the DetailLevel parameter, or use the value Basic instead of Advanced.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticAnalysis -LogLocation "C:\My Documents\Exported Calendar Logs\jkozma@contoso.com" -DetailLevel Advanced -OutputAs HTML | Set-Content -Path "C:\My Documents\Jasen Kozma Analysis.html"</dev:code>
        <dev:remarks>
          <maml:para>This example analyzes the calendar items that were exported from Jasen Kozma's mailbox by using the Get-CalendarDiagnosticLog cmdlet with the LogLocation parameter and writes the advanced analysis of the items to an HTML file.</maml:para>
          <maml:para>For basic analysis of the items, don't include the DetailLevel parameter, or use the value Basic instead of Advanced.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-calendardiagnosticanalysis</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CalendarDiagnosticLog</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CalendarDiagnosticLog</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-CalendarDiagnosticLog cmdlet to collect a range of calendar logs. The Calendar Diagnostic logs track all calendar items and meeting requests in mailboxes. You can use this information to troubleshoot calendar issues that occur in mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The output of this cmdlet contains the following information:</maml:para>
      <maml:para>- IsFileLink: Indicates whether the calendar item has been exported to a .msg file by using the LogLocation parameter. Values are True or False.</maml:para>
      <maml:para>- Identity: Identifies the mailbox that holds the calendar item. An example value is: excallog://laura@contoso.com/?id=RgAAAACF/h/dHTTkQbdPrk7z+G4SBwCoatc7EmnEQq1iF35p17stAAAAAAFEAACoatc7EmnEQq1iF35p17stAAAAABEIAAAP.</maml:para>
      <maml:para>- LogDate: The date-time that the calendar item was logged.</maml:para>
      <maml:para>- NormalizedSubject: The Subject field of the calendar item.</maml:para>
      <maml:para>- CleanGlobalObjectId: The identifier that's constant throughout the lifetime of the calendar item. For example, 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55.</maml:para>
      <maml:para></maml:para>
      <maml:para>After you run the Get-CalendarDiagnosticLog cmdlet, you can analyze the calendar data using the Get-CalendarDiagnosticAnalysis cmdlet. For more information, see Get-CalendarDiagnosticAnalysis (https://docs.microsoft.com/powershell/module/exchange/get-calendardiagnosticanalysis).</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticLog</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox that contains the calendar items. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LogLocation</maml:name>
          <maml:description>
            <maml:para>The LogLocation parameter specifies the location to export the calendar items to .msg files. You can specify a local path, or a UNC path (`\Server\Share`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>In the location you specify, a subfolder is automatically created for the specified mailbox that holds the exported calendar items. For example, if you specify the value "C:\My Documents\Calendar Export" to export calendar items from the mailbox of Shannon Steele, the .msg files are actually stored in C:\My Documents\Calendar Export\ssteele@contoso.com.</maml:para>
            <maml:para>In on-premises Exchange organizations, you can use the Get-CalendarDiagnosticAnalysis cmdlet with the LogLocation parameter to analyze the exported .msg files. Note : Commands that use this parameter might fail if the calendar item doesn't have a title. If you receive errors when you use this parameter, run the command again and replace this parameter with redirection to a file (| Set-Content -Path "C:\My Documents\Calendar Export") or substitute the output to a PowerShell variable.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>MeetingID</maml:name>
          <maml:description>
            <maml:para>The MeetingID parameter filters the results by the globally unique identifier of the calendar item. The value is the CleanGlobalObjectId property of the calendar item that's available in the output of this cmdlet, or by using other MAPI examination tools. An example value is 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55. This value is constant throughout the lifetime of the calendar item.</maml:para>
            <maml:para>To find this value, it's easiest to first search for the calendar item by using the Subject, StartDate and EndDate parameters. After you find the calendar item that you want, you can use its CleanGlobalObjectId value for the MeetingID parameter in future commands.</maml:para>
            <maml:para>Don't use this parameter with the Subject parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Subject</maml:name>
          <maml:description>
            <maml:para>The Subject parameter identifies the calendar items by the specified text in the Subject field. The text values that you specify aren't case sensitive. If the value contains spaces, enclose the value in quotation marks ("). You can control whether to use exact matching by using the ExactMatch parameter.</maml:para>
            <maml:para>Don't use this parameter with the MeetingID parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>The EndDate parameter specifies the end date of the date range.</maml:para>
            <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
          <dev:type>
            <maml:name>ExDateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EntryId</maml:name>
          <maml:description>
            <maml:para>The EntryId parameter filters the results by entry ID. You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExactMatch</maml:name>
          <maml:description>
            <maml:para>The ExactMatch parameter specifies whether to use an exact match or a partial match for text values that you specify for the Subject parameter. Valid values are:</maml:para>
            <maml:para>- $true: The subject search uses an exact match and searches all calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" anywhere in the subject, but not "budgeting".</maml:para>
            <maml:para>- $false: The subject search uses a partial match and searches a maximum of 1000 calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" and "budgeting" anywhere in the subject. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>A partial subject match search may not return all of the relevant calendar items. Try using an exact subject match search for more accurate results.</maml:para>
            <maml:para>You only use this parameter with the Subject parameter.</maml:para>
            <maml:para>The value of this parameter is ignored when you use the MeetingId parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ItemClass</maml:name>
          <maml:description>
            <maml:para>The ItemClass parameter filters the results by the specified MessageClass property value of the calendar item (for example, IPM.Appointment). You can specify multiple values separated by commas.</maml:para>
            <maml:para>You can only use this parameter with the MeetingID parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ItemIds</maml:name>
          <maml:description>
            <maml:para>The ItemIds parameter filters the results by item ID. You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Latest</maml:name>
          <maml:description>
            <maml:para>The Latest switch specifies whether to return calendar log data for only the most recent calendar item. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>The StartDate parameter specifies the start date of the date range.</maml:para>
            <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
          <dev:type>
            <maml:name>ExDateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticLog</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox that contains the calendar items. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LogLocation</maml:name>
          <maml:description>
            <maml:para>The LogLocation parameter specifies the location to export the calendar items to .msg files. You can specify a local path, or a UNC path (`\Server\Share`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>In the location you specify, a subfolder is automatically created for the specified mailbox that holds the exported calendar items. For example, if you specify the value "C:\My Documents\Calendar Export" to export calendar items from the mailbox of Shannon Steele, the .msg files are actually stored in C:\My Documents\Calendar Export\ssteele@contoso.com.</maml:para>
            <maml:para>In on-premises Exchange organizations, you can use the Get-CalendarDiagnosticAnalysis cmdlet with the LogLocation parameter to analyze the exported .msg files. Note : Commands that use this parameter might fail if the calendar item doesn't have a title. If you receive errors when you use this parameter, run the command again and replace this parameter with redirection to a file (| Set-Content -Path "C:\My Documents\Calendar Export") or substitute the output to a PowerShell variable.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>MeetingID</maml:name>
          <maml:description>
            <maml:para>The MeetingID parameter filters the results by the globally unique identifier of the calendar item. The value is the CleanGlobalObjectId property of the calendar item that's available in the output of this cmdlet, or by using other MAPI examination tools. An example value is 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55. This value is constant throughout the lifetime of the calendar item.</maml:para>
            <maml:para>To find this value, it's easiest to first search for the calendar item by using the Subject, StartDate and EndDate parameters. After you find the calendar item that you want, you can use its CleanGlobalObjectId value for the MeetingID parameter in future commands.</maml:para>
            <maml:para>Don't use this parameter with the Subject parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticLog</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox that contains the calendar items. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LogLocation</maml:name>
          <maml:description>
            <maml:para>The LogLocation parameter specifies the location to export the calendar items to .msg files. You can specify a local path, or a UNC path (`\Server\Share`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>In the location you specify, a subfolder is automatically created for the specified mailbox that holds the exported calendar items. For example, if you specify the value "C:\My Documents\Calendar Export" to export calendar items from the mailbox of Shannon Steele, the .msg files are actually stored in C:\My Documents\Calendar Export\ssteele@contoso.com.</maml:para>
            <maml:para>In on-premises Exchange organizations, you can use the Get-CalendarDiagnosticAnalysis cmdlet with the LogLocation parameter to analyze the exported .msg files. Note : Commands that use this parameter might fail if the calendar item doesn't have a title. If you receive errors when you use this parameter, run the command again and replace this parameter with redirection to a file (| Set-Content -Path "C:\My Documents\Calendar Export") or substitute the output to a PowerShell variable.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Subject</maml:name>
          <maml:description>
            <maml:para>The Subject parameter identifies the calendar items by the specified text in the Subject field. The text values that you specify aren't case sensitive. If the value contains spaces, enclose the value in quotation marks ("). You can control whether to use exact matching by using the ExactMatch parameter.</maml:para>
            <maml:para>Don't use this parameter with the MeetingID parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the mailbox that contains the calendar items. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LogLocation</maml:name>
        <maml:description>
          <maml:para>The LogLocation parameter specifies the location to export the calendar items to .msg files. You can specify a local path, or a UNC path (`\Server\Share`). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>In the location you specify, a subfolder is automatically created for the specified mailbox that holds the exported calendar items. For example, if you specify the value "C:\My Documents\Calendar Export" to export calendar items from the mailbox of Shannon Steele, the .msg files are actually stored in C:\My Documents\Calendar Export\ssteele@contoso.com.</maml:para>
          <maml:para>In on-premises Exchange organizations, you can use the Get-CalendarDiagnosticAnalysis cmdlet with the LogLocation parameter to analyze the exported .msg files. Note : Commands that use this parameter might fail if the calendar item doesn't have a title. If you receive errors when you use this parameter, run the command again and replace this parameter with redirection to a file (| Set-Content -Path "C:\My Documents\Calendar Export") or substitute the output to a PowerShell variable.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
        <maml:name>MeetingID</maml:name>
        <maml:description>
          <maml:para>The MeetingID parameter filters the results by the globally unique identifier of the calendar item. The value is the CleanGlobalObjectId property of the calendar item that's available in the output of this cmdlet, or by using other MAPI examination tools. An example value is 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55. This value is constant throughout the lifetime of the calendar item.</maml:para>
          <maml:para>To find this value, it's easiest to first search for the calendar item by using the Subject, StartDate and EndDate parameters. After you find the calendar item that you want, you can use its CleanGlobalObjectId value for the MeetingID parameter in future commands.</maml:para>
          <maml:para>Don't use this parameter with the Subject parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Subject</maml:name>
        <maml:description>
          <maml:para>The Subject parameter identifies the calendar items by the specified text in the Subject field. The text values that you specify aren't case sensitive. If the value contains spaces, enclose the value in quotation marks ("). You can control whether to use exact matching by using the ExactMatch parameter.</maml:para>
          <maml:para>Don't use this parameter with the MeetingID parameter, because the value of the MeetingID parameter takes precedence.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EndDate</maml:name>
        <maml:description>
          <maml:para>The EndDate parameter specifies the end date of the date range.</maml:para>
          <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
        <dev:type>
          <maml:name>ExDateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EntryId</maml:name>
        <maml:description>
          <maml:para>The EntryId parameter filters the results by entry ID. You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExactMatch</maml:name>
        <maml:description>
          <maml:para>The ExactMatch parameter specifies whether to use an exact match or a partial match for text values that you specify for the Subject parameter. Valid values are:</maml:para>
          <maml:para>- $true: The subject search uses an exact match and searches all calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" anywhere in the subject, but not "budgeting".</maml:para>
          <maml:para>- $false: The subject search uses a partial match and searches a maximum of 1000 calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" and "budgeting" anywhere in the subject. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>A partial subject match search may not return all of the relevant calendar items. Try using an exact subject match search for more accurate results.</maml:para>
          <maml:para>You only use this parameter with the Subject parameter.</maml:para>
          <maml:para>The value of this parameter is ignored when you use the MeetingId parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ItemClass</maml:name>
        <maml:description>
          <maml:para>The ItemClass parameter filters the results by the specified MessageClass property value of the calendar item (for example, IPM.Appointment). You can specify multiple values separated by commas.</maml:para>
          <maml:para>You can only use this parameter with the MeetingID parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ItemIds</maml:name>
        <maml:description>
          <maml:para>The ItemIds parameter filters the results by item ID. You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Latest</maml:name>
        <maml:description>
          <maml:para>The Latest switch specifies whether to return calendar log data for only the most recent calendar item. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartDate</maml:name>
        <maml:description>
          <maml:para>The StartDate parameter specifies the start date of the date range.</maml:para>
          <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
        <dev:type>
          <maml:name>ExDateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticLog -Identity "Shannon Steele" -Subject "Weekly development meeting" -ExactMatch $true</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the Calendar Diagnostic log entries for Shannon Steele's mailbox by using the subject Weekly development meeting.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticLog -Identity oevans -StartDate "6/1/2018 6:00:00 AM" -EndDate "6/30/2018 5:00:00 PM"</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the Calendar Diagnostic log entries for Oscar Evans' mailbox from 6/1/2018 to 6/30/2018.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticLog -Identity jkozma@contoso.com -Subject "Weekly development meeting" -Latest</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the Calendar Diagnostic log data only for the most recent calendar item in Jasen Kozma's mailbox with a message subject of "Weekly development meeting".</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticLog -Identity "Jasen Kozma" -Subject "Budget Meeting" -ExactMatch $true -LogLocation "C:\My Documents\Calendar Diagnostic Export"</dev:code>
        <dev:remarks>
          <maml:para>This example exports all calendar items in the Calendar Diagnostic log for Jasen Kozma's mailbox that have "Budget Meeting" anywhere in the subject to the specified folder. Notes :</maml:para>
          <maml:para>- In this example, the message files are written to C:\My Documents\Calendar Diagnostic Export\jkozma@contoso.com.</maml:para>
          <maml:para>- In on-premises Exchange organizations, you can use the Get-CalendarDiagnosticAnalysis cmdlet with the LogLocation parameter to analyze the exported .msg files.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-calendardiagnosticlog</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CalendarDiagnosticObjects</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CalendarDiagnosticObjects</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Get-CalendarDiagnosticObjects cmdlet to collect a range of calendar logs. The calendar diagnostic logs track important calendar-related event data for each mailbox, and can be used to troubleshoot calendar issues that occur in mailboxes. The logs track all calendar items and meeting messages. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Some of the more interesting properties that are returned in the results are:</maml:para>
      <maml:para>- AppointmentState: 1 = The appointment is a meeting, 2 = The appointment has been received, 4 = The appointment has been cancelled, and 8 = the appointment is a forwarded appointment.</maml:para>
      <maml:para>- CalendarLogTriggerAction: The action that's taken on the item (for example, Create or Update).</maml:para>
      <maml:para>- ClientInfoString: The entity that made the change (for example, `Client=OWA;&lt;AdditionalDetails&gt;`, `Client=WebServices;&lt;AdditionalDetails&gt;`;, or `Client=TBA;Service=MSExchangeMailboxAssistants;Action=ELCAssistant;`).</maml:para>
      <maml:para>- MeetingRequestType: 1 = The meeting message is a meeting request, 65536 = The meeting message is a full update to an existing meeting, 131072 = The meeting message is an informational update to an existing meeting, 262144 = The meeting message is a silent update, 524288 = The update is outdated, or 1048576 = The meeting message is forwarded to a delegate, and the copy is marked as informational.</maml:para>
      <maml:para>- OriginalLastModifiedTime: Used as the primary sort field to order the events.</maml:para>
      <maml:para>- ResponseType: 0 = The organizer hasn't received a response, 1 = The organizer's copy of the meeting, 2 = Tentative, 3 = Accept, 4 = Decline, or 5 = The attendee hasn't responded.</maml:para>
      <maml:para>- ResponsibleUserName: The LegacyExchangeDN value of the user who made the change (for example, `/o=ExchangeLabs/ou=Exchange Administrative Group (FYDIBOHF23SPDLT)/cn=Configuration/cn=Servers/cn=BN6PR11MB1587/cn=Microsoft System Attendant` or `/o=ExchangeLabs/ou=Exchange Administrative Group (FYDIBOHF23SPDLT)/cn=Recipients/cn=696eea97d3c449eab648920d03385efb-admin`).</maml:para>
      <maml:para></maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-CalendarDiagnosticObjects</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox or Microsoft 365 Group whose calendar you want to view. You can use any value that uniquely identifies the mailbox or Microsoft 365 Group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">UnifiedGroupOrUserMailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>UnifiedGroupOrUserMailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConfigurationName</maml:name>
          <maml:description>
            <maml:para>{{ Fill ConfigurationName Description }}</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomPropertyNames</maml:name>
          <maml:description>
            <maml:para>The CustomPropertyNames parameter returns the specified calendar item custom property in the results. For valid values, see Values for the CustomPropertyNames parameter in Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/values-for-custompropertynames-parameter).</maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EndDate</maml:name>
          <maml:description>
            <maml:para>The EndDate parameter specifies the end date of the date range.</maml:para>
            <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
          <dev:type>
            <maml:name>ExDateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EntryId</maml:name>
          <maml:description>
            <maml:para>The EntryID parameter filters the results by the specified EntryID property value, which corresponds to the MAPI property PR_ENTRYID.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EwsId</maml:name>
          <maml:description>
            <maml:para>{{ Fill EwsId Description }}</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExactMatch</maml:name>
          <maml:description>
            <maml:para>The ExactMatch parameter specifies whether to use an exact match or a partial match for text values that you specify for the Subject parameter. Valid values are:</maml:para>
            <maml:para>- $true: The subject search uses an exact match and searches all calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" anywhere in the subject, but not "budgeting".</maml:para>
            <maml:para>- $false: The subject search uses a partial match and searches a maximum of 1000 calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" and "budgeting" anywhere in the subject. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>A partial subject match search may not return all of the relevant calendar items. Try using an exact subject match search for more accurate results.</maml:para>
            <maml:para>You only use this parameter with the Subject parameter.</maml:para>
            <maml:para>The value of this parameter is ignored when you use the MeetingId parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ItemClass</maml:name>
          <maml:description>
            <maml:para>The ItemClass parameter filters the results by the specified MessageClass property value of the calendar item (for example, IPM.Appointment). You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ItemIds</maml:name>
          <maml:description>
            <maml:para>The ItemIds parameter filters the results by item ID. You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MeetingId</maml:name>
          <maml:description>
            <maml:para>The MeetingId parameter filters the results by the globally unique identifier of the calendar item. The value is the CleanGlobalObjectId property of the calendar item that's available in the output of this cmdlet, or by using other MAPI examination tools. An example value is 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55. This value is constant throughout the lifetime of the calendar item.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ODataId</maml:name>
          <maml:description>
            <maml:para>{{ Fill ODataId Description }}</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShouldBindToItem</maml:name>
          <maml:description>
            <maml:para>The ShouldBindToItem parameter specifies whether to truncate large streamable property values (for example, AppointmentRecurrenceBlob). Valid values are:</maml:para>
            <maml:para>- $true: The values of large streamable properties aren't truncated, so the full value is returned.</maml:para>
            <maml:para>- $false: The values of large streamable properties are truncated. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShouldDecodeEnums</maml:name>
          <maml:description>
            <maml:para>{{ Fill ShouldDecodeEnums Description }}</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShouldFetchAttendeeCollection</maml:name>
          <maml:description>
            <maml:para>{{ Fill ShouldFetchAttendeeCollection Description }}</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ShouldFetchRecurrenceExceptions</maml:name>
          <maml:description>
            <maml:para>The ShouldFetchRecurrenceExceptions parameter specifies whether to include exceptions to recurring meetings. Valid values are:</maml:para>
            <maml:para>- $true: Include exceptions to recurring meetings. When you use this value, you also need to use the ItemIds parameter.</maml:para>
            <maml:para>- $false: Don't Include exceptions to recurring meetings. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartDate</maml:name>
          <maml:description>
            <maml:para>The StartDate parameter specifies the start date of the date range.</maml:para>
            <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
          <dev:type>
            <maml:name>ExDateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Subject</maml:name>
          <maml:description>
            <maml:para>The Subject parameter identifies the calendar items by the specified text in the Subject field. The text values that you specify aren't case sensitive. If the value contains spaces, enclose the value in quotation marks. You can control whether to use exact matching by using the ExactMatch parameter</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the mailbox or Microsoft 365 Group whose calendar you want to view. You can use any value that uniquely identifies the mailbox or Microsoft 365 Group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">UnifiedGroupOrUserMailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>UnifiedGroupOrUserMailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConfigurationName</maml:name>
        <maml:description>
          <maml:para>{{ Fill ConfigurationName Description }}</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomPropertyNames</maml:name>
        <maml:description>
          <maml:para>The CustomPropertyNames parameter returns the specified calendar item custom property in the results. For valid values, see Values for the CustomPropertyNames parameter in Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/values-for-custompropertynames-parameter).</maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EndDate</maml:name>
        <maml:description>
          <maml:para>The EndDate parameter specifies the end date of the date range.</maml:para>
          <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
        <dev:type>
          <maml:name>ExDateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EntryId</maml:name>
        <maml:description>
          <maml:para>The EntryID parameter filters the results by the specified EntryID property value, which corresponds to the MAPI property PR_ENTRYID.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EwsId</maml:name>
        <maml:description>
          <maml:para>{{ Fill EwsId Description }}</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExactMatch</maml:name>
        <maml:description>
          <maml:para>The ExactMatch parameter specifies whether to use an exact match or a partial match for text values that you specify for the Subject parameter. Valid values are:</maml:para>
          <maml:para>- $true: The subject search uses an exact match and searches all calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" anywhere in the subject, but not "budgeting".</maml:para>
          <maml:para>- $false: The subject search uses a partial match and searches a maximum of 1000 calendar items in the mailbox. For example, if you search for "budget", the search looks for items that have "budget" and "budgeting" anywhere in the subject. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>A partial subject match search may not return all of the relevant calendar items. Try using an exact subject match search for more accurate results.</maml:para>
          <maml:para>You only use this parameter with the Subject parameter.</maml:para>
          <maml:para>The value of this parameter is ignored when you use the MeetingId parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ItemClass</maml:name>
        <maml:description>
          <maml:para>The ItemClass parameter filters the results by the specified MessageClass property value of the calendar item (for example, IPM.Appointment). You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ItemIds</maml:name>
        <maml:description>
          <maml:para>The ItemIds parameter filters the results by item ID. You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MeetingId</maml:name>
        <maml:description>
          <maml:para>The MeetingId parameter filters the results by the globally unique identifier of the calendar item. The value is the CleanGlobalObjectId property of the calendar item that's available in the output of this cmdlet, or by using other MAPI examination tools. An example value is 040000008200E00074C5B7101A82E00800000000B0225ABF0710C80100000000000000001000000005B27C05AA7C4646B0835D5EB4E41C55. This value is constant throughout the lifetime of the calendar item.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ODataId</maml:name>
        <maml:description>
          <maml:para>{{ Fill ODataId Description }}</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>This parameter determines the number of results returned by the cmdlet. The maximum value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShouldBindToItem</maml:name>
        <maml:description>
          <maml:para>The ShouldBindToItem parameter specifies whether to truncate large streamable property values (for example, AppointmentRecurrenceBlob). Valid values are:</maml:para>
          <maml:para>- $true: The values of large streamable properties aren't truncated, so the full value is returned.</maml:para>
          <maml:para>- $false: The values of large streamable properties are truncated. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShouldDecodeEnums</maml:name>
        <maml:description>
          <maml:para>{{ Fill ShouldDecodeEnums Description }}</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShouldFetchAttendeeCollection</maml:name>
        <maml:description>
          <maml:para>{{ Fill ShouldFetchAttendeeCollection Description }}</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ShouldFetchRecurrenceExceptions</maml:name>
        <maml:description>
          <maml:para>The ShouldFetchRecurrenceExceptions parameter specifies whether to include exceptions to recurring meetings. Valid values are:</maml:para>
          <maml:para>- $true: Include exceptions to recurring meetings. When you use this value, you also need to use the ItemIds parameter.</maml:para>
          <maml:para>- $false: Don't Include exceptions to recurring meetings. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartDate</maml:name>
        <maml:description>
          <maml:para>The StartDate parameter specifies the start date of the date range.</maml:para>
          <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
        <dev:type>
          <maml:name>ExDateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Subject</maml:name>
        <maml:description>
          <maml:para>The Subject parameter identifies the calendar items by the specified text in the Subject field. The text values that you specify aren't case sensitive. If the value contains spaces, enclose the value in quotation marks. You can control whether to use exact matching by using the ExactMatch parameter</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticObjects -Identity "Pedro Pizarro" -Subject "Team Meeting" -ExactMatch $true</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the calendar diagnostic logs from Pedro Pizarro's mailbox for all items where the Subject is an exact match for Team Meeting.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>$A = Get-CalendarDiagnosticObjects -Identity "Pedro Pizarro" -Subject "Team Meeting" -ExactMatch $true
$A | Select-Object *,@{n='OLMT'
e={[DateTime]::Parse($_.OriginalLastModifiedTime.ToString())}} | sort OLMT | Format-Table OriginalLastModifiedTime,CalendarLogTriggerAction,ItemClass,ClientInfoString</dev:code>
        <dev:remarks>
          <maml:para>This is the same as the previous example, but now the results are sorted by original last modified time.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticObjects -Identity "Pedro Pizarro" -MeetingID 40000008200E00074C5B7101A82E00800000000693ADAA3B5FCD201000000000000000010000000FF760A70460EAA4096B879872DF24F49</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the calendar diagnostic logs for Pedro Pizarro's mailbox for a meeting with the specified unique global object ID (GOID).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>Get-CalendarDiagnosticObjects -Identity "Pedro Pizarro" -Subject "Team Lunch" -StartDate 7/1/2018 -EndDate 7/31/2018 | Export-Csv "C:\My Documents\Team Lunch Meeting.csv" -NoTypeInformation</dev:code>
        <dev:remarks>
          <maml:para>This example returns diagnostic information for meetings with the subject Team Lunch in Pedro Pizarro's mailbox in the month of July, 2018, and exports the results to the file C:\My Documents\Team Lunch Meeting.csv.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-calendardiagnosticobjects</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CalendarProcessing</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CalendarProcessing</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-CalendarProcessing cmdlet to view the calendar processing options for resource mailboxes, which include the Calendar Attendant, resource booking assistant and calendar configuration. Note that the settings returned by this cmdlet are editable only on resource mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>For details about the properties that are returned in the output of this cmdlet, see Set-CalendarProcessing (https://docs.microsoft.com/powershell/module/exchange/set-calendarprocessing).</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-CalendarProcessing</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the resource mailbox that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the resource mailbox that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-CalendarProcessing -Identity "Room 212" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example shows the calendar processing options for the resource mailbox Room 212.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-calendarprocessing</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DistributionGroup</command:name>
      <command:verb>Get</command:verb>
      <command:noun>DistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-DistributionGroup cmdlet to view existing distribution groups or mail-enabled security groups. To view the members of a group, use the Get-DistributionGroupMember cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Anr</maml:name>
          <maml:description>
            <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
            <maml:para>- CommonName (CN)</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientTypeDetails</maml:name>
          <maml:description>
            <maml:para>The RecipientTypeDetails parameter filters the results by the specified distribution group subtype. Valid values are:</maml:para>
            <maml:para>- MailNonUniversalGroup</maml:para>
            <maml:para>- MailUniversalDistributionGroup</maml:para>
            <maml:para>- MailUniversalSecurityGroup</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientTypeDetails[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- City</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Office</maml:para>
            <maml:para>- ServerLegacyDN</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to view. You can use any values that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientTypeDetails</maml:name>
          <maml:description>
            <maml:para>The RecipientTypeDetails parameter filters the results by the specified distribution group subtype. Valid values are:</maml:para>
            <maml:para>- MailNonUniversalGroup</maml:para>
            <maml:para>- MailUniversalDistributionGroup</maml:para>
            <maml:para>- MailUniversalSecurityGroup</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientTypeDetails[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- City</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Office</maml:para>
            <maml:para>- ServerLegacyDN</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter filters the results by the owner of the group. You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientTypeDetails</maml:name>
          <maml:description>
            <maml:para>The RecipientTypeDetails parameter filters the results by the specified distribution group subtype. Valid values are:</maml:para>
            <maml:para>- MailNonUniversalGroup</maml:para>
            <maml:para>- MailUniversalDistributionGroup</maml:para>
            <maml:para>- MailUniversalSecurityGroup</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientTypeDetails[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- City</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Office</maml:para>
            <maml:para>- ServerLegacyDN</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Anr</maml:name>
        <maml:description>
          <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
          <maml:para>- CommonName (CN)</maml:para>
          <maml:para>- DisplayName</maml:para>
          <maml:para>- FirstName</maml:para>
          <maml:para>- LastName</maml:para>
          <maml:para>- Alias</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
          <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
          <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
          <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
          <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
          <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to view. You can use any values that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter filters the results by the owner of the group. You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientTypeDetails</maml:name>
        <maml:description>
          <maml:para>The RecipientTypeDetails parameter filters the results by the specified distribution group subtype. Valid values are:</maml:para>
          <maml:para>- MailNonUniversalGroup</maml:para>
          <maml:para>- MailUniversalDistributionGroup</maml:para>
          <maml:para>- MailUniversalSecurityGroup</maml:para>
          <maml:para>- RoomList</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientTypeDetails[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SortBy</maml:name>
        <maml:description>
          <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
          <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
          <maml:para>You can sort by the following properties:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- DisplayName</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- City</maml:para>
          <maml:para>- FirstName</maml:para>
          <maml:para>- LastName</maml:para>
          <maml:para>- Office</maml:para>
          <maml:para>- ServerLegacyDN</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-DistributionGroup</dev:code>
        <dev:remarks>
          <maml:para>This examples returns a summary list of all distribution groups and mail-enabled security groups in your organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-DistributionGroup -Identity "Marketing Reports" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns detailed information about the distribution group named Marketing Reports.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-DistributionGroup -Anr marketing | Format-Table Name, ManagedBy -Auto</dev:code>
        <dev:remarks>
          <maml:para>This example returns all distribution groups and mail-enabled security groups whose names contain the string "marketing" and shows the group owners.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-distributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DistributionGroupMember</command:name>
      <command:verb>Get</command:verb>
      <command:noun>DistributionGroupMember</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-DistributionGroupMember cmdlet to view the members of distribution groups and mail-enabled security groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>If your organization has multiple Active Directory domains, you may need to run the Set-ADServerSettings cmdlet with the ViewEntireForest parameter set to $true before running the Get-DistributionGroupMember cmdlet to view the entire forest. For more information, see Example 2.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DistributionGroupMember</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupMemberIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupMemberIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupMemberIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupMemberIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
          <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-DistributionGroupMember -Identity "Marketing USA"</dev:code>
        <dev:remarks>
          <maml:para>This example returns the existing distribution group members for the distribution group named Marketing USA.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-ADServerSettings -ViewEntireForest $true
Get-DistributionGroupMember -Identity "Marketing Worldwide"</dev:code>
        <dev:remarks>
          <maml:para>This example sets the scope of the search to the entire forest by running the Set-ADServerSettings cmdlet, then the Get-DistributionGroupMember cmdlet searches the entire forest for the distribution group members in the Marketing Worldwide distribution group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-distributiongroupmember</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DynamicDistributionGroup</command:name>
      <command:verb>Get</command:verb>
      <command:noun>DynamicDistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-DynamicDistributionGroup cmdlet to view existing dynamic distribution groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>A dynamic distribution group queries mail-enabled objects and builds the group membership based on the results. The group membership is recalculated whenever an email message is sent to the group.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DynamicDistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Anr</maml:name>
          <maml:description>
            <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
            <maml:para>- CommonName (CN)</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DynamicDistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the dynamic distribution group that you want to view. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DynamicGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DynamicDistributionGroup</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter filters the results by the owner of the group. You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Anr</maml:name>
        <maml:description>
          <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
          <maml:para>- CommonName (CN)</maml:para>
          <maml:para>- DisplayName</maml:para>
          <maml:para>- FirstName</maml:para>
          <maml:para>- LastName</maml:para>
          <maml:para>- Alias</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
          <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
          <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
          <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
          <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
          <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the dynamic distribution group that you want to view. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DynamicGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter filters the results by the owner of the group. You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SortBy</maml:name>
        <maml:description>
          <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
          <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
          <maml:para>You can sort by the following properties:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- DisplayName</maml:para>
          <maml:para>- Alias</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-DynamicDistributionGroup</dev:code>
        <dev:remarks>
          <maml:para>This example returns a summary list of all dynamic distribution groups in your organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-DynamicDistributionGroup -Identity "Marketing Department" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns detailed information about the dynamic distribution group named Marketing Department.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-DynamicDistributionGroup -Anr *research* | Format-Table Name, ManagedBy -Auto</dev:code>
        <dev:remarks>
          <maml:para>This example returns all dynamic distribution groups whose names contain the string "research" and shows the group owners.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>$FTE = Get-DynamicDistributionGroup "Full Time Employees"
Get-Recipient -RecipientPreviewFilter $FTE.RecipientFilter -OrganizationalUnit $FTE.RecipientContainer</dev:code>
        <dev:remarks>
          <maml:para>This example returns the members for the dynamic distribution group named Full Time Employees. The first command stores the dynamic distribution group object in the variable $FTE. The second command uses the Get-Recipient cmdlet to list the recipients that match the criteria defined for the dynamic distribution group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-dynamicdistributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-EligibleDistributionGroupForMigration</command:name>
      <command:verb>Get</command:verb>
      <command:noun>EligibleDistributionGroupForMigration</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available or functional only in the cloud-based service.</maml:para>
        <maml:para>Use the Get-EligibleDistributionGroupForMigration cmdlet to identify distribution groups that can be upgraded to Microsoft 365 Groups. You can't upgrade mail-enabled security groups to Microsoft 365 Groups. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-EligibleDistributionGroupForMigration</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter filters the results by the email address of the specified distribution group. If no results are returned for the specified email address, the group can't be upgraded to a Microsoft 365 Group.</maml:para>
            <maml:para>You can't use this parameter with the ManagedBy parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-EligibleDistributionGroupForMigration</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter filters the results by the manager of the distribution group (the ManagedBy property). You can use any value that uniquely identifies the distribution group manager. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can't use this parameter with the Identity parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter filters the results by the email address of the specified distribution group. If no results are returned for the specified email address, the group can't be upgraded to a Microsoft 365 Group.</maml:para>
          <maml:para>You can't use this parameter with the ManagedBy parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter filters the results by the manager of the distribution group (the ManagedBy property). You can use any value that uniquely identifies the distribution group manager. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can't use this parameter with the Identity parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-EligibleDistributionGroupForMigration -ResultSize unlimited</dev:code>
        <dev:remarks>
          <maml:para>This example returns a summary list of all distribution groups that can be upgraded to Microsoft 365 Groups.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-eligibledistributiongroupformigration</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FederatedOrganizationIdentifier</command:name>
      <command:verb>Get</command:verb>
      <command:noun>FederatedOrganizationIdentifier</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-FederatedOrganizationIdentifier cmdlet to retrieve the Exchange organization's federated organization identifier and related details, such as federated domains, organization contact and status.</maml:para>
        <maml:para>For more information, see Federation (https://docs.microsoft.com/exchange/federation-exchange-2013-help).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FederatedOrganizationIdentifier</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the organization ID.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeExtendedDomainInfo</maml:name>
          <maml:description>
            <maml:para>The IncludeExtendedDomainInfo switch specifies that the command query Microsoft Federation Gateway for the status of each accepted domain that's federated. The status is returned with each domain in the Domains property.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the organization ID.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludeExtendedDomainInfo</maml:name>
        <maml:description>
          <maml:para>The IncludeExtendedDomainInfo switch specifies that the command query Microsoft Federation Gateway for the status of each accepted domain that's federated. The status is returned with each domain in the Domains property.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-FederatedOrganizationIdentifier</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the Exchange organization's federated organization identifier.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-FederatedOrganizationIdentifier -IncludeExtendedDomainInfo</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the Exchange organization's federated organization identifier. The IncludeExtendedDomainInfo switch is used to return the status of federated domains from the Microsoft Federation Gateway.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-federatedorganizationidentifier</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FederationInformation</command:name>
      <command:verb>Get</command:verb>
      <command:noun>FederationInformation</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-FederationInformation cmdlet to get federation information, including federated domain names and target URLs, from an external Exchange organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-FederationInformation cmdlet retrieves federation information from the domain specified. Results from the cmdlet can be piped to the New-OrganizationRelationship cmdlet to establish an organization relationship with the Exchange organization being queried.</maml:para>
      <maml:para>The domain specified should have federation enabled.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FederationInformation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DomainName</maml:name>
          <maml:description>
            <maml:para>The DomainName parameter specifies the domain name for which federation information is to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
          <dev:type>
            <maml:name>SmtpDomain</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassAdditionalDomainValidation</maml:name>
          <maml:description>
            <maml:para>The BypassAdditionalDomainValidation switch specifies that the command skip validation of domains from the external Exchange organization. You don't need to specify a value with this switch.</maml:para>
            <maml:para>We recommend that you only use this switch to retrieve federation information in a hybrid deployment between on-premises and Exchange Online organizations. Don't use this switch to retrieve federation information for on-premises Exchange organizations in a cross-organization arrangement.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>The Force switch specifies whether to suppress warning or confirmation messages. You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate. You don't need to specify a value with this switch.</maml:para>
            <maml:para>A confirmation prompt warns you if the host name in the Autodiscover endpoint of the domain doesn't match the Secure Sockets Layer (SSL) certificate presented by the endpoint and the host name isn't specified in the TrustedHostnames parameter.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TrustedHostnames</maml:name>
          <maml:description>
            <maml:para>The TrustedHostnames parameter specifies the fully qualified domain name (FQDN) of federation endpoints. Federation endpoints are the client access (frontend) services on Mailbox servers in an organization with federation enabled. Explicitly specifying the TrustedHostnames parameter allows the cmdlet to bypass prompting if the certificate presented by the endpoint doesn't match the domain name specified in the DomainName parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DomainName</maml:name>
        <maml:description>
          <maml:para>The DomainName parameter specifies the domain name for which federation information is to be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
        <dev:type>
          <maml:name>SmtpDomain</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassAdditionalDomainValidation</maml:name>
        <maml:description>
          <maml:para>The BypassAdditionalDomainValidation switch specifies that the command skip validation of domains from the external Exchange organization. You don't need to specify a value with this switch.</maml:para>
          <maml:para>We recommend that you only use this switch to retrieve federation information in a hybrid deployment between on-premises and Exchange Online organizations. Don't use this switch to retrieve federation information for on-premises Exchange organizations in a cross-organization arrangement.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>The Force switch specifies whether to suppress warning or confirmation messages. You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate. You don't need to specify a value with this switch.</maml:para>
          <maml:para>A confirmation prompt warns you if the host name in the Autodiscover endpoint of the domain doesn't match the Secure Sockets Layer (SSL) certificate presented by the endpoint and the host name isn't specified in the TrustedHostnames parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TrustedHostnames</maml:name>
        <maml:description>
          <maml:para>The TrustedHostnames parameter specifies the fully qualified domain name (FQDN) of federation endpoints. Federation endpoints are the client access (frontend) services on Mailbox servers in an organization with federation enabled. Explicitly specifying the TrustedHostnames parameter allows the cmdlet to bypass prompting if the certificate presented by the endpoint doesn't match the domain name specified in the DomainName parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-FederationInformation -DomainName contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example gets federation information from the domain contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-federationinformation</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FederationTrust</command:name>
      <command:verb>Get</command:verb>
      <command:noun>FederationTrust</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-FederationTrust cmdlet to view the federation trust configured for the Exchange organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FederationTrust</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies a federation trust ID. If not specified, the cmdlet returns all federation trusts configured for the Exchange organization.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">FederationTrustIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>FederationTrustIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies a federation trust ID. If not specified, the cmdlet returns all federation trusts configured for the Exchange organization.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">FederationTrustIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>FederationTrustIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-FederationTrust | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves properties of the federation trust configured for the Exchange organization.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-federationtrust</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Group</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Group</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-Group cmdlet to view existing group objects in your organization. This cmdlet returns security groups, mail-enabled security groups, distribution groups, and role groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Group cmdlet returns no mail-related properties for distribution groups or mail-enabled security groups, and no role group-related properties for role groups. To view the object-specific properties for a group, you need to use the corresponding cmdlet based on the object type (for example, Get-DistributionGroup or Get-RoleGroup).</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Group</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Anr</maml:name>
          <maml:description>
            <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
            <maml:para>- CommonName (CN)</maml:para>
            <maml:para>- DisplayName</maml:para>
            <maml:para>- FirstName</maml:para>
            <maml:para>- LastName</maml:para>
            <maml:para>- Alias</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientTypeDetails</maml:name>
          <maml:description>
            <maml:para>The RecipientTypeDetails parameter filters the results by the specified group subtype. Valid values are:</maml:para>
            <maml:para>- MailNonUniversalGroup</maml:para>
            <maml:para>- MailUniversalDistributionGroup</maml:para>
            <maml:para>- MailUniversalSecurityGroup</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientTypeDetails[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Group</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the group object that you want to view. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
            <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientTypeDetails</maml:name>
          <maml:description>
            <maml:para>The RecipientTypeDetails parameter filters the results by the specified group subtype. Valid values are:</maml:para>
            <maml:para>- MailNonUniversalGroup</maml:para>
            <maml:para>- MailUniversalDistributionGroup</maml:para>
            <maml:para>- MailUniversalSecurityGroup</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientTypeDetails[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SortBy</maml:name>
          <maml:description>
            <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
            <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
            <maml:para>You can sort by the following properties:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- DisplayName</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Anr</maml:name>
        <maml:description>
          <maml:para>The Anr parameter specifies a string on which to perform an ambiguous name resolution (ANR) search. You can specify a partial string and search for objects with an attribute that matches that string. The default attributes searched are:</maml:para>
          <maml:para>- CommonName (CN)</maml:para>
          <maml:para>- DisplayName</maml:para>
          <maml:para>- FirstName</maml:para>
          <maml:para>- LastName</maml:para>
          <maml:para>- Alias</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>The Credential parameter specifies the username and password that's used to run this command. Typically, you use this parameter in scripts or when you need to provide different credentials that have the required permissions.</maml:para>
          <maml:para>A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see Get-Credential (https://docs.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>The Filter parameter uses OPath syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
          <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
          <maml:para>- Property is a filterable property. For more information about the filterable properties, see Filterable properties for the Filter parameter (https://docs.microsoft.com/powershell/exchange/filter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
          <maml:para>You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.</maml:para>
          <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the group object that you want to view. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter filters the results based on the object's location in Active Directory. Only objects that exist in the specified location are returned. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientTypeDetails</maml:name>
        <maml:description>
          <maml:para>The RecipientTypeDetails parameter filters the results by the specified group subtype. Valid values are:</maml:para>
          <maml:para>- MailNonUniversalGroup</maml:para>
          <maml:para>- MailUniversalDistributionGroup</maml:para>
          <maml:para>- MailUniversalSecurityGroup</maml:para>
          <maml:para>- RoomList</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientTypeDetails[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientTypeDetails[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SortBy</maml:name>
        <maml:description>
          <maml:para>The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.</maml:para>
          <maml:para>If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (*) in the property names are supported.</maml:para>
          <maml:para>You can sort by the following properties:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- DisplayName</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-Group</dev:code>
        <dev:remarks>
          <maml:para>This example returns a summary list of all groups in your organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-Group -Identity "Marketing Reports" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns detailed information for the group named Marketing Reports.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-Group -Anr Mar*</dev:code>
        <dev:remarks>
          <maml:para>This example uses the Anr parameter to return all groups that begin with "Mar".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-group</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-IntraOrganizationConfiguration</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IntraOrganizationConfiguration</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-IntraOrganizationConfiguration cmdlet to view the component settings of a hybrid Exchange deployment.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>A hybrid Exchange deployment results in one logical organization made up of a number of physical Exchange instances. Hybrid Exchange environments contain more than one Exchange instance and support topologies like two on-premises Microsoft Exchange forests in an organization, an Exchange on-premises organization and an Exchange Online organization or two Exchange Online organizations.</maml:para>
      <maml:para>Hybrid environments are enabled by Intra-Organization connectors. The connectors can be created and managed by cmdlets like New-IntraOrganizationConnector, but we strongly recommend that you use the Hybrid Configuration wizard when configuring a hybrid deployment with an Exchange Online organization.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-IntraOrganizationConfiguration</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="2" aliases="none">
          <maml:name>OrganizationGuid</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The OrganizationGuid parameter specifies the on-premises organization in a hybrid deployment that has multiple on-premises organizations defined. If you don't use the OrganizationGuid parameter for these types of hybrid deployments, the Get-IntraOrganizationConfiguration cmdlet will generate errors. To view the on-premises organization GUID values that are required for this parameter, use the Get-OnPremisesOrganization cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OnPremisesOrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OnPremisesOrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="2" aliases="none">
        <maml:name>OrganizationGuid</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The OrganizationGuid parameter specifies the on-premises organization in a hybrid deployment that has multiple on-premises organizations defined. If you don't use the OrganizationGuid parameter for these types of hybrid deployments, the Get-IntraOrganizationConfiguration cmdlet will generate errors. To view the on-premises organization GUID values that are required for this parameter, use the Get-OnPremisesOrganization cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OnPremisesOrganizationIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OnPremisesOrganizationIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-IntraOrganizationConfiguration</dev:code>
        <dev:remarks>
          <maml:para>This example returns the settings of the intra-organization configuration.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-intraorganizationconfiguration</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-IntraOrganizationConnector</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IntraOrganizationConnector</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-IntraOrganizationConnector cmdlet to view the settings of Intra-Organization connectors.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Intra-Organizational connectors enable features and services between divisions in your Exchange organization. It allows for the expansion of organizational boundaries for features and services across different hosts and network boundaries, such as between Active Directory forests, between on-premises and cloud-based organizations, or between tenants hosted in the same or different datacenters.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-IntraOrganizationConnector</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to view. You can use any value that uniquely identifies the connector. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to view. You can use any value that uniquely identifies the connector. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-IntraOrganizationConnector</dev:code>
        <dev:remarks>
          <maml:para>This example returns a summary list of all Intra-Organization connectors.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-IntraOrganizationConnector "MainCloudConnector" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns details about the Intra-Organization connector named "MainCloudConnector".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-intraorganizationconnector</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-MailboxCalendarFolder</command:name>
      <command:verb>Get</command:verb>
      <command:noun>MailboxCalendarFolder</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-MailboxCalendarFolder cmdlet to retrieve the publishing or sharing settings for a specified mailbox calendar folder.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-MailboxCalendarFolder cmdlet retrieves information for the specified calendar folder. This information includes the calendar folder name, whether the folder is currently published or shared, the start and end range of calendar days published, the level of details published for the calendar, whether the published URL of the calendar can be searched on the web and the published URL for the calendar.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MailboxCalendarFolder</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the calendar folder that you want to view. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
            <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Calendar`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the calendar folder that you want to view. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
          <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Calendar`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-MailboxCalendarFolder -Identity kai:\Calendar</dev:code>
        <dev:remarks>
          <maml:para>This example returns all provided publishing information for the specified calendar folder in Kai's mailbox. In this example, the Identity parameter specifies the mailbox with the alias format.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-MailboxCalendarFolder -Identity kai:\Calendar -DomainController DC1</dev:code>
        <dev:remarks>
          <maml:para>This example returns all provided publishing information for the specified calendar folder in Kai's mailbox. This example also specifies DC1 as the domain controller to retrieve this information from Active Directory.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-MailboxCalendarFolder -Identity contoso\kai:\Calendar</dev:code>
        <dev:remarks>
          <maml:para>This example returns all provided publishing information for the specified calendar folder in Kai's mailbox. In this example, the Identity parameter specifies the mailbox with the domain\account format.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-mailboxcalendarfolder</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-MailboxFolderPermission</command:name>
      <command:verb>Get</command:verb>
      <command:noun>MailboxFolderPermission</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-MailboxFolderPermission cmdlet to view folder-level permissions in mailboxes. Note : In Exchange Online PowerShell, we recommend that you use the Get-EXOMailboxFolderPermission cmdlet instead of this cmdlet. For more information, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MailboxFolderPermission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox folder that you want to view. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
            <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The User parameter filters the results by the specified mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderUserIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GroupMailbox</maml:name>
          <maml:description>
            <maml:para>The GroupMailbox switch is required to return Microsoft 365 Groups in the results. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the mailbox folder that you want to view. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
          <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The User parameter filters the results by the specified mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderUserIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GroupMailbox</maml:name>
        <maml:description>
          <maml:para>The GroupMailbox switch is required to return Microsoft 365 Groups in the results. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-MailboxFolderPermission -Identity john@contoso.com:\Marketing\Reports</dev:code>
        <dev:remarks>
          <maml:para>This example returns the current list of user permissions for the Reports subfolder in the Marketing folder in John's mailbox.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-MailboxFolderPermission -Identity john@contoso.com:\Marketing\Reports -User Ayla@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example returns the permissions for the same folder in John's mailbox, but only for the user Ayla.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-MailboxFolderPermission -Identity john@contoso.com:\Calendar -User Ayla@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example returns the permissions for the Calendar folder in John's mailbox, but only for the user Ayla.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-mailboxfolderpermission</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-EXOMailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-OnlineMeetingConfiguration</command:name>
      <command:verb>Get</command:verb>
      <command:noun>OnlineMeetingConfiguration</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available or functional only in the cloud-based service.</maml:para>
        <maml:para>Use the Get-OnlineMeetingConfiguration cmdlet to view status and usage information about Skype Meetings and Skype for Business Online for mailboxes. Skype Meetings automatically includes Skype for Business Online conference join information in Exchange Online meeting invitations. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Exchange Online maintains a per-user cache of Skype for Business Online meeting information that's updated every 24 hours. The Get-OnlineMeetingConfiguration cmdlet provides the following information about the Skype Meetings configuration and the Skype for Business Online meeting information for the user:</maml:para>
      <maml:para>- IsAutoOnlineMeetingEnabled: Indicates if Skype Meetings is enabled for the mailbox.</maml:para>
      <maml:para>- OnlineMeetingInfo: Skype for Business Online meeting coordinates.</maml:para>
      <maml:para>- LastSyncTime: The last time Exchange Online successfully synchronized meeting coordinates from Skype for Business Online.</maml:para>
      <maml:para>- LastSuccessfulSyncTime: The last time Exchange Online successfully cleaned the cached of used Skype for Business Online meeting coordinates.</maml:para>
      <maml:para></maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-OnlineMeetingConfiguration</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the mailbox that you want to view. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-OnlineMeetingConfiguration -Identity carlam@fourthcoffee.com</dev:code>
        <dev:remarks>
          <maml:para>This example gets the Skype Meetings configuration for the specified mailbox.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-onlinemeetingconfiguration</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-OrganizationRelationship</command:name>
      <command:verb>Get</command:verb>
      <command:noun>OrganizationRelationship</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-OrganizationRelationship cmdlet to retrieve settings for an organization relationship that has been created for federated sharing with other federated Exchange organizations or for hybrid deployments with Exchange Online.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-OrganizationRelationship</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the identity of the organizational relationship. You can use the following values:</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- Name</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationRelationshipIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the identity of the organizational relationship. You can use the following values:</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- Name</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationRelationshipIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-OrganizationRelationship -Identity Contoso</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the organization relationship settings for Contoso using the Identity parameter.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-OrganizationRelationship -DomainController 'mail.contoso.com'</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the organization relationship settings by using the FQDN of the domain controller.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-organizationrelationship</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Place</command:name>
      <command:verb>Get</command:verb>
      <command:noun>Place</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Get-Place cmdlet to view the additional metadata that was configured on room mailboxes by using the Set-Place cmdlet. The additional metadata provides a better search and room suggestion experience. You can either fetch all Places, fetch all Places of a Type using -Type filter, or a specific place using -Identity parameter. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Place</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the room mailbox that you want to view. You can use any value that uniquely identifies the room. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResultSize</maml:name>
          <maml:description>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
          <dev:type>
            <maml:name>Unlimited</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the room mailbox that you want to view. You can use any value that uniquely identifies the room. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResultSize</maml:name>
        <maml:description>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Unlimited</command:parameterValue>
        <dev:type>
          <maml:name>Unlimited</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The Type parameter can be used to filter the type of Places to fetch. Supported values:</maml:para>
            <maml:para>- Space</maml:para>
            <maml:para>- Room</maml:para>
            <maml:para>- RoomList</maml:para>
            <maml:para></maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>Organization</maml:name>
          <maml:description>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
    </command:parameters>    
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-Place -Identity "Conference Room 01"</dev:code>
        <dev:remarks>
          <maml:para>This example returns summary metadata for the room mailbox named Conference Room 1.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-Place -Identity "Conference Room 01" | Format-List</dev:code>
        <dev:remarks>
          <maml:para>This example returns detailed metadata for Conference Room 1.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Get-Place -Type "Room"</dev:code>
        <dev:remarks>
          <maml:para>This example returns summary metadata for all the Rooms.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-place</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PlacesSettings</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PlacesSettings</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Get-PlacesSettings cmdlet to view the Places application organization settings. Note: We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PlacesSettings</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
    </command:parameters>    
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-PlacesSettings</dev:code>
        <dev:remarks>
          <maml:para>Get-PlacesSettings | ft AllowInConnectionsLists</maml:para>
          <maml:para>AllowInConnectionsLists</maml:para>
          <maml:para>-----------------------</maml:para>
          <maml:para>{Default:True, OID:7faa4901-f40c-4c52-94fa-8451ce746253@6b949958-f668-45f3-b689-6ffd8c65b322:False}</maml:para>
          <maml:para>AllowInConnectionsList sets Collaborator Visibility - All of the organization users can be viewed in the collaborator list by default. IT admin can set up a security group to exclude users from the list of accessible collaborators.</maml:para>
          <maml:para>This example shows the Places application configuration. AllowInConnectionsLists have the organization wide Collaborators policy configuration, allowing (Default:true) most users to be added as collaborators. A group of users (OID:....:false) is taken out from the collaborators list that can be seen, bypassing the org wide setting.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-PlacesSettings</dev:code>
        <dev:remarks>
          <maml:para>Get-PlacesSettings | ft PlacesEnabled</maml:para>
          <maml:para>PlacesEnabled</maml:para>
          <maml:para>-------------</maml:para>
          <maml:para>{Default:False, OID:7faa4901-f40c-4c52-94fa-8451ce746253@6b949958-f668-45f3-b689-6ffd8c65b322:True}</maml:para>
          <maml:para>PlacesEnabled set Places User Enablement - All of the organization users can not access MS Places by default. IT admin can set up a security group; members for that group can access the MS Places.</maml:para>
          <maml:para>This example shows the Places application configuration. PlacesEnabled have the 'Default' organization wide configuration, blocking (Default:false) most users access to Places. A group of users (OID:....:true) is allowed access to Places application, bypassing the org wide setting.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-place</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-PlacesSettings</command:name>
      <command:verb>Set</command:verb>
      <command:noun>PlacesSettings</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Set-PlacesSettings cmdlet to set the Places application organization settings. Note: We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-PlacesSettings</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>AllowInConnectionsList</maml:name>
          <maml:description>
            <maml:para>The AllowInConnectionsList parameter specifies the list, separated by comas, of users excluded from the collaborators list in the application. For example:</maml:para>
            <maml:para>- Default:true -- Most users excluded from the Collaborators list.</maml:para>
            <maml:para>- OID:269e462a-d129-4dd0-a00a-7f4e78943241@7054d2bc-4dfb-4d48-95e4-a72bfac7e376:false -- Members of a group, specified by ExternalDirectoryObjectId (OID) and Tenant ID, that are excluded from the collaborators list that can be seen in the application.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>PlacesEnabled</maml:name>
          <maml:description>
            <maml:para>The PlacesEnabled parameter specifies the list, separated by comas, of users allowed to use Places application. For example:</maml:para>
            <maml:para>- Default:false -- Most organization users disallowed to use Places</maml:para>
            <maml:para>- OID:269e462a-d129-4dd0-a00a-7f4e78943241@7054d2bc-4dfb-4d48-95e4-a72bfac7e376:true -- Members of a group, specified by ExternalDirectoryObjectId (OID) and Tenant ID, that are allowed to use Places.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
    </command:parameters>    
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-PlacesSettings -AllowInConnectionsList Default:true,OID:269e462a-d129-4dd0-a00a-7f4e78943241@7054d2bc-4dfb-4d48-95e4-a72bfac7e376:false</dev:code>
        <dev:remarks>
          <maml:para>AllowInConnectionsList sets Collaborator Visibility - All of the organization users can be viewed in the collaborator list by default. IT admin can set up a security group to exclude users from the list of accessible collaborators.</maml:para>
          <maml:para>This example sets the Places application configuration. AllowInConnectionsLists sets the organization wide Collaborators policy configuration, allowing (Default:true) most users to be added as collaborators. A group of users (OID:....:false) is taken out from the collaborators list that can be seen, bypassing the org wide setting.</maml:para>
          <maml:para>You can use Get-PlacesSettings to check the information recently updated by the cmdlet</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-PlacesSettings -PlacesEnabled Default:false,OID:269e462a-d129-4dd0-a00a-7f4e78943241@7054d2bc-4dfb-4d48-95e4-a72bfac7e376:true</dev:code>
        <dev:remarks>
          <maml:para>PlacesEnabled set Places User Enablement - All of the organization users can not access MS Places by default. IT admin can set up a security group; members for that group can access the MS Places </maml:para>
          <maml:para>This example sets the Places application configuration. PlacesEnabled sets the 'Default' organization wide configuration, blocking (Default:false) most users access to Places. A group of users (OID:....:true) is allowed access to Places application, bypassing the org wide setting.</maml:para>
          <maml:para>You can use Get-PlacesSettings to check the information recently updated by the cmdlet</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-place</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ResourceConfig</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ResourceConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-ResourceConfig cmdlet to view custom room and equipment mailbox properties that you've configured by using the Set-ResourceConfig cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ResourceConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-ResourceConfig</dev:code>
        <dev:remarks>
          <maml:para>This example returns all of the available custom room and equipment mailbox properties.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-resourceconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-SharingPolicy</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SharingPolicy</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Get-SharingPolicy cmdlet to view existing sharing policies that control how users inside your organization can share free/busy and contact information with users outside your organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Users can only share free/busy and contact information after federation has been configured between Exchange organizations. After that, users can send sharing invitations to the external recipients as long as those invitations comply with the sharing policy. A sharing policy needs to be assigned to a mailbox to be effective. If a mailbox doesn't have a specific sharing policy assigned, a default policy enforces the sharing settings for the mailbox.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-SharingPolicy</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the sharing policy that you want to view. You can use one of the following values:</maml:para>
            <maml:para>- ADObjectID</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Legacy DN</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>SharingPolicyIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the sharing policy that you want to view. You can use one of the following values:</maml:para>
          <maml:para>- ADObjectID</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Legacy DN</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>SharingPolicyIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-SharingPolicy -Identity FourthCoffee</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the default information for the sharing policy FourthCoffee.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Get-SharingPolicy Fabrikam | Format List</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the full information for the sharing policy Fabrikam.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/get-sharingpolicy</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-AvailabilityConfig</command:name>
      <command:verb>New</command:verb>
      <command:noun>AvailabilityConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the New-AvailabilityConfig cmdlet to create an availability configuration. An availability configuration specifies an existing account that's used to exchange free/busy information between organizations. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-AvailabilityConfig</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrgWideAccount</maml:name>
          <maml:description>
            <maml:para>The OrgWideAccount parameter specifies an account or security group that has permission to issue proxy Availability service requests on an organization-wide basis.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SecurityPrincipalIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>SecurityPrincipalIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrgWideAccount</maml:name>
        <maml:description>
          <maml:para>The OrgWideAccount parameter specifies an account or security group that has permission to issue proxy Availability service requests on an organization-wide basis.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SecurityPrincipalIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>SecurityPrincipalIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>New-AvailabilityConfig -OrgWideAccount "Tony Smith"</dev:code>
        <dev:remarks>
          <maml:para>This example creates a new availability configuration. The existing account named Tony Smith will be used to exchange free/busy information between organizations.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-availabilityconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-DistributionGroup</command:name>
      <command:verb>New</command:verb>
      <command:noun>DistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the New-DistributionGroup cmdlet to create distribution groups and mail-enabled security groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You can use the New-DistributionGroup cmdlet to create the following types of groups:</maml:para>
      <maml:para>- Mail-enabled universal security groups (USGs)</maml:para>
      <maml:para>- Universal distribution groups</maml:para>
      <maml:para></maml:para>
      <maml:para>Distribution groups are used to consolidate groups of recipients into a single point of contact for email messages. Distribution groups aren't security principals, and therefore can't be assigned permissions. However, you can assign permissions to mail-enabled security groups.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-DistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>This value is also used for the DisplayName property if you don't use the DisplayName parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
            <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
            <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
            <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
            <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
            <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
            <maml:para></maml:para>
            <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
            <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassNestedModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ByPassNestedModerationEnabled parameter specifies how to handle message approval when a moderated group contains other moderated groups as members. Valid values are:</maml:para>
            <maml:para>- $true: After a moderator approves a message sent to the group, the message is automatically approved for all other moderated groups that are members of the group.</maml:para>
            <maml:para>- $false: After a moderator approves a message sent to the group, separate approval is required for each moderated group that's a member of the group. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter can be used only by top-level organization and tenant administrators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CopyOwnerToMember</maml:name>
          <maml:description>
            <maml:para>The CopyOwnerToMember switch specifies whether group owners specified by the ManagedBy parameter are also members of the group. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>If you don't use the DisplayName parameter, the value of the Name parameter is used for the display name.</maml:para>
            <maml:para>If a group naming policy is enforced in your organization, users need to follow the naming constraints as specified by the DistributionGroupNameBlockedWordList parameter on the Set-OrganizationConfig cmdlet. To bypass this requirement, use the IgnoreNamingPolicy switch.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IgnoreNamingPolicy</maml:name>
          <maml:description>
            <maml:para>The IgnoreNamingPolicy switch specifies whether to prevent this group from being affected by your organization's group naming policy. You don't need to specify a value with this switch.</maml:para>
            <maml:para>The group naming policy is defined by the DistributionGroupNamingPolicy and DistributionGroupNameBlockedWordList parameters on the Set-OrganizationConfig cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
            <maml:para>- Modify the properties of the group</maml:para>
            <maml:para>- Add or remove group members</maml:para>
            <maml:para>- Delete the group</maml:para>
            <maml:para>- Approve member depart or join requests (if available)</maml:para>
            <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
            <maml:para></maml:para>
            <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
            <maml:para>Alternatively, you can use the CopyOwnerToMember switch so the owners are automatically made members of the group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MemberDepartRestriction</maml:name>
          <maml:description>
            <maml:para>The MemberDepartRestriction parameter specifies the restrictions that you put on requests to leave the group. Valid values are:</maml:para>
            <maml:para>- Open: Members can leave the group without approval from one of the group owners. This is the default value for universal distribution groups. You can't use this value on universal security groups.</maml:para>
            <maml:para>- Closed: Members can't remove themselves from the group, and requests to leave the group are rejected automatically. Group membership is controlled by the group owners. This is the default value for universal security groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
          <dev:type>
            <maml:name>MemberUpdateType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MemberJoinRestriction</maml:name>
          <maml:description>
            <maml:para>The MemberJoinRestriction parameter specifies the restrictions that you put on requests to join the group. Valid values are:</maml:para>
            <maml:para>- Open: Users can add themselves to the group without approval from a group owner. You can't use this value on universal security groups.</maml:para>
            <maml:para>- Closed: Users can't add themselves to the group, and requests to join the group are rejected automatically. Group membership is controlled by the group owners. This is the default value on universal security groups and universal distribution groups.</maml:para>
            <maml:para>- ApprovalRequired: Users can request to join the group. The user is added to the group after the request is approved by one of the group owners. Although you can use this value on universal security groups, user requests to join the group aren't sent to the group owners, so this setting is only effective on universal distribution groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
          <dev:type>
            <maml:name>MemberUpdateType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Members</maml:name>
          <maml:description>
            <maml:para>The Members parameter specifies the recipients (mail-enabled objects) that are members of the group. You can use any value that uniquely identifies the recipient. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>After you create the group, you use the Get-DistributionGroupMember cmdlet to view the group members, and the Add-DistributionGroupMember, Remove-DistributionGroupMember, and Update-DistributionGroupMember cmdlets to manage group membership.</maml:para>
            <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModeratedBy</maml:name>
          <maml:description>
            <maml:para>The ModeratedBy parameter specifies one or more moderators for this group. A moderator approves messages sent to the group before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>For mail-enabled security groups, you need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
            <maml:para>For distribution groups, if you set the ModerationEnabled parameter to the value $true, but you don't use this parameter to specify any moderators, the group owners that are specified by the ManagedBy parameter are responsible for approving messages sent to the group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
            <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
            <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Notes</maml:name>
          <maml:description>
            <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter specifies the location in Active Directory where the group is created.</maml:para>
            <maml:para>Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PrimarySmtpAddress</maml:name>
          <maml:description>
            <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RequireSenderAuthenticationEnabled</maml:name>
          <maml:description>
            <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
            <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
            <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
            <maml:para></maml:para>
            <maml:para>The default value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RoomList</maml:name>
          <maml:description>
            <maml:para>The RoomList switch specifies that all members of this distribution group are room mailboxes. You don't need to specify a value with this switch.</maml:para>
            <maml:para>You can create a distribution group for an office building in your organization and add all rooms in that building to the distribution group. Room list distribution groups are used to generate a list of building locations for meeting requests in Outlook 2010 or later. Room lists allow a user to select a building and get availability information for all rooms in that building, without having to add each room individually.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendModerationNotifications</maml:name>
          <maml:description>
            <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
            <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
            <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
            <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
          <dev:type>
            <maml:name>TransportModerationNotificationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>The Type parameter specifies the type of group that you want to create. Valid values are:</maml:para>
            <maml:para>- Distribution: A distribution group. These groups can't have permissions assigned. This is the default value.</maml:para>
            <maml:para>- Security: A mail-enabled security group. These groups can have permissions assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>The group's scope is always Universal.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
          <dev:type>
            <maml:name>GroupType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>This value is also used for the DisplayName property if you don't use the DisplayName parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
          <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
          <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
          <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
          <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
          <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
          <maml:para></maml:para>
          <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
          <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassNestedModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ByPassNestedModerationEnabled parameter specifies how to handle message approval when a moderated group contains other moderated groups as members. Valid values are:</maml:para>
          <maml:para>- $true: After a moderator approves a message sent to the group, the message is automatically approved for all other moderated groups that are members of the group.</maml:para>
          <maml:para>- $false: After a moderator approves a message sent to the group, separate approval is required for each moderated group that's a member of the group. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter can be used only by top-level organization and tenant administrators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CopyOwnerToMember</maml:name>
        <maml:description>
          <maml:para>The CopyOwnerToMember switch specifies whether group owners specified by the ManagedBy parameter are also members of the group. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>If you don't use the DisplayName parameter, the value of the Name parameter is used for the display name.</maml:para>
          <maml:para>If a group naming policy is enforced in your organization, users need to follow the naming constraints as specified by the DistributionGroupNameBlockedWordList parameter on the Set-OrganizationConfig cmdlet. To bypass this requirement, use the IgnoreNamingPolicy switch.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IgnoreNamingPolicy</maml:name>
        <maml:description>
          <maml:para>The IgnoreNamingPolicy switch specifies whether to prevent this group from being affected by your organization's group naming policy. You don't need to specify a value with this switch.</maml:para>
          <maml:para>The group naming policy is defined by the DistributionGroupNamingPolicy and DistributionGroupNameBlockedWordList parameters on the Set-OrganizationConfig cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
          <maml:para>- Modify the properties of the group</maml:para>
          <maml:para>- Add or remove group members</maml:para>
          <maml:para>- Delete the group</maml:para>
          <maml:para>- Approve member depart or join requests (if available)</maml:para>
          <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
          <maml:para></maml:para>
          <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
          <maml:para>Alternatively, you can use the CopyOwnerToMember switch so the owners are automatically made members of the group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MemberDepartRestriction</maml:name>
        <maml:description>
          <maml:para>The MemberDepartRestriction parameter specifies the restrictions that you put on requests to leave the group. Valid values are:</maml:para>
          <maml:para>- Open: Members can leave the group without approval from one of the group owners. This is the default value for universal distribution groups. You can't use this value on universal security groups.</maml:para>
          <maml:para>- Closed: Members can't remove themselves from the group, and requests to leave the group are rejected automatically. Group membership is controlled by the group owners. This is the default value for universal security groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
        <dev:type>
          <maml:name>MemberUpdateType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MemberJoinRestriction</maml:name>
        <maml:description>
          <maml:para>The MemberJoinRestriction parameter specifies the restrictions that you put on requests to join the group. Valid values are:</maml:para>
          <maml:para>- Open: Users can add themselves to the group without approval from a group owner. You can't use this value on universal security groups.</maml:para>
          <maml:para>- Closed: Users can't add themselves to the group, and requests to join the group are rejected automatically. Group membership is controlled by the group owners. This is the default value on universal security groups and universal distribution groups.</maml:para>
          <maml:para>- ApprovalRequired: Users can request to join the group. The user is added to the group after the request is approved by one of the group owners. Although you can use this value on universal security groups, user requests to join the group aren't sent to the group owners, so this setting is only effective on universal distribution groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
        <dev:type>
          <maml:name>MemberUpdateType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Members</maml:name>
        <maml:description>
          <maml:para>The Members parameter specifies the recipients (mail-enabled objects) that are members of the group. You can use any value that uniquely identifies the recipient. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>After you create the group, you use the Get-DistributionGroupMember cmdlet to view the group members, and the Add-DistributionGroupMember, Remove-DistributionGroupMember, and Update-DistributionGroupMember cmdlets to manage group membership.</maml:para>
          <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModeratedBy</maml:name>
        <maml:description>
          <maml:para>The ModeratedBy parameter specifies one or more moderators for this group. A moderator approves messages sent to the group before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>For mail-enabled security groups, you need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
          <maml:para>For distribution groups, if you set the ModerationEnabled parameter to the value $true, but you don't use this parameter to specify any moderators, the group owners that are specified by the ManagedBy parameter are responsible for approving messages sent to the group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
          <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
          <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Notes</maml:name>
        <maml:description>
          <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter specifies the location in Active Directory where the group is created.</maml:para>
          <maml:para>Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PrimarySmtpAddress</maml:name>
        <maml:description>
          <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RequireSenderAuthenticationEnabled</maml:name>
        <maml:description>
          <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
          <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
          <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
          <maml:para></maml:para>
          <maml:para>The default value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RoomList</maml:name>
        <maml:description>
          <maml:para>The RoomList switch specifies that all members of this distribution group are room mailboxes. You don't need to specify a value with this switch.</maml:para>
          <maml:para>You can create a distribution group for an office building in your organization and add all rooms in that building to the distribution group. Room list distribution groups are used to generate a list of building locations for meeting requests in Outlook 2010 or later. Room lists allow a user to select a building and get availability information for all rooms in that building, without having to add each room individually.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendModerationNotifications</maml:name>
        <maml:description>
          <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
          <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
          <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
          <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
        <dev:type>
          <maml:name>TransportModerationNotificationFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>The Type parameter specifies the type of group that you want to create. Valid values are:</maml:para>
          <maml:para>- Distribution: A distribution group. These groups can't have permissions assigned. This is the default value.</maml:para>
          <maml:para>- Security: A mail-enabled security group. These groups can have permissions assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>The group's scope is always Universal.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
        <dev:type>
          <maml:name>GroupType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>New-DistributionGroup -Name "Managers" -Type "Security"</dev:code>
        <dev:remarks>
          <maml:para>This example creates a mail-enabled security group named Managers without specifying any members.</maml:para>
          <maml:para>You use the Add-DistributionGroupMember cmdlet to add members after you create the group.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>New-DistributionGroup -Name "ITDepartment" -Members chris@contoso.com,michelle@contoso.com,laura@contoso.com,julia@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example creates a distribution group named ITDepartment and specifies the members.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-distributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-DynamicDistributionGroup</command:name>
      <command:verb>New</command:verb>
      <command:noun>DynamicDistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the New-DynamicDistributionGroup cmdlet to create dynamic distribution groups. A dynamic distribution group queries mail-enabled objects and builds the group membership based on the results. The group membership is recalculated whenever an email message is sent to the group.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Conditional parameters that are used with the IncludedRecipients parameter are subject to the following limitations:</maml:para>
      <maml:para>- The EQV operator is used for every property value, as in "Department equals Sales". Wildcards and partial matches aren't supported.</maml:para>
      <maml:para>- The OR operator is always used for multiple values of the same property, as in "Department equals Sales OR Marketing".</maml:para>
      <maml:para>- The AND operator is always used for multiple properties, as in "Department equals Sales AND Company equals Contoso".</maml:para>
      <maml:para></maml:para>
      <maml:para>To create flexible filters that use any available recipient property and that aren't subject to these limitations, you can use the RecipientFilter parameter to create a custom OPath filter.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-DynamicDistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the dynamic distribution group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>This value is also used for the DisplayName property if you don't use the DisplayName parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludedRecipients</maml:name>
          <maml:description>
            <maml:para>The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. Valid values are:</maml:para>
            <maml:para>- AllRecipients: This value can be used only by itself.</maml:para>
            <maml:para>- MailboxUsers</maml:para>
            <maml:para>- MailContacts</maml:para>
            <maml:para>- MailGroups</maml:para>
            <maml:para>- MailUsers</maml:para>
            <maml:para>- Resources: This value indicates room or equipment mailboxes.</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas. When you use multiple values, the OR Boolean operator is applied.</maml:para>
            <maml:para>You need to use this parameter when you use any Conditional parameters as part of a precanned filter. You can't use this parameter in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">WellKnownRecipientType</command:parameterValue>
          <dev:type>
            <maml:name>WellKnownRecipientType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
            <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
            <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
            <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
            <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
            <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
            <maml:para></maml:para>
            <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
            <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCompany</maml:name>
          <maml:description>
            <maml:para>The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute1</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute10</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute11</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute12</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute13</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute14</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute15</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute2</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute3</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute4</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute5</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute6</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute7</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute8</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute9</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalDepartment</maml:name>
          <maml:description>
            <maml:para>The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalStateOrProvince</maml:name>
          <maml:description>
            <maml:para>The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DirectMembershipOnly</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the dynamic distribution group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>If you don't use the DisplayName parameter, the value of the Name parameter is used for the display name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModeratedBy</maml:name>
          <maml:description>
            <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>You use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
            <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
            <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter specifies the organizational unit (OU) where the dynamic distribution group is created.</maml:para>
            <maml:para>Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, the default value is typically the Users container in the domain of the Exchange server that you're connected to (also known as the recipient scope). In on-premises Exchange, you can change the recipient scope for the current PowerShell session by using the Set-AdServerSettings cmdlet.</maml:para>
            <maml:para>If you don't use the RecipientContainer parameter, the location of the dynamic distribution group is used for the RecipientContainer property (the default location, or the value you specify for the OrganizationalUnit parameter). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PrimarySmtpAddress</maml:name>
          <maml:description>
            <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientContainer</maml:name>
          <maml:description>
            <maml:para>The RecipientContainer parameter specifies a filter that's based on the recipient's location in Active Directory. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, the default value is the OU where the object was created.</maml:para>
            <maml:para>Note that the RecipientContainer property can't be blank. The group is always limited to looking for recipients in a specific location (the value you specify for this parameter, or the location where the group was created). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendModerationNotifications</maml:name>
          <maml:description>
            <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
            <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
            <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
            <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
          <dev:type>
            <maml:name>TransportModerationNotificationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-DynamicDistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the dynamic distribution group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>This value is also used for the DisplayName property if you don't use the DisplayName parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientFilter</maml:name>
          <maml:description>
            <maml:para>The RecipientFilter parameter specifies a custom OPath filter that's based on the value of any available recipient property. You can use any available Windows PowerShell operator, and wildcards and partial matches are supported. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For filterable properties, see Filterable properties for the RecipientFilter parameter (https://docs.microsoft.com/powershell/exchange/recipientfilter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to filter on. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>- In cloud-based environments, you can't use a wildcard as the first character. For example, `'Sales '` is allowed, but `' Sales'` isn't allowed. - In on-premises Exchange, wildcards are valid only as the first or last character. For example, `'Sales '` or `' Sales'` are allowed, but `'Sa*les'` isn't allowed.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
            <maml:para>You can't use this parameter in combination with the IncludedRecipients parameter or any Conditional parameters (which are used to create precanned filters).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
            <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
            <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
            <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
            <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
            <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
            <maml:para></maml:para>
            <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
            <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DirectMembershipOnly</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the dynamic distribution group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>If you don't use the DisplayName parameter, the value of the Name parameter is used for the display name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModeratedBy</maml:name>
          <maml:description>
            <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>You use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
            <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
            <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationalUnit</maml:name>
          <maml:description>
            <maml:para>The OrganizationalUnit parameter specifies the organizational unit (OU) where the dynamic distribution group is created.</maml:para>
            <maml:para>Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, the default value is typically the Users container in the domain of the Exchange server that you're connected to (also known as the recipient scope). In on-premises Exchange, you can change the recipient scope for the current PowerShell session by using the Set-AdServerSettings cmdlet.</maml:para>
            <maml:para>If you don't use the RecipientContainer parameter, the location of the dynamic distribution group is used for the RecipientContainer property (the default location, or the value you specify for the OrganizationalUnit parameter). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PrimarySmtpAddress</maml:name>
          <maml:description>
            <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientContainer</maml:name>
          <maml:description>
            <maml:para>The RecipientContainer parameter specifies a filter that's based on the recipient's location in Active Directory. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, the default value is the OU where the object was created.</maml:para>
            <maml:para>Note that the RecipientContainer property can't be blank. The group is always limited to looking for recipients in a specific location (the value you specify for this parameter, or the location where the group was created). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendModerationNotifications</maml:name>
          <maml:description>
            <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
            <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
            <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
            <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
          <dev:type>
            <maml:name>TransportModerationNotificationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the dynamic distribution group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>This value is also used for the DisplayName property if you don't use the DisplayName parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludedRecipients</maml:name>
        <maml:description>
          <maml:para>The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. Valid values are:</maml:para>
          <maml:para>- AllRecipients: This value can be used only by itself.</maml:para>
          <maml:para>- MailboxUsers</maml:para>
          <maml:para>- MailContacts</maml:para>
          <maml:para>- MailGroups</maml:para>
          <maml:para>- MailUsers</maml:para>
          <maml:para>- Resources: This value indicates room or equipment mailboxes.</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas. When you use multiple values, the OR Boolean operator is applied.</maml:para>
          <maml:para>You need to use this parameter when you use any Conditional parameters as part of a precanned filter. You can't use this parameter in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">WellKnownRecipientType</command:parameterValue>
        <dev:type>
          <maml:name>WellKnownRecipientType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientFilter</maml:name>
        <maml:description>
          <maml:para>The RecipientFilter parameter specifies a custom OPath filter that's based on the value of any available recipient property. You can use any available Windows PowerShell operator, and wildcards and partial matches are supported. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
          <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
          <maml:para>- Property is a filterable property. For filterable properties, see Filterable properties for the RecipientFilter parameter (https://docs.microsoft.com/powershell/exchange/recipientfilter-properties). - ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - Value is the property value to filter on. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
          <maml:para>- In cloud-based environments, you can't use a wildcard as the first character. For example, `'Sales '` is allowed, but `' Sales'` isn't allowed. - In on-premises Exchange, wildcards are valid only as the first or last character. For example, `'Sales '` or `' Sales'` are allowed, but `'Sa*les'` isn't allowed.</maml:para>
          <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          <maml:para>You can't use this parameter in combination with the IncludedRecipients parameter or any Conditional parameters (which are used to create precanned filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
          <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
          <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
          <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
          <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
          <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
          <maml:para></maml:para>
          <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
          <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCompany</maml:name>
        <maml:description>
          <maml:para>The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute1</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute10</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute11</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute12</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute13</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute14</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute15</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute2</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute3</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute4</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute5</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute6</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute7</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute8</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute9</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalDepartment</maml:name>
        <maml:description>
          <maml:para>The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalStateOrProvince</maml:name>
        <maml:description>
          <maml:para>The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>You use this parameter in combination with the IncludedRecipients parameter as part of a precanned filter. You can't use any Conditional parameters in combination with the RecipientFilter parameter (which is used to create custom OPath filters).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DirectMembershipOnly</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>The DisplayName parameter specifies the display name of the dynamic distribution group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>If you don't use the DisplayName parameter, the value of the Name parameter is used for the display name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModeratedBy</maml:name>
        <maml:description>
          <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>You use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
          <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
          <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationalUnit</maml:name>
        <maml:description>
          <maml:para>The OrganizationalUnit parameter specifies the organizational unit (OU) where the dynamic distribution group is created.</maml:para>
          <maml:para>Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't use this parameter, the default value is typically the Users container in the domain of the Exchange server that you're connected to (also known as the recipient scope). In on-premises Exchange, you can change the recipient scope for the current PowerShell session by using the Set-AdServerSettings cmdlet.</maml:para>
          <maml:para>If you don't use the RecipientContainer parameter, the location of the dynamic distribution group is used for the RecipientContainer property (the default location, or the value you specify for the OrganizationalUnit parameter). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PrimarySmtpAddress</maml:name>
        <maml:description>
          <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientContainer</maml:name>
        <maml:description>
          <maml:para>The RecipientContainer parameter specifies a filter that's based on the recipient's location in Active Directory. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't use this parameter, the default value is the OU where the object was created.</maml:para>
          <maml:para>Note that the RecipientContainer property can't be blank. The group is always limited to looking for recipients in a specific location (the value you specify for this parameter, or the location where the group was created). Note : Although this parameter is available in Exchange Online, there's only one usable OU in an Exchange Online organization, so using this parameter has no effect.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendModerationNotifications</maml:name>
        <maml:description>
          <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
          <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
          <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
          <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
        <dev:type>
          <maml:name>TransportModerationNotificationFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>New-DynamicDistributionGroup -Name "Marketing Group" -IncludedRecipients "MailboxUsers,MailContacts" -ConditionalDepartment "Marketing","Sales"</dev:code>
        <dev:remarks>
          <maml:para>This example creates a dynamic distribution group named Marketing Group that contains all recipients who have a Department field that equals the strings "Marketing" or "Sales". Because we didn't use the OrganizationalUnit or RecipientContainer parameters, the group looks for recipients in the default location (typically, the Users container).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>New-DynamicDistributionGroup -Name "Washington Management Team" -RecipientFilter "(RecipientType -eq 'UserMailbox') -and (Title -like 'Director*' -or Title -like 'Manager*') -and (StateOrProvince -eq 'WA')" -RecipientContainer "North America"</dev:code>
        <dev:remarks>
          <maml:para>This example creates a dynamic distribution group named Washington Management Team that contains all users in the organizational unit named North America from Washington State whose titles start with "Director" or "Manager".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-dynamicdistributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-IntraOrganizationConnector</command:name>
      <command:verb>New</command:verb>
      <command:noun>IntraOrganizationConnector</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the New-IntraOrganizationConnector cmdlet to create an Intra-Organization connector between two on-premises Exchange forests in an organization, between an Exchange on-premises organization and an Exchange Online organization, or between two Exchange Online organizations. This connector enables feature availability and service connectivity across the organizations using a common connector and connection endpoints.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-IntraOrganizationConnector cmdlet is used to create a connection for features and services between divisions in your Exchange organization. It allows for the expansion of organizational boundaries for features and services across different hosts and network boundaries, such as between Active Directory forests, between on-premises and cloud-based organizations, or between tenants hosted in the same or different datacenters.</maml:para>
      <maml:para>For hybrid deployments between on-premises Exchange and Exchange Online organizations, the New-IntraOrganizationConnector cmdlet is used by the Hybrid Configuration wizard. Typically, the Intra-Organization connector is configured when the hybrid deployment is initially created by the wizard. We strongly recommend that you use the Hybrid Configuration wizard to create the Intra-Organization connector when configuring a hybrid deployment with an Exchange Online organization.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-IntraOrganizationConnector</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies a friendly name for the Intra-Organization connector. If the value contains spaces, enclose the value in double quotation marks.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DiscoveryEndpoint</maml:name>
          <maml:description>
            <maml:para>The DiscoveryEndpoint parameter specifies the externally-accessible URL that's used for the Autodiscover service for the domain that's configured in the Intra-Organization connector.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetAddressDomains</maml:name>
          <maml:description>
            <maml:para>The TargetAddressDomains parameter specifies the domain namespaces that will be used in the Intra-organization connector. These domains must have valid Autodiscover endpoints defined in their organizations. The domains and their associated Autodiscover endpoints are used by the Intra-Organization connector for feature and service connectivity.</maml:para>
            <maml:para>You specify multiple domain values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter enables or disabled the Intra-organization connector. The valid values for this parameter are $true or $false. The default value is $true.</maml:para>
            <maml:para>When you set the value to $false, you completely stop connectivity for the specific connection.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetSharingEpr</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services that will be used in the Intra-Organization connector.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DiscoveryEndpoint</maml:name>
        <maml:description>
          <maml:para>The DiscoveryEndpoint parameter specifies the externally-accessible URL that's used for the Autodiscover service for the domain that's configured in the Intra-Organization connector.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies a friendly name for the Intra-Organization connector. If the value contains spaces, enclose the value in double quotation marks.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetAddressDomains</maml:name>
        <maml:description>
          <maml:para>The TargetAddressDomains parameter specifies the domain namespaces that will be used in the Intra-organization connector. These domains must have valid Autodiscover endpoints defined in their organizations. The domains and their associated Autodiscover endpoints are used by the Intra-Organization connector for feature and service connectivity.</maml:para>
          <maml:para>You specify multiple domain values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter enables or disabled the Intra-organization connector. The valid values for this parameter are $true or $false. The default value is $true.</maml:para>
          <maml:para>When you set the value to $false, you completely stop connectivity for the specific connection.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetSharingEpr</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services that will be used in the Intra-Organization connector.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>New-IntraOrganizationConnector -DiscoveryEndpoint https://ExternalDiscovery.Contoso.com -Name MainCloudConnector -TargetAddressDomains Cloud1.contoso.com,Cloud2.contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example creates an Intra-Organization connector named "MainCloudConnector" between an on-premises Exchange organization and an Exchange Online organization containing two domains, Cloud1.contoso.com and Cloud2.contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-intraorganizationconnector</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-OrganizationRelationship</command:name>
      <command:verb>New</command:verb>
      <command:noun>OrganizationRelationship</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the New-OrganizationRelationship cmdlet to create organization relationships. Organization relationships define the settings that are used with external Exchange organizations to access calendar free/busy information or to move mailboxes between on-premises Exchange servers and Exchange Online as part of hybrid deployments.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Before you can create an organization relationship, you must first create a federation trust. For more information, see Federation (https://docs.microsoft.com/exchange/federation-exchange-2013-help).</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-OrganizationRelationship</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the organization relationship. The maximum length is 64 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>DomainNames</maml:name>
          <maml:description>
            <maml:para>The DomainNames parameter specifies the SMTP domains of the external organization. You can specify multiple domains separated by commas (for example, "contoso.com","northamerica.contoso.com"), limited to 238 domains in one request.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ArchiveAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The ArchiveAccessEnabled parameter specifies whether the organization relationship has been configured to provide remote archive access. Valid values are:</maml:para>
            <maml:para>- $true: The external organization provides remote access to mailbox archives.</maml:para>
            <maml:para>- $false: The external organization doesn't provide remote access to mailbox archives. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeliveryReportEnabled</maml:name>
          <maml:description>
            <maml:para>The DeliveryReportEnabled parameter specifies whether Delivery Reports should be shared over the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: Delivery Reports should be shared over the organization relationship. This value means the organization has agreed to share all Delivery Reports with the external organization, and the organization relationship should be used to retrieve Delivery Report information from the external organization.</maml:para>
            <maml:para>- $false: Delivery Reports shouldn't be shared over the organization relationship. This is the default value</maml:para>
            <maml:para></maml:para>
            <maml:para>For message tracking to work in a cross-premises Exchange scenario, this parameter must be set to $true on both sides of the organization relationship. If the value of this parameter is set to $false on one or both sides of the organization relationship, message tracking between the organizations won't work in either direction.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter specifies whether to enable the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: The organization relationship is enabled. This is the default value.</maml:para>
            <maml:para>- $false: The organization relationship is disabled. This value completely stops sharing for the organization relationship.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessEnabled parameter specifies whether the organization relationship should be used to retrieve free/busy information from the external organization. Valid values are:</maml:para>
            <maml:para>- $true: Free/busy information is retrieved from the external organization.</maml:para>
            <maml:para>- $false: Free/busy information isn't retrieved from the external organization. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You control the free/busy access level and scope by using the FreeBusyAccessLevel and FreeBusyAccessScope parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessLevel</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessLevel parameter specifies the maximum amount of detail returned to the requesting organization. Valid values are:</maml:para>
            <maml:para>- None: No free/busy access.</maml:para>
            <maml:para>- AvailabilityOnly: Free/busy access with time only.</maml:para>
            <maml:para>- LimitedDetails: Free/busy access with time, subject, and location.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">FreeBusyAccessLevel</command:parameterValue>
          <dev:type>
            <maml:name>FreeBusyAccessLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessScope</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailboxMoveEnabled</maml:name>
          <maml:description>
            <maml:para>The MailboxMoveEnabled parameter specifies whether the organization relationship enables moving mailboxes to or from the external organization. Valid values are:</maml:para>
            <maml:para>- $true: Mailbox moves to or from the external organization are allowed.</maml:para>
            <maml:para>- $false: Mailbox moves to or from the external organization aren't allowed. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessEnabled parameter specifies whether MailTips for users in this organization are returned over this organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: MailTips for users in this organization are returned over the organization relationship.</maml:para>
            <maml:para>- $false: MailTips for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You control the MailTips access level by using the MailTipsAccessLevel parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessLevel</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessLevel parameter specifies the level of MailTips data that's externally shared over this organization relationship. This parameter can have the following values:</maml:para>
            <maml:para>- All: All MailTips are returned, but the recipients in the remote organization are considered external. For the Auto Reply MailTip, the external Auto Reply message is returned.</maml:para>
            <maml:para>- Limited: Only those MailTips that could prevent a non-delivery report (NDR) or an Auto Reply are returned. Custom MailTips, the Large Audience MailTip, and Moderated Recipient MailTips won't be returned.</maml:para>
            <maml:para>- None: No MailTips are returned to the remote organization. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the MailTipsAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailTipsAccessLevel</command:parameterValue>
          <dev:type>
            <maml:name>MailTipsAccessLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessScope</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>The default value is blank ($null), which means no group is specified.</maml:para>
            <maml:para>If you use this parameter, recipient-specific MailTips are returned only for those recipients that are members of the specified group. The recipient-specific MailTips are:</maml:para>
            <maml:para>- Auto Reply</maml:para>
            <maml:para>- Mailbox Full</maml:para>
            <maml:para>- Custom</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, recipient-specific MailTips are returned for all recipients in the organization.</maml:para>
            <maml:para>This restriction only applies to mailboxes, mail users, and mail contacts. It doesn't apply to distribution groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationContact</maml:name>
          <maml:description>
            <maml:para>The OrganizationContact parameter specifies the email address that can be used to contact the external organization (for example, administrator@fourthcoffee.com).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PhotosEnabled</maml:name>
          <maml:description>
            <maml:para>The PhotosEnabled parameter specifies whether photos for users in the internal organization are returned over the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: Photos for users in this organization are returned over the organization relationship.</maml:para>
            <maml:para>- $false: Photos for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetApplicationUri</maml:name>
          <maml:description>
            <maml:para>The TargetApplicationUri parameter specifies the target Uniform Resource Identifier (URI) of the external organization. The TargetApplicationUri parameter is specified by Exchange when requesting a delegated token for the external organization to fetch free and busy information, for example, mail.contoso.com.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetAutodiscoverEpr</maml:name>
          <maml:description>
            <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.svc/wssecurity`. Exchange uses the Autodiscover service to automatically detect the correct Exchange server endpoint to use for external requests.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetOwaURL</maml:name>
          <maml:description>
            <maml:para>The TargetOwaURL parameter specifies the Outlook on the web (formerly Outlook Web App) URL of the external organization defined in the organization relationship. It's used for Outlook on the web redirection in a cross-premise Exchange scenario. Configuring this attribute enables users in the organization to use their current Outlook on the web URL to access Outlook on the web in the external organization.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetSharingEpr</maml:name>
          <maml:description>
            <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services for the external organization.</maml:para>
            <maml:para>If you use this parameter, this URL is always used to reach the external Exchange server. The URL that's specified by the TargetAutodiscoverEpr parameter isn't used to locate the external Exchange server.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the organization relationship. The maximum length is 64 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>DomainNames</maml:name>
        <maml:description>
          <maml:para>The DomainNames parameter specifies the SMTP domains of the external organization. You can specify multiple domains separated by commas (for example, "contoso.com","northamerica.contoso.com"), limited to 238 domains in one request.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ArchiveAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The ArchiveAccessEnabled parameter specifies whether the organization relationship has been configured to provide remote archive access. Valid values are:</maml:para>
          <maml:para>- $true: The external organization provides remote access to mailbox archives.</maml:para>
          <maml:para>- $false: The external organization doesn't provide remote access to mailbox archives. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeliveryReportEnabled</maml:name>
        <maml:description>
          <maml:para>The DeliveryReportEnabled parameter specifies whether Delivery Reports should be shared over the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: Delivery Reports should be shared over the organization relationship. This value means the organization has agreed to share all Delivery Reports with the external organization, and the organization relationship should be used to retrieve Delivery Report information from the external organization.</maml:para>
          <maml:para>- $false: Delivery Reports shouldn't be shared over the organization relationship. This is the default value</maml:para>
          <maml:para></maml:para>
          <maml:para>For message tracking to work in a cross-premises Exchange scenario, this parameter must be set to $true on both sides of the organization relationship. If the value of this parameter is set to $false on one or both sides of the organization relationship, message tracking between the organizations won't work in either direction.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter specifies whether to enable the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: The organization relationship is enabled. This is the default value.</maml:para>
          <maml:para>- $false: The organization relationship is disabled. This value completely stops sharing for the organization relationship.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessEnabled parameter specifies whether the organization relationship should be used to retrieve free/busy information from the external organization. Valid values are:</maml:para>
          <maml:para>- $true: Free/busy information is retrieved from the external organization.</maml:para>
          <maml:para>- $false: Free/busy information isn't retrieved from the external organization. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You control the free/busy access level and scope by using the FreeBusyAccessLevel and FreeBusyAccessScope parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessLevel</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessLevel parameter specifies the maximum amount of detail returned to the requesting organization. Valid values are:</maml:para>
          <maml:para>- None: No free/busy access.</maml:para>
          <maml:para>- AvailabilityOnly: Free/busy access with time only.</maml:para>
          <maml:para>- LimitedDetails: Free/busy access with time, subject, and location.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">FreeBusyAccessLevel</command:parameterValue>
        <dev:type>
          <maml:name>FreeBusyAccessLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessScope</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailboxMoveEnabled</maml:name>
        <maml:description>
          <maml:para>The MailboxMoveEnabled parameter specifies whether the organization relationship enables moving mailboxes to or from the external organization. Valid values are:</maml:para>
          <maml:para>- $true: Mailbox moves to or from the external organization are allowed.</maml:para>
          <maml:para>- $false: Mailbox moves to or from the external organization aren't allowed. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessEnabled parameter specifies whether MailTips for users in this organization are returned over this organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: MailTips for users in this organization are returned over the organization relationship.</maml:para>
          <maml:para>- $false: MailTips for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You control the MailTips access level by using the MailTipsAccessLevel parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessLevel</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessLevel parameter specifies the level of MailTips data that's externally shared over this organization relationship. This parameter can have the following values:</maml:para>
          <maml:para>- All: All MailTips are returned, but the recipients in the remote organization are considered external. For the Auto Reply MailTip, the external Auto Reply message is returned.</maml:para>
          <maml:para>- Limited: Only those MailTips that could prevent a non-delivery report (NDR) or an Auto Reply are returned. Custom MailTips, the Large Audience MailTip, and Moderated Recipient MailTips won't be returned.</maml:para>
          <maml:para>- None: No MailTips are returned to the remote organization. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the MailTipsAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailTipsAccessLevel</command:parameterValue>
        <dev:type>
          <maml:name>MailTipsAccessLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessScope</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>The default value is blank ($null), which means no group is specified.</maml:para>
          <maml:para>If you use this parameter, recipient-specific MailTips are returned only for those recipients that are members of the specified group. The recipient-specific MailTips are:</maml:para>
          <maml:para>- Auto Reply</maml:para>
          <maml:para>- Mailbox Full</maml:para>
          <maml:para>- Custom</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't use this parameter, recipient-specific MailTips are returned for all recipients in the organization.</maml:para>
          <maml:para>This restriction only applies to mailboxes, mail users, and mail contacts. It doesn't apply to distribution groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationContact</maml:name>
        <maml:description>
          <maml:para>The OrganizationContact parameter specifies the email address that can be used to contact the external organization (for example, administrator@fourthcoffee.com).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PhotosEnabled</maml:name>
        <maml:description>
          <maml:para>The PhotosEnabled parameter specifies whether photos for users in the internal organization are returned over the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: Photos for users in this organization are returned over the organization relationship.</maml:para>
          <maml:para>- $false: Photos for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetApplicationUri</maml:name>
        <maml:description>
          <maml:para>The TargetApplicationUri parameter specifies the target Uniform Resource Identifier (URI) of the external organization. The TargetApplicationUri parameter is specified by Exchange when requesting a delegated token for the external organization to fetch free and busy information, for example, mail.contoso.com.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetAutodiscoverEpr</maml:name>
        <maml:description>
          <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.svc/wssecurity`. Exchange uses the Autodiscover service to automatically detect the correct Exchange server endpoint to use for external requests.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetOwaURL</maml:name>
        <maml:description>
          <maml:para>The TargetOwaURL parameter specifies the Outlook on the web (formerly Outlook Web App) URL of the external organization defined in the organization relationship. It's used for Outlook on the web redirection in a cross-premise Exchange scenario. Configuring this attribute enables users in the organization to use their current Outlook on the web URL to access Outlook on the web in the external organization.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetSharingEpr</maml:name>
        <maml:description>
          <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services for the external organization.</maml:para>
          <maml:para>If you use this parameter, this URL is always used to reach the external Exchange server. The URL that's specified by the TargetAutodiscoverEpr parameter isn't used to locate the external Exchange server.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-FederationInformation -DomainName Contoso.com | New-OrganizationRelationship -Name "Contoso" -FreeBusyAccessEnabled $true -FreeBusyAccessLevel LimitedDetails</dev:code>
        <dev:remarks>
          <maml:para>This example creates an organization relationship with Contoso. The domain name to connect to is contoso.com. The following settings are used:</maml:para>
          <maml:para>Free/busy access is enabled.</maml:para>
          <maml:para>The requesting organization receives time, subject, and location information from the target organization.</maml:para>
          <maml:para>This example attempts to automatically discover configuration information from the external organization by using the domain names provided in the Get-FederationInformation command. If you use this method to create your organization relationship, you must first ensure that you've created an organization identifier by using the Set-FederationOrganizationIdentifier cmdlet.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>New-OrganizationRelationship -Name "Fourth Coffee" -DomainNames "mail.fourthcoffee.com" -FreeBusyAccessEnabled $true -FreeBusyAccessLevel AvailabilityOnly -TargetAutodiscoverEpr "https://mail.fourthcoffee.com/autodiscover/autodiscover.svc/wssecurity" -TargetApplicationUri "mail.fourthcoffee.com"</dev:code>
        <dev:remarks>
          <maml:para>This example creates the organization relationship with Fourth Coffee using the following settings. In this example, the connection settings with the external organization are provided.</maml:para>
          <maml:para>The domain to connect to is mail.fourthcoffee.com.</maml:para>
          <maml:para>The Exchange Web Services application URL is mail.fourthcoffee.com.</maml:para>
          <maml:para>The Autodiscover URL is `https://mail.fourthcoffee.com/autodiscover/autodiscover.svc/wssecurity`.</maml:para>
          <maml:para>Free/busy access is enabled.</maml:para>
          <maml:para>The requesting organization only receives free/busy information with the time.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-organizationrelationship</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-SharingPolicy</command:name>
      <command:verb>New</command:verb>
      <command:noun>SharingPolicy</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the New-SharingPolicy cmdlet to create a sharing policy to regulate how users inside your organization can share calendar and contact information with users outside the organization. Users can only share this information after federation has been configured in Exchange. After federation is configured, users can send sharing invitations that comply with a sharing policy to external recipients in other Exchange Server 2010 or later organizations that have federation enabled. A sharing policy needs to get assigned to a mailbox to be effective. If a mailbox doesn't have a specific sharing policy assigned, a default policy enforces the level of sharing permitted for this mailbox.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-SharingPolicy</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the name of the new sharing policy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Domains</maml:name>
          <maml:description>
            <maml:para>The Domains parameter specifies the domains to which this sharing policy applies and the sharing policy actions. Values for this parameter take the format: 'Domain: SharingPolicyAction'.</maml:para>
            <maml:para>The following sharing policy action values can be used:</maml:para>
            <maml:para>- CalendarSharingFreeBusySimple: Share free/busy hours only</maml:para>
            <maml:para>- CalendarSharingFreeBusyDetail: Share free/busy hours, subject and location</maml:para>
            <maml:para>- CalendarSharingFreeBusyReviewer: Share free/busy hours, subject, location and the body of the message or calendar item</maml:para>
            <maml:para>- ContactsSharing: Share contacts only</maml:para>
            <maml:para></maml:para>
            <maml:para>Separate multiple domains with a comma, for example, 'mail.contoso.com: CalendarSharingFreeBusySimple', 'mail.fabrikam.com: CalendarSharingFreeBusyDetail, ContactsSharing'.</maml:para>
            <maml:para>A domain doesn't include subdomains. You must configure each subdomain separately.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Default</maml:name>
          <maml:description>
            <maml:para>The Default switch specifies that this sharing policy is the default sharing policy for all mailboxes. If no sharing policy has been applied to a mailbox, the default policy is automatically applied. If you want to disable sharing across your organization, you can set the default policy as disabled.</maml:para>
            <maml:para>You don't have to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter specifies whether to enable the new sharing policy. Valid input for this parameter is $true or $false. The default is $true.</maml:para>
            <maml:para>When the sharing policy is disabled, users who are provisioned to use this policy continue to share information until the sharing policy assistant runs and removes the permissions on the shared folder. The frequency with which the sharing policy assistant runs is assigned in the Set-MailboxServer cmdlet using the SharingPolicySchedule parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Domains</maml:name>
        <maml:description>
          <maml:para>The Domains parameter specifies the domains to which this sharing policy applies and the sharing policy actions. Values for this parameter take the format: 'Domain: SharingPolicyAction'.</maml:para>
          <maml:para>The following sharing policy action values can be used:</maml:para>
          <maml:para>- CalendarSharingFreeBusySimple: Share free/busy hours only</maml:para>
          <maml:para>- CalendarSharingFreeBusyDetail: Share free/busy hours, subject and location</maml:para>
          <maml:para>- CalendarSharingFreeBusyReviewer: Share free/busy hours, subject, location and the body of the message or calendar item</maml:para>
          <maml:para>- ContactsSharing: Share contacts only</maml:para>
          <maml:para></maml:para>
          <maml:para>Separate multiple domains with a comma, for example, 'mail.contoso.com: CalendarSharingFreeBusySimple', 'mail.fabrikam.com: CalendarSharingFreeBusyDetail, ContactsSharing'.</maml:para>
          <maml:para>A domain doesn't include subdomains. You must configure each subdomain separately.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the name of the new sharing policy.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Default</maml:name>
        <maml:description>
          <maml:para>The Default switch specifies that this sharing policy is the default sharing policy for all mailboxes. If no sharing policy has been applied to a mailbox, the default policy is automatically applied. If you want to disable sharing across your organization, you can set the default policy as disabled.</maml:para>
          <maml:para>You don't have to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter specifies whether to enable the new sharing policy. Valid input for this parameter is $true or $false. The default is $true.</maml:para>
          <maml:para>When the sharing policy is disabled, users who are provisioned to use this policy continue to share information until the sharing policy assistant runs and removes the permissions on the shared folder. The frequency with which the sharing policy assistant runs is assigned in the Set-MailboxServer cmdlet using the SharingPolicySchedule parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>New-SharingPolicy -Name "Contoso" -Domains 'mail.contoso.com: CalendarSharingFreeBusyDetail, ContactsSharing'</dev:code>
        <dev:remarks>
          <maml:para>This example creates the sharing policy Contoso for the contoso.com domain, which is a domain outside the organization. This policy allows users in the contoso.com domain to see detailed free/busy information and contacts. By default, this policy is enabled.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>New-SharingPolicy -Name "SharingPolicy01" -Domains 'mail.contoso.com: CalendarSharingFreeBusySimple', 'mail.fabrikam.com: CalendarSharingFreeBusySimple' -Enabled $false -Default $true</dev:code>
        <dev:remarks>
          <maml:para>This example creates a default sharing policy, which is applied to all mailboxes that don't implicitly have a sharing policy assigned to them. This sharing policy SharingPolicy01 applies to two different domains, and the sharing policy is disabled.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/new-sharingpolicy</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-AvailabilityAddressSpace</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>AvailabilityAddressSpace</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-AvailabilityAddressSpace cmdlet to remove existing availability address space objects and the associated credentials that were used to share free/busy data across Exchange organizations.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>In on-premises Exchange organizations, you run the Remove-AvailabilityAddressSpace cmdlet on Exchange servers that have the Client Access server role installed.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-AvailabilityAddressSpace</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the availability address that you want to remove. You can use any value that uniquely identifies the object. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AvailabilityAddressSpaceIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>AvailabilityAddressSpaceIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the availability address that you want to remove. You can use any value that uniquely identifies the object. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">AvailabilityAddressSpaceIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>AvailabilityAddressSpaceIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-AvailabilityAddressSpace -Identity Contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example removes the availability address space object named Contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Remove-AvailabilityAddressSpace -Identity Contoso.com -Confirm:$false</dev:code>
        <dev:remarks>
          <maml:para>This example immediately removes the availability address space object named Contoso.com without displaying the confirmation prompt.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-availabilityaddressspace</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-AvailabilityConfig</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>AvailabilityConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Remove-AvailabilityConfig cmdlet to remove an availability configuration. An availability configuration specifies an existing account that's used to exchange free/busy information between organizations. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-AvailabilityConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the availability configuration that you want to remove. The default name of the availability configuration you create by using the New-AvailabilityConfig is Availability Configuration.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AvailabilityConfigIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>AvailabilityConfigIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the availability configuration that you want to remove. The default name of the availability configuration you create by using the New-AvailabilityConfig is Availability Configuration.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">AvailabilityConfigIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>AvailabilityConfigIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-AvailabilityConfig</dev:code>
        <dev:remarks>
          <maml:para>This example removes the existing availability configuration.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-availabilityconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-CalendarEvents</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>CalendarEvents</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-CalendarEvents cmdlet to cancel future meetings in user or resource mailboxes. Cancelling future meetings removes them from attendee and resource calendars (for example, you're going to remove the mailbox, or the user is going on a leave of absence).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet cancels meetings in the specified mailbox where the mailbox is the meeting organizer, and the meeting has one or more attendees or resources. It doesn't cancel appointments or meetings without attendees or resources. Because meeting cancellations must be sent out, the mailbox must still be enabled to send mail.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-CalendarEvents</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the mailbox that you want to modify. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryWindowInDays</maml:name>
          <maml:description>
            <maml:para>The QueryWindowInDays parameter specifies the number of days after the QueryStartDate parameter value to look for meetings that you want to cancel.</maml:para>
            <maml:para>If an instance of a recurring meeting occurs during the specified time period, the entire series is cancelled (not just the instances during the time period). Note : The maximum window that's allowed for meeting cancellation is 1825 days (5 years).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CancelOrganizedMeetings</maml:name>
          <maml:description>
            <maml:para>The CancelOrganizedMeetings switch specifies whether to cancel meetings in the mailbox. You don't need to specify a value with this switch.</maml:para>
            <maml:para>To cancel meetings in the mailbox, you need to use this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PreviewOnly</maml:name>
          <maml:description>
            <maml:para>The PreviewOnly switch specifies whether to preview the results of the command without actually cancelling any meetings. You don't need to specify a value with this switch.</maml:para>
            <maml:para>You use this switch with the Verbose switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>QueryStartDate</maml:name>
          <maml:description>
            <maml:para>The QueryStartDate parameter specifies the start date to look for meetings that you want to cancel.</maml:para>
            <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM". Note : If you don't use this parameter, today's date is used.</maml:para>
            <maml:para>You use the QueryWindowInDays parameter to specify the end date.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
          <dev:type>
            <maml:name>ExDateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the mailbox that you want to modify. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>QueryWindowInDays</maml:name>
        <maml:description>
          <maml:para>The QueryWindowInDays parameter specifies the number of days after the QueryStartDate parameter value to look for meetings that you want to cancel.</maml:para>
          <maml:para>If an instance of a recurring meeting occurs during the specified time period, the entire series is cancelled (not just the instances during the time period). Note : The maximum window that's allowed for meeting cancellation is 1825 days (5 years).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CancelOrganizedMeetings</maml:name>
        <maml:description>
          <maml:para>The CancelOrganizedMeetings switch specifies whether to cancel meetings in the mailbox. You don't need to specify a value with this switch.</maml:para>
          <maml:para>To cancel meetings in the mailbox, you need to use this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PreviewOnly</maml:name>
        <maml:description>
          <maml:para>The PreviewOnly switch specifies whether to preview the results of the command without actually cancelling any meetings. You don't need to specify a value with this switch.</maml:para>
          <maml:para>You use this switch with the Verbose switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>QueryStartDate</maml:name>
        <maml:description>
          <maml:para>The QueryStartDate parameter specifies the start date to look for meetings that you want to cancel.</maml:para>
          <maml:para>Use the short date format that's defined in the Regional Options settings on the computer where you're running the command. For example, if the computer is configured to use the short date format mm/dd/yyyy, enter 09/01/2018 to specify September 1, 2018. You can enter the date only, or you can enter the date and time of day. If you enter the date and time of day, enclose the value in quotation marks ("), for example, "09/01/2018 5:00 PM". Note : If you don't use this parameter, today's date is used.</maml:para>
          <maml:para>You use the QueryWindowInDays parameter to specify the end date.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ExDateTime</command:parameterValue>
        <dev:type>
          <maml:name>ExDateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-CalendarEvents -Identity chris@contoso.com -CancelOrganizedMeetings -QueryWindowInDays 120</dev:code>
        <dev:remarks>
          <maml:para>This example cancels every meeting in the mailbox chris@contoso.com that occurs on or 120 days after today's date. After you cancel the meetings, you can remove the mailbox.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Remove-CalendarEvents -Identity "Angela Gruber" -CancelOrganizedMeetings -QueryStartDate 11-1-2018 -QueryWindowInDays 120</dev:code>
        <dev:remarks>
          <maml:para>This example cancels the meetings in Angela Gruber's calendar for the specified date range. Angela is taking a temporary leave of absence from the company, so cancelling these meetings removes them from the user and resource calendars during her absence.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Remove-CalendarEvents -Identity "Jacob Berger" -CancelOrganizedMeetings -QueryStartDate 9-1-2018 -QueryWindowInDays 90 -PreviewOnly -Verbose</dev:code>
        <dev:remarks>
          <maml:para>This example previews the meetings that would be cancelled in Jacob Berger's calendar for the specified date range. No changes are made to the mailbox.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-DistributionGroup</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>DistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-DistributionGroup cmdlet to remove distribution groups and mail-enabled security groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-DistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to remove. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to remove. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-DistributionGroup -Identity "Temporary Staff"</dev:code>
        <dev:remarks>
          <maml:para>This example removes the distribution group named Temporary Staff.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-distributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-DistributionGroupMember</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>DistributionGroupMember</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-DistributionGroupMember cmdlet to remove a single member from distribution groups or mail-enabled security groups. To replace all members, use the Update-DistributionGroupMember cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You can't use the Remove-DistributionGroupMember cmdlet to remove the member of a dynamic distribution group. A dynamic distribution group's membership is calculated from query results.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-DistributionGroupMember</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>The Member parameter specifies the recipient that you want to remove from the group. You can use any value that uniquely identifies the recipient. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>Member</maml:name>
        <maml:description>
          <maml:para>The Member parameter specifies the recipient that you want to remove from the group. You can use any value that uniquely identifies the recipient. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-DistributionGroupMember -Identity "Technical Support" -Member "Jan Dryml"</dev:code>
        <dev:remarks>
          <maml:para>This example removes Jan Dryml from the distribution group named Technical Support.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-distributiongroupmember</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-DynamicDistributionGroup</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>DynamicDistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-DynamicDistributionGroup cmdlet to delete dynamic distribution groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-DynamicDistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the dynamic distribution group that you want to remove. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DynamicGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the dynamic distribution group that you want to remove. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DynamicGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-DynamicDistributionGroup -Identity "Test Users"</dev:code>
        <dev:remarks>
          <maml:para>This example deletes the dynamic distribution group named Test Users.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-dynamicdistributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-IntraOrganizationConnector</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IntraOrganizationConnector</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-IntraOrganizationConnector cmdlet to remove existing Intra-Organization connectors.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Intra-Organizational connectors enable features and services between divisions in your Exchange organization. It allows for the expansion of organizational boundaries for features and services across different hosts and network boundaries, such as between Active Directory forests, between on-premises and cloud-based organizations or between tenants hosted in the same or different datacenters.</maml:para>
      <maml:para>The Remove-IntraOrganizationConnector cmdlet removes the connector objects. To stop feature or service connectivity without removing the connector object, run the command: `Set-IntraOrganizationConnector &lt;ConnectorIdentity&gt; -Enabled $false`.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-IntraOrganizationConnector</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to remove. You can use any value that uniquely identifies the connector. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to remove. You can use any value that uniquely identifies the connector. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-IntraOrganizationConnector "Contoso On-premises-Exchange Online"</dev:code>
        <dev:remarks>
          <maml:para>This example removes the existing Intra-Organization connector named "Contoso On-premises-Exchange Online".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-intraorganizationconnector</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-MailboxFolderPermission</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>MailboxFolderPermission</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-MailboxFolderPermission cmdlet to remove folder-level permissions for users in mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You can't use this cmdlet to selectively remove permissions from a user on a mailbox folder. The cmdlet removes all permissions that are assigned to the user on the specified folder. To modify the permissions that are assigned to the user on a mailbox folder, use the Set-MailboxFolderPermission cmdlet.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-MailboxFolderPermission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `Mailbox:\Folder`. For the value of Mailbox, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for the Identity parameter are `john@contoso.com:\Calendar` or `John:\Marketing\Reports`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The User parameter specifies the mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderUserIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResetDelegateUserCollection</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The ResetDelegateUserCollection switch can only be used together with -Identity parameter, and the value of Identity should be the user's primary calendar folder, for example, kim@consoto.com:\Calendar. If you run into a problem when trying to add, change, or remove delegate permissions, it is possible that the delegate information stored in the LocalFreeBusy item or the PR_FREEBUSY_ENTRYIDS has become corrupted. Including this switch will delete those files and will downgrade any existing Delegates to Editor status. You will need to grant Delegate permissions again using -SharingPermissionFlag Delegate.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendNotificationToUser</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The SendNotificationToUser parameter specifies whether to send a notification to the user when you remove their calendar permissions. Valid values are:</maml:para>
            <maml:para>- $true: A notification is sent.</maml:para>
            <maml:para>- $false: No notification is sent. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter only applies to calendar folders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `Mailbox:\Folder`. For the value of Mailbox, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for the Identity parameter are `john@contoso.com:\Calendar` or `John:\Marketing\Reports`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The User parameter specifies the mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderUserIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResetDelegateUserCollection</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The ResetDelegateUserCollection switch can only be used together with -Identity parameter, and the value of Identity should be the user's primary calendar folder, for example, kim@consoto.com:\Calendar. If you run into a problem when trying to add, change, or remove delegate permissions, it is possible that the delegate information stored in the LocalFreeBusy item or the PR_FREEBUSY_ENTRYIDS has become corrupted. Including this switch will delete those files and will downgrade any existing Delegates to Editor status. You will need to grant Delegate permissions again using -SharingPermissionFlag Delegate.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendNotificationToUser</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The SendNotificationToUser parameter specifies whether to send a notification to the user when you remove their calendar permissions. Valid values are:</maml:para>
          <maml:para>- $true: A notification is sent.</maml:para>
          <maml:para>- $false: No notification is sent. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter only applies to calendar folders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-MailboxFolderPermission -Identity kim@contoso.com:\Training -User john@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example removes John's permissions to the Training folder in Kim's mailbox.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Remove-MailboxFolderPermission -Identity kim@contoso.com:\Calendar -ResetDelegateUserCollection</dev:code>
        <dev:remarks>
          <maml:para>This example will clear any corrupted delegate information from Kim's mailbox.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-mailboxfolderpermission</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-EXOMailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-OrganizationRelationship</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>OrganizationRelationship</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-OrganizationRelationship cmdlet to remove the organization relationship with an external Exchange organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-OrganizationRelationship cmdlet removes the organization relationship objects. To stop sharing information without removing the organization relationship objects, disable the organization relationship by using the Set-OrganizationRelationship cmdlet.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-OrganizationRelationship</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the identity of the organization relationship that you want to remove. You can use one of the following values:</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- Name</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationRelationshipIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the identity of the organization relationship that you want to remove. You can use one of the following values:</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- Name</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationRelationshipIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-OrganizationRelationship -Identity Contoso</dev:code>
        <dev:remarks>
          <maml:para>This example removes the organization relationship Contoso using the Identity parameter.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-organizationrelationship</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-SharingPolicy</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>SharingPolicy</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Remove-SharingPolicy cmdlet to remove a sharing policy. Before you can remove a sharing policy, you must ensure that no mailbox users are provisioned to use that policy.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-SharingPolicy</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the identity of the sharing policy that you want to remove. You can use one of the following values:</maml:para>
            <maml:para>- ADObjectID</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Legacy DN</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>SharingPolicyIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the identity of the sharing policy that you want to remove. You can use one of the following values:</maml:para>
          <maml:para>- ADObjectID</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Legacy DN</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>SharingPolicyIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Remove-SharingPolicy Fabrikam</dev:code>
        <dev:remarks>
          <maml:para>This example removes the sharing policy Fabrikam.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Remove-SharingPolicy -Identity Contoso -Confirm:$false</dev:code>
        <dev:remarks>
          <maml:para>This example removes the sharing policy Contoso and suppresses the confirmation that you want to remove the policy.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/remove-sharingpolicy</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-AvailabilityConfig</command:name>
      <command:verb>Set</command:verb>
      <command:noun>AvailabilityConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-AvailabilityConfig cmdlet to set the access level for free/busy information.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-AvailabilityConfig cmdlet defines two accounts or security groups: a per-user free/busy proxy account or group, and an organization-wide free/busy proxy account or group. These accounts and groups are trusted by all availability services in the current organization for availability proxy requests.</maml:para>
      <maml:para>For cross-forest availability services to retrieve free/busy information in the current forest, they must be using one of the specified accounts, belong to one of the specified security groups, or have a username and password for one of the specified accounts or security groups.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AvailabilityConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrgWideAccount</maml:name>
          <maml:description>
            <maml:para>The OrgWideAccount parameter specifies an account or security group that has permission to issue proxy Availability service requests on an organization-wide basis.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SecurityPrincipalIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>SecurityPrincipalIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrgWideAccount</maml:name>
        <maml:description>
          <maml:para>The OrgWideAccount parameter specifies an account or security group that has permission to issue proxy Availability service requests on an organization-wide basis.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SecurityPrincipalIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>SecurityPrincipalIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-AvailabilityConfig -PerUserAccount &lt;domain name of servers group in remote forest&gt;</dev:code>
        <dev:remarks>
          <maml:para>This example is useful with a trusted cross-forest Availability service. If the remote forest is trusted, and a per-user free/busy proxy account or group in the remote forest is configured to use the service account, the configuration is added to the current forest to authorize the Microsoft ActiveSync request from the remote forest.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-AvailabilityConfig -OrgWideAccount &lt;ExampleCredentials&gt;</dev:code>
        <dev:remarks>
          <maml:para>This example is useful if the remote forest isn't trusted. Because this account is used for a cross-forest free/busy proxy account or group, minimize security vulnerabilities by using the credentials of a user who doesn't have an Exchange mailbox. When you're prompted, type the username and password.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-availabilityconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-CalendarProcessing</command:name>
      <command:verb>Set</command:verb>
      <command:noun>CalendarProcessing</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-CalendarProcessing cmdlet to modify calendar processing options for resource mailboxes, which include the Calendar Attendant, resource booking assistant, and calendar configuration. Note that this cmdlet is effective only on resource mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-CalendarProcessing</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the resource mailbox that you want to modify. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddAdditionalResponse</maml:name>
          <maml:description>
            <maml:para>The AddAdditionalResponse parameter specifies whether additional information (the value of the AdditionalResponse parameter) is added to meeting request responses. Valid values are:</maml:para>
            <maml:para>- $true: Text from the AdditionalResponse parameter is added to meeting request responses.</maml:para>
            <maml:para>- $false: No additional text is added to meeting request responses (any text in the AddAdditionalResponse parameter isn't used). This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AdditionalResponse</maml:name>
          <maml:description>
            <maml:para>The AdditionalResponse parameter specifies the additional information to be included in responses to meeting requests when the value of the AddAdditionalResponse parameter is $true. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddNewRequestsTentatively</maml:name>
          <maml:description>
            <maml:para>The AddNewRequestsTentatively parameter specifies whether new meeting requests are added to the calendar as tentative. Valid values are:</maml:para>
            <maml:para>- $true: New calendar items are added to the calendar as tentative. This is the default value.</maml:para>
            <maml:para>- $false: Only existing calendar items are updated by the Calendar Attendant.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AddOrganizerToSubject</maml:name>
          <maml:description>
            <maml:para>The AddOrganizerToSubject parameter specifies whether the meeting organizer's name is used as the subject of the meeting request. Valid values are:</maml:para>
            <maml:para>- $true: The meeting organizer's name replaces any existing Subject value for the meeting request. This is the default value.</maml:para>
            <maml:para>- $false: The original Subject value is preserved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllBookInPolicy</maml:name>
          <maml:description>
            <maml:para>The AllBookInPolicy parameter specifies whether to automatically approve in-policy requests from all users to the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: In-policy requests from all users are automatically approved. This is the default value.</maml:para>
            <maml:para>- $false: In-policy requests from all users aren't automatically approved (approval by a delegate is required).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllowConflicts</maml:name>
          <maml:description>
            <maml:para>The AllowConflicts parameter specifies whether to allow conflicting meeting requests. Valid values are:</maml:para>
            <maml:para>- $true: Conflicts are allowed.</maml:para>
            <maml:para>- $false: Conflicts aren't allowed. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllowRecurringMeetings</maml:name>
          <maml:description>
            <maml:para>The AllowRecurringMeetings parameter specifies whether to allow recurring meetings in meeting requests. Valid values are:</maml:para>
            <maml:para>- $true: Recurring meetings are allowed. This is the default value.</maml:para>
            <maml:para>- $false: Recurring meetings aren't allowed.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllRequestInPolicy</maml:name>
          <maml:description>
            <maml:para>The AllRequestInPolicy parameter specifies whether to allow all users to submit in-policy requests to the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: All users are allowed to submit in-policy requests to the resource mailbox. These requests require approval by a resource mailbox delegate if the AllBookInPolicy parameter is set to $false (the default value is $true).</maml:para>
            <maml:para>- $false: All users can't submit in-policy requests to the resource mailbox. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AllRequestOutOfPolicy</maml:name>
          <maml:description>
            <maml:para>The AllRequestOutOfPolicy parameter specifies whether to allow all users to submit out-of-policy requests to the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: All users are allowed to submit out-of-policy requests to the resource mailbox. Out-of-policy requests require approval by a resource mailbox delegate.</maml:para>
            <maml:para>- $false: All users can't submit out-of-policy requests to the resource mailbox. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AutomateProcessing</maml:name>
          <maml:description>
            <maml:para>The AutomateProcessing parameter enables or disables calendar processing on the mailbox. Valid values are:</maml:para>
            <maml:para>- None: Calendar processing is disabled on the mailbox. Both the resource booking attendant and the Calendar Attendant are disabled on the mailbox.</maml:para>
            <maml:para>- AutoUpdate: Only the Calendar Attendant processes meeting requests and responses. Meeting requests are tentative in the calendar until they're approved by a delegate. Meeting organizers receive only decisions from delegates.</maml:para>
            <maml:para>- AutoAccept: Both the Calendar Attendant and resource booking attendant are enabled on the mailbox. This means that the Calendar Attendant updates the calendar, and then the resource booking assistant accepts the meeting based upon the policies. Eligible meeting organizers receive the decision directly without human intervention (free = accept; busy = decline).</maml:para>
            <maml:para></maml:para>
            <maml:para>In on-premises Exchange, resource mailboxes created in the Exchange admin center (EAC) have the default value AutoAccept, while resource mailboxes created in PowerShell have the default value AutoUpdate.</maml:para>
            <maml:para>In Exchange Online, resource mailbox created in the EAC and resource mailboxes created in PowerShell after November 15, 2018 have the default value AutoAccept. Resource mailboxes created in PowerShell before November 15 have the default value AutoUpdate.</maml:para>
            <maml:para>The default value for user mailboxes is AutoUpdate, but you can't change the value on a user mailbox.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CalendarProcessingFlags</command:parameterValue>
          <dev:type>
            <maml:name>CalendarProcessingFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BookingType</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The BookingType parameter specifies how reservations work on the resource mailbox. Valid values are:</maml:para>
            <maml:para>- Standard: The resource can be reserved based on the other settings in this cmdlet. This is the default value</maml:para>
            <maml:para>- Reserved: The resource can't be reserved.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">&lt;ResourceBookingType&gt;</command:parameterValue>
          <dev:type>
            <maml:name>&lt;ResourceBookingType&gt;</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BookingWindowInDays</maml:name>
          <maml:description>
            <maml:para>The BookingWindowInDays parameter specifies the maximum number of days in advance that the resource can be reserved. A valid value is an integer from 0 through 1080. The default value is 180 days. The value 0 means today.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BookInPolicy</maml:name>
          <maml:description>
            <maml:para>The BookInPolicy parameter specifies users or groups who are allowed to submit in-policy meeting requests to the resource mailbox that are automatically approved. You can use any value that uniquely identifies the user or group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConflictPercentageAllowed</maml:name>
          <maml:description>
            <maml:para>The ConflictPercentageAllowed parameter specifies the maximum percentage of meeting conflicts for new recurring meeting requests. A valid value is an integer from 0 through 100. The default value is 0.</maml:para>
            <maml:para>If a new recurring meeting request conflicts with existing reservations for the resource more than the percentage specified by this parameter, the recurring meeting request is automatically declined. When the value is 0, no conflicts are permitted for new recurring meeting requests.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteAttachments</maml:name>
          <maml:description>
            <maml:para>The DeleteAttachments parameter specifies whether to remove attachments from all incoming messages. Valid values are:</maml:para>
            <maml:para>- $true: Remove any attachments in incoming messages. This is the default value.</maml:para>
            <maml:para>- $false: Preserve any attachments in incoming messages.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteComments</maml:name>
          <maml:description>
            <maml:para>The DeleteComments parameter specifies whether to remove or keep any text in the message body of incoming meeting requests. Valid values are:</maml:para>
            <maml:para>- $true: Remove any text in the message body of incoming meeting requests. This is the default value.</maml:para>
            <maml:para>- $false: Preserve any text in the message body of incoming meeting requests.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteNonCalendarItems</maml:name>
          <maml:description>
            <maml:para>The DeleteNonCalendarItems parameter specifies whether to remove or keep all non-calendar-related messages that are received by the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: Non-calendar messages are deleted. This is the default value.</maml:para>
            <maml:para>- $false: Non-calendar messages are preserved.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeleteSubject</maml:name>
          <maml:description>
            <maml:para>The DeleteSubject parameter specifies whether to remove or keep the subject of incoming meeting requests. Valid values are:</maml:para>
            <maml:para>- $true: Remove the Subject value of incoming meeting requests. This is the default value.</maml:para>
            <maml:para>- $false: Preserve The Subject value of incoming meeting requests.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnableResponseDetails</maml:name>
          <maml:description>
            <maml:para>The EnableResponseDetails parameter specifies whether to include the reasons for accepting or declining a meeting in the response email message. Valid values are:</maml:para>
            <maml:para>- $true: The reasons for accepting or declining a meeting are included in the response message. This is the default value.</maml:para>
            <maml:para>- $false: The reasons for accepting or declining a meeting aren't included in the response message.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnforceCapacity</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The EnforceCapacity parameter specifies whether to restrict the number of attendees to the capacity of the workspace.  For example, if capacity is set to 10, then only 10 people can book the workspace. Valid values are:</maml:para>
            <maml:para>- $true: Capacity is enforced.</maml:para>
            <maml:para>- $false: Capacity is not enforced. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EnforceSchedulingHorizon</maml:name>
          <maml:description>
            <maml:para>The EnforceSchedulingHorizon parameter controls the behavior of recurring meetings that extend beyond the date specified by the BookingWindowInDays parameter. Valid values are:</maml:para>
            <maml:para>- $true: A recurring meeting request is automatically declined if the meetings start on or before the date specified by the BookingWindowInDays parameter, and the meetings extend beyond the specified date. This is the default value.</maml:para>
            <maml:para>- $false: A recurring meeting request is automatically accepted if the meetings start on or before the date specified by the BookingWindowInDays parameter, and the meetings extend beyond the specified date. However, the number of meetings is automatically reduced so meetings won't occur after the specified date.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ForwardRequestsToDelegates</maml:name>
          <maml:description>
            <maml:para>The ForwardRequestsToDelegates parameter specifies whether to forward incoming meeting requests to the delegates that are configured for the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: Forward incoming meeting requests to the delegates. This is the default value.</maml:para>
            <maml:para>- $false: Don't forward incoming meeting requests to the delegates.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IgnoreDefaultScope</maml:name>
          <maml:description>
            <maml:para>The IgnoreDefaultScope switch tells the command to ignore the default recipient scope setting for the Exchange Management Shell session, and to use the entire forest as the scope. This allows the command to access Active Directory objects that aren't currently available in the default scope.</maml:para>
            <maml:para>Using the IgnoreDefaultScope switch introduces the following restrictions:</maml:para>
            <maml:para>- You can't use the DomainController parameter. The command uses an appropriate global catalog server automatically.</maml:para>
            <maml:para>- You can only use the DN for the Identity parameter. Other forms of identification, such as alias or GUID, aren't accepted.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MaximumConflictInstances</maml:name>
          <maml:description>
            <maml:para>The MaximumConflictInstances parameter specifies the maximum number of conflicts for new recurring meeting requests when the AllowRecurringMeetings parameter is set to $true. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0.</maml:para>
            <maml:para>If a new recurring meeting request conflicts with existing reservations for the resource more than the number of times specified by the MaximumConflictInstances parameter value, the recurring meeting request is automatically declined. When the value is 0, no conflicts are permitted for new recurring meeting requests.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MaximumDurationInMinutes</maml:name>
          <maml:description>
            <maml:para>The MaximumDurationInMinutes parameter specifies the maximum duration in minutes for meeting requests. A valid value is an integer from 0 through INT32 (2147483647). The default value is 1440 (24 hours).</maml:para>
            <maml:para>When the value is set to 0, the maximum duration of a meeting is unlimited. For recurring meetings, the value of this parameter applies to the length of an individual meeting instance.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MinimumDurationInMinutes</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The MinimumDurationInMinutes parameter specifies the minimum duration in minutes for meeting requests in workspace mailboxes. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0, which means there is no minimum duration.</maml:para>
            <maml:para>For recurring meetings, the value of this parameter applies to the length of an individual meeting instance.</maml:para>
            <maml:para>This parameter only works on workspace mailboxes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizerInfo</maml:name>
          <maml:description>
            <maml:para>The OrganizerInfo parameter specifies whether the resource mailbox sends organizer information when a meeting request is declined because of conflicts. Valid values are:</maml:para>
            <maml:para>- $true: Organizer information is sent when a meeting request is declined because of conflicts. This is the default value.</maml:para>
            <maml:para>- $false: Organizer information isn't sent when a meeting request is declined because of conflicts.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ProcessExternalMeetingMessages</maml:name>
          <maml:description>
            <maml:para>The ProcessExternalMeetingMessages parameter specifies whether to process meeting requests that originate outside the Exchange organization. Valid values are:</maml:para>
            <maml:para>- $true: Meeting requests from external senders are processed.</maml:para>
            <maml:para>- $false: Meeting requests from external senders are rejected. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RemoveForwardedMeetingNotifications</maml:name>
          <maml:description>
            <maml:para>The RemoveForwardedMeetingNotifications parameter specifies whether forwarded meeting notifications are moved to the Deleted Items folder after they're processed by the Calendar Attendant. Valid values are:</maml:para>
            <maml:para>- $true: Processed forwarded meeting notifications are deleted (moved to the Deleted Items folder).</maml:para>
            <maml:para>- $false: Processed forwarded meeting notifications aren't deleted. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RemoveOldMeetingMessages</maml:name>
          <maml:description>
            <maml:para>The RemoveOldMeetingMessages parameter specifies whether the Calendar Attendant removes old and redundant updates and responses. Valid values are:</maml:para>
            <maml:para>- $true: Outdated and redundant meeting messages are deleted. This is the default value.</maml:para>
            <maml:para>- $false: Outdated and redundant meeting messages aren't deleted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RemovePrivateProperty</maml:name>
          <maml:description>
            <maml:para>The RemovePrivateProperty parameter specifies whether to clear the private flag for incoming meetings that were sent by the organizer in the original requests. Valid values are:</maml:para>
            <maml:para>- $true: The private flag for incoming meeting requests is cleared (the meeting is no longer private). This is the default value.</maml:para>
            <maml:para>- $false: The private flag for incoming meeting requests is preserved (private meetings stay private).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RequestInPolicy</maml:name>
          <maml:description>
            <maml:para>The RequestInPolicy parameter specifies users who are allowed to submit in-policy meeting requests to the resource mailbox that require approval by a resource mailbox delegate. You can use any value that uniquely identifies the user. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RequestOutOfPolicy</maml:name>
          <maml:description>
            <maml:para>The RequestOutOfPolicy parameter specifies users who are allowed to submit out-of-policy requests that require approval by a resource mailbox delegate. You can use any value that uniquely identifies the user. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResourceDelegates</maml:name>
          <maml:description>
            <maml:para>The ResourceDelegates parameter specifies users can approve or reject requests that are sent to the resource mailbox. You can use any value that uniquely identifies the user. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ScheduleOnlyDuringWorkHours</maml:name>
          <maml:description>
            <maml:para>The ScheduleOnlyDuringWorkHours parameter specifies whether to allow meetings to be scheduled outside of the working hours that are defined for the resource mailbox. Valid values are:</maml:para>
            <maml:para>- $true: Meeting requests that are outside of working hours are automatically rejected.</maml:para>
            <maml:para>- $false: Meeting requests that are outside of working hours aren't automatically rejected. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You configure the working hours of the resource mailbox by using the WorkDays, WorkingHoursStartTime, WorkingHoursEndTime and WorkingHoursTimeZone parameters on the Set-MailboxCalendarConfiguration cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TentativePendingApproval</maml:name>
          <maml:description>
            <maml:para>The TentativePendingApproval parameter specifies whether to mark pending requests as tentative on the calendar. Valid values are:</maml:para>
            <maml:para>- $true: Meeting requests that are awaiting approval from a delegate appear in the calendar as tentative. This is the default value.</maml:para>
            <maml:para>- $false: Meeting requests that are awaiting approval appear in the calendar as free.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the resource mailbox that you want to modify. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AddAdditionalResponse</maml:name>
        <maml:description>
          <maml:para>The AddAdditionalResponse parameter specifies whether additional information (the value of the AdditionalResponse parameter) is added to meeting request responses. Valid values are:</maml:para>
          <maml:para>- $true: Text from the AdditionalResponse parameter is added to meeting request responses.</maml:para>
          <maml:para>- $false: No additional text is added to meeting request responses (any text in the AddAdditionalResponse parameter isn't used). This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AdditionalResponse</maml:name>
        <maml:description>
          <maml:para>The AdditionalResponse parameter specifies the additional information to be included in responses to meeting requests when the value of the AddAdditionalResponse parameter is $true. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AddNewRequestsTentatively</maml:name>
        <maml:description>
          <maml:para>The AddNewRequestsTentatively parameter specifies whether new meeting requests are added to the calendar as tentative. Valid values are:</maml:para>
          <maml:para>- $true: New calendar items are added to the calendar as tentative. This is the default value.</maml:para>
          <maml:para>- $false: Only existing calendar items are updated by the Calendar Attendant.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AddOrganizerToSubject</maml:name>
        <maml:description>
          <maml:para>The AddOrganizerToSubject parameter specifies whether the meeting organizer's name is used as the subject of the meeting request. Valid values are:</maml:para>
          <maml:para>- $true: The meeting organizer's name replaces any existing Subject value for the meeting request. This is the default value.</maml:para>
          <maml:para>- $false: The original Subject value is preserved.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllBookInPolicy</maml:name>
        <maml:description>
          <maml:para>The AllBookInPolicy parameter specifies whether to automatically approve in-policy requests from all users to the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: In-policy requests from all users are automatically approved. This is the default value.</maml:para>
          <maml:para>- $false: In-policy requests from all users aren't automatically approved (approval by a delegate is required).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllowConflicts</maml:name>
        <maml:description>
          <maml:para>The AllowConflicts parameter specifies whether to allow conflicting meeting requests. Valid values are:</maml:para>
          <maml:para>- $true: Conflicts are allowed.</maml:para>
          <maml:para>- $false: Conflicts aren't allowed. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllowRecurringMeetings</maml:name>
        <maml:description>
          <maml:para>The AllowRecurringMeetings parameter specifies whether to allow recurring meetings in meeting requests. Valid values are:</maml:para>
          <maml:para>- $true: Recurring meetings are allowed. This is the default value.</maml:para>
          <maml:para>- $false: Recurring meetings aren't allowed.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllRequestInPolicy</maml:name>
        <maml:description>
          <maml:para>The AllRequestInPolicy parameter specifies whether to allow all users to submit in-policy requests to the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: All users are allowed to submit in-policy requests to the resource mailbox. These requests require approval by a resource mailbox delegate if the AllBookInPolicy parameter is set to $false (the default value is $true).</maml:para>
          <maml:para>- $false: All users can't submit in-policy requests to the resource mailbox. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AllRequestOutOfPolicy</maml:name>
        <maml:description>
          <maml:para>The AllRequestOutOfPolicy parameter specifies whether to allow all users to submit out-of-policy requests to the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: All users are allowed to submit out-of-policy requests to the resource mailbox. Out-of-policy requests require approval by a resource mailbox delegate.</maml:para>
          <maml:para>- $false: All users can't submit out-of-policy requests to the resource mailbox. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AutomateProcessing</maml:name>
        <maml:description>
          <maml:para>The AutomateProcessing parameter enables or disables calendar processing on the mailbox. Valid values are:</maml:para>
          <maml:para>- None: Calendar processing is disabled on the mailbox. Both the resource booking attendant and the Calendar Attendant are disabled on the mailbox.</maml:para>
          <maml:para>- AutoUpdate: Only the Calendar Attendant processes meeting requests and responses. Meeting requests are tentative in the calendar until they're approved by a delegate. Meeting organizers receive only decisions from delegates.</maml:para>
          <maml:para>- AutoAccept: Both the Calendar Attendant and resource booking attendant are enabled on the mailbox. This means that the Calendar Attendant updates the calendar, and then the resource booking assistant accepts the meeting based upon the policies. Eligible meeting organizers receive the decision directly without human intervention (free = accept; busy = decline).</maml:para>
          <maml:para></maml:para>
          <maml:para>In on-premises Exchange, resource mailboxes created in the Exchange admin center (EAC) have the default value AutoAccept, while resource mailboxes created in PowerShell have the default value AutoUpdate.</maml:para>
          <maml:para>In Exchange Online, resource mailbox created in the EAC and resource mailboxes created in PowerShell after November 15, 2018 have the default value AutoAccept. Resource mailboxes created in PowerShell before November 15 have the default value AutoUpdate.</maml:para>
          <maml:para>The default value for user mailboxes is AutoUpdate, but you can't change the value on a user mailbox.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CalendarProcessingFlags</command:parameterValue>
        <dev:type>
          <maml:name>CalendarProcessingFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BookingType</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The BookingType parameter specifies how reservations work on the resource mailbox. Valid values are:</maml:para>
          <maml:para>- Standard: The resource can be reserved based on the other settings in this cmdlet. This is the default value</maml:para>
          <maml:para>- Reserved: The resource can't be reserved.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">&lt;ResourceBookingType&gt;</command:parameterValue>
        <dev:type>
          <maml:name>&lt;ResourceBookingType&gt;</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BookingWindowInDays</maml:name>
        <maml:description>
          <maml:para>The BookingWindowInDays parameter specifies the maximum number of days in advance that the resource can be reserved. A valid value is an integer from 0 through 1080. The default value is 180 days. The value 0 means today.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BookInPolicy</maml:name>
        <maml:description>
          <maml:para>The BookInPolicy parameter specifies users or groups who are allowed to submit in-policy meeting requests to the resource mailbox that are automatically approved. You can use any value that uniquely identifies the user or group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConflictPercentageAllowed</maml:name>
        <maml:description>
          <maml:para>The ConflictPercentageAllowed parameter specifies the maximum percentage of meeting conflicts for new recurring meeting requests. A valid value is an integer from 0 through 100. The default value is 0.</maml:para>
          <maml:para>If a new recurring meeting request conflicts with existing reservations for the resource more than the percentage specified by this parameter, the recurring meeting request is automatically declined. When the value is 0, no conflicts are permitted for new recurring meeting requests.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeleteAttachments</maml:name>
        <maml:description>
          <maml:para>The DeleteAttachments parameter specifies whether to remove attachments from all incoming messages. Valid values are:</maml:para>
          <maml:para>- $true: Remove any attachments in incoming messages. This is the default value.</maml:para>
          <maml:para>- $false: Preserve any attachments in incoming messages.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeleteComments</maml:name>
        <maml:description>
          <maml:para>The DeleteComments parameter specifies whether to remove or keep any text in the message body of incoming meeting requests. Valid values are:</maml:para>
          <maml:para>- $true: Remove any text in the message body of incoming meeting requests. This is the default value.</maml:para>
          <maml:para>- $false: Preserve any text in the message body of incoming meeting requests.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeleteNonCalendarItems</maml:name>
        <maml:description>
          <maml:para>The DeleteNonCalendarItems parameter specifies whether to remove or keep all non-calendar-related messages that are received by the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: Non-calendar messages are deleted. This is the default value.</maml:para>
          <maml:para>- $false: Non-calendar messages are preserved.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeleteSubject</maml:name>
        <maml:description>
          <maml:para>The DeleteSubject parameter specifies whether to remove or keep the subject of incoming meeting requests. Valid values are:</maml:para>
          <maml:para>- $true: Remove the Subject value of incoming meeting requests. This is the default value.</maml:para>
          <maml:para>- $false: Preserve The Subject value of incoming meeting requests.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is used only on resource mailboxes where the AutomateProcessing parameter is set to AutoAccept.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnableResponseDetails</maml:name>
        <maml:description>
          <maml:para>The EnableResponseDetails parameter specifies whether to include the reasons for accepting or declining a meeting in the response email message. Valid values are:</maml:para>
          <maml:para>- $true: The reasons for accepting or declining a meeting are included in the response message. This is the default value.</maml:para>
          <maml:para>- $false: The reasons for accepting or declining a meeting aren't included in the response message.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnforceCapacity</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The EnforceCapacity parameter specifies whether to restrict the number of attendees to the capacity of the workspace.  For example, if capacity is set to 10, then only 10 people can book the workspace. Valid values are:</maml:para>
          <maml:para>- $true: Capacity is enforced.</maml:para>
          <maml:para>- $false: Capacity is not enforced. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EnforceSchedulingHorizon</maml:name>
        <maml:description>
          <maml:para>The EnforceSchedulingHorizon parameter controls the behavior of recurring meetings that extend beyond the date specified by the BookingWindowInDays parameter. Valid values are:</maml:para>
          <maml:para>- $true: A recurring meeting request is automatically declined if the meetings start on or before the date specified by the BookingWindowInDays parameter, and the meetings extend beyond the specified date. This is the default value.</maml:para>
          <maml:para>- $false: A recurring meeting request is automatically accepted if the meetings start on or before the date specified by the BookingWindowInDays parameter, and the meetings extend beyond the specified date. However, the number of meetings is automatically reduced so meetings won't occur after the specified date.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ForwardRequestsToDelegates</maml:name>
        <maml:description>
          <maml:para>The ForwardRequestsToDelegates parameter specifies whether to forward incoming meeting requests to the delegates that are configured for the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: Forward incoming meeting requests to the delegates. This is the default value.</maml:para>
          <maml:para>- $false: Don't forward incoming meeting requests to the delegates.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IgnoreDefaultScope</maml:name>
        <maml:description>
          <maml:para>The IgnoreDefaultScope switch tells the command to ignore the default recipient scope setting for the Exchange Management Shell session, and to use the entire forest as the scope. This allows the command to access Active Directory objects that aren't currently available in the default scope.</maml:para>
          <maml:para>Using the IgnoreDefaultScope switch introduces the following restrictions:</maml:para>
          <maml:para>- You can't use the DomainController parameter. The command uses an appropriate global catalog server automatically.</maml:para>
          <maml:para>- You can only use the DN for the Identity parameter. Other forms of identification, such as alias or GUID, aren't accepted.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MaximumConflictInstances</maml:name>
        <maml:description>
          <maml:para>The MaximumConflictInstances parameter specifies the maximum number of conflicts for new recurring meeting requests when the AllowRecurringMeetings parameter is set to $true. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0.</maml:para>
          <maml:para>If a new recurring meeting request conflicts with existing reservations for the resource more than the number of times specified by the MaximumConflictInstances parameter value, the recurring meeting request is automatically declined. When the value is 0, no conflicts are permitted for new recurring meeting requests.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MaximumDurationInMinutes</maml:name>
        <maml:description>
          <maml:para>The MaximumDurationInMinutes parameter specifies the maximum duration in minutes for meeting requests. A valid value is an integer from 0 through INT32 (2147483647). The default value is 1440 (24 hours).</maml:para>
          <maml:para>When the value is set to 0, the maximum duration of a meeting is unlimited. For recurring meetings, the value of this parameter applies to the length of an individual meeting instance.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MinimumDurationInMinutes</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The MinimumDurationInMinutes parameter specifies the minimum duration in minutes for meeting requests in workspace mailboxes. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0, which means there is no minimum duration.</maml:para>
          <maml:para>For recurring meetings, the value of this parameter applies to the length of an individual meeting instance.</maml:para>
          <maml:para>This parameter only works on workspace mailboxes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizerInfo</maml:name>
        <maml:description>
          <maml:para>The OrganizerInfo parameter specifies whether the resource mailbox sends organizer information when a meeting request is declined because of conflicts. Valid values are:</maml:para>
          <maml:para>- $true: Organizer information is sent when a meeting request is declined because of conflicts. This is the default value.</maml:para>
          <maml:para>- $false: Organizer information isn't sent when a meeting request is declined because of conflicts.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ProcessExternalMeetingMessages</maml:name>
        <maml:description>
          <maml:para>The ProcessExternalMeetingMessages parameter specifies whether to process meeting requests that originate outside the Exchange organization. Valid values are:</maml:para>
          <maml:para>- $true: Meeting requests from external senders are processed.</maml:para>
          <maml:para>- $false: Meeting requests from external senders are rejected. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RemoveForwardedMeetingNotifications</maml:name>
        <maml:description>
          <maml:para>The RemoveForwardedMeetingNotifications parameter specifies whether forwarded meeting notifications are moved to the Deleted Items folder after they're processed by the Calendar Attendant. Valid values are:</maml:para>
          <maml:para>- $true: Processed forwarded meeting notifications are deleted (moved to the Deleted Items folder).</maml:para>
          <maml:para>- $false: Processed forwarded meeting notifications aren't deleted. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RemoveOldMeetingMessages</maml:name>
        <maml:description>
          <maml:para>The RemoveOldMeetingMessages parameter specifies whether the Calendar Attendant removes old and redundant updates and responses. Valid values are:</maml:para>
          <maml:para>- $true: Outdated and redundant meeting messages are deleted. This is the default value.</maml:para>
          <maml:para>- $false: Outdated and redundant meeting messages aren't deleted.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RemovePrivateProperty</maml:name>
        <maml:description>
          <maml:para>The RemovePrivateProperty parameter specifies whether to clear the private flag for incoming meetings that were sent by the organizer in the original requests. Valid values are:</maml:para>
          <maml:para>- $true: The private flag for incoming meeting requests is cleared (the meeting is no longer private). This is the default value.</maml:para>
          <maml:para>- $false: The private flag for incoming meeting requests is preserved (private meetings stay private).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RequestInPolicy</maml:name>
        <maml:description>
          <maml:para>The RequestInPolicy parameter specifies users who are allowed to submit in-policy meeting requests to the resource mailbox that require approval by a resource mailbox delegate. You can use any value that uniquely identifies the user. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RequestOutOfPolicy</maml:name>
        <maml:description>
          <maml:para>The RequestOutOfPolicy parameter specifies users who are allowed to submit out-of-policy requests that require approval by a resource mailbox delegate. You can use any value that uniquely identifies the user. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResourceDelegates</maml:name>
        <maml:description>
          <maml:para>The ResourceDelegates parameter specifies users can approve or reject requests that are sent to the resource mailbox. You can use any value that uniquely identifies the user. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter[]</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ScheduleOnlyDuringWorkHours</maml:name>
        <maml:description>
          <maml:para>The ScheduleOnlyDuringWorkHours parameter specifies whether to allow meetings to be scheduled outside of the working hours that are defined for the resource mailbox. Valid values are:</maml:para>
          <maml:para>- $true: Meeting requests that are outside of working hours are automatically rejected.</maml:para>
          <maml:para>- $false: Meeting requests that are outside of working hours aren't automatically rejected. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You configure the working hours of the resource mailbox by using the WorkDays, WorkingHoursStartTime, WorkingHoursEndTime and WorkingHoursTimeZone parameters on the Set-MailboxCalendarConfiguration cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TentativePendingApproval</maml:name>
        <maml:description>
          <maml:para>The TentativePendingApproval parameter specifies whether to mark pending requests as tentative on the calendar. Valid values are:</maml:para>
          <maml:para>- $true: Meeting requests that are awaiting approval from a delegate appear in the calendar as tentative. This is the default value.</maml:para>
          <maml:para>- $false: Meeting requests that are awaiting approval appear in the calendar as free.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "Conf 212" -AutomateProcessing AutoAccept -DeleteComments $true -AddOrganizerToSubject $true -AllowConflicts $false</dev:code>
        <dev:remarks>
          <maml:para>This example automates the processing of calendar requests to the resource mailbox Conf 212.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "Car 53" -AutomateProcessing None</dev:code>
        <dev:remarks>
          <maml:para>This example disables automatic processing for the resource mailbox Car 53.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "5th Floor Conference Room" -AutomateProcessing AutoAccept -AllBookInPolicy $true</dev:code>
        <dev:remarks>
          <maml:para>This example allows the Calendar Attendant to approve in-policy requests from all users.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "5th Floor Conference Room" -AutomateProcessing AutoAccept -AllRequestInPolicy $true -AllBookInPolicy $false -ResourceDelegates "chris@contoso.com","michelle@contoso.com"</dev:code>
        <dev:remarks>
          <maml:para>This example allows all users to submit in-policy requests, but the request is still subject to approval by one of the specified delegates.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 5 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "Room 221" -AutomateProcessing AutoAccept -RequestOutOfPolicy DavidPelton@contoso.com -ResourceDelegates "chris@contoso.com","michelle@contoso.com"</dev:code>
        <dev:remarks>
          <maml:para>This example allows the Calendar Attendant to accept out-of-policy requests from David Pelton. The request is still subject to approval by one of the specified delegates.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 6 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "Car 53" -AutomateProcessing AutoAccept -BookInPolicy "ayla@contoso.com","tony@contoso.com" -AllBookInPolicy $false</dev:code>
        <dev:remarks>
          <maml:para>This example allows a list of users to submit in-policy meeting requests to the equipment mailbox for Car 53.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 7 --------------------------</maml:title>
        <dev:code>$group = New-DistributionGroup "Room 221 Booking Allowed"
Update-DistributionGroupMember -Identity $group.Identity -Members karina@contoso.com,tony@contoso.com -BypassSecurityGroupManagerCheck:$true
Set-CalendarProcessing -Identity "Room 221" -AutomateProcessing AutoAccept -BookInPolicy $group.Identity -AllBookInPolicy $false</dev:code>
        <dev:remarks>
          <maml:para>This example rejects meeting requests from any user who isn't a member of the "Room 221 Booking Allowed" distribution group.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 8 --------------------------</maml:title>
        <dev:code>Set-CalendarProcessing -Identity "Room 221" -ProcessExternalMeetingMessages $false</dev:code>
        <dev:remarks>
          <maml:para>This example rejects meeting requests from any user who isn't a member of the Exchange organization.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-calendarprocessing</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-DistributionGroup</command:name>
      <command:verb>Set</command:verb>
      <command:noun>DistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-DistributionGroup cmdlet to modify the settings of existing distribution groups or mail-enabled security groups. To add or remove group members, use the Add-DistributionGroupMember, Remove-DistributionGroupMember or Update-DistributionGroupMember cmdlets.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Distribution groups are used to consolidate groups of recipients into a single point of contact for email messages. Distribution groups aren't security principals, and therefore can't be assigned permissions. However, you can assign permissions to mail-enabled security groups.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-DistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFrom</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFrom parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>The senders you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFromDLMembers</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFromDLMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group are allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
            <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
            <maml:para>The groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFromDLMembers and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFromSendersOrMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group are allowed to send messages to this recipient.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the AcceptMessagesOnlyFrom and AcceptMessageOnlyFromDLMembers parameters.</maml:para>
            <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromDLMembers properties, respectively. Therefore, you can't use the AcceptMessagesOnlyFromSendersOrMembers parameter and the AcceptMessagesOnlyFrom or AcceptMessagesOnlyFromDLMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
            <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
            <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
            <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
            <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
            <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
            <maml:para></maml:para>
            <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
            <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassModerationFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The BypassModerationFromSendersOrMembers parameter specifies who is allowed to send messages to this moderated recipient without approval from a moderator. Valid values for this parameter are individual senders and groups in your organization. Specifying a group means all members of the group are allowed to send messages to this recipient without approval from a moderator.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple senders and overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove one or more senders without affecting any existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>This parameter is meaningful only when moderation is enabled for the recipient. By default, this parameter is blank ($null), which means messages from all senders other than the designated moderators are moderated. When a moderator sends a message to this recipient, the message is isn't moderated. In other words, you don't need to use this parameter to include the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassNestedModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ByPassNestedModerationEnabled parameter specifies how to handle message approval when a moderated group contains other moderated groups as members. Valid values are:</maml:para>
            <maml:para>- $true: After a moderator approves a message sent to the group, the message is automatically approved for all other moderated groups that are members of the group.</maml:para>
            <maml:para>- $false: After a moderator approves a message sent to the group, separate approval is required for each moderated group that's a member of the group. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CreateDTMFMap</maml:name>
          <maml:description>
            <maml:para>The CreateDTMFMap parameter specifies whether to create a dual-tone multiple-frequency (DTMF) map for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Valid values are:</maml:para>
            <maml:para>- $true: A DTMF map is created for the recipient. This is the default value.</maml:para>
            <maml:para>- $false: A DTMF map isn't created for the recipient.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute1</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute10</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute10 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute11</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute11 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute12</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute12 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute13</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute13 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute14</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute14 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute15</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute15 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute2</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute3</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute4</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute5</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute6</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute6 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute7</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute7 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute8</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute8 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute9</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute9 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>If a group naming policy is enforced in your organization, users need to follow the naming constraints as specified by the DistributionGroupNameBlockedWordList parameter on the Set-OrganizationConfig cmdlet. To bypass this requirement, use the IgnoreNamingPolicy switch.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EmailAddresses</maml:name>
          <maml:description>
            <maml:para>The EmailAddresses parameter specifies all the email addresses (proxy addresses) for the recipient, including the primary SMTP address. In on-premises Exchange organizations, the primary SMTP address and other proxy addresses are typically set by email address policies. However, you can use this parameter to configure other proxy addresses for the recipient. For more information, see Email address policies in Exchange Server (https://docs.microsoft.com/Exchange/email-addresses-and-address-books/email-address-policies/email-address-policies).</maml:para>
            <maml:para>Valid syntax for this parameter is `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`. The optional `Type value specifies the type of email address. Examples of valid values include:</maml:para>
            <maml:para>- SMTP: The primary SMTP address. You can use this value only once in a command.</maml:para>
            <maml:para>- smtp: Other SMTP email addresses.</maml:para>
            <maml:para>- X400: X.400 addresses in on-premises Exchange.</maml:para>
            <maml:para>- X500: X.500 addresses in on-premises Exchange.</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't include a Type value for an email address, the value smtp is assumed. Note that Exchange doesn't validate the syntax of custom address types (including X.400 addresses). Therefore, you need to verify that any custom addresses are formatted correctly.</maml:para>
            <maml:para>To specify the primary SMTP email address, you can use any of the following methods:</maml:para>
            <maml:para>- Use the Type value SMTP on the address.</maml:para>
            <maml:para>- The first email address when you don't use any Type values, or when you use multiple lowercase smtp Type values.</maml:para>
            <maml:para>- Use the PrimarySmtpAddress parameter instead. You can't use the EmailAddresses parameter and the PrimarySmtpAddress parameter in the same command.</maml:para>
            <maml:para></maml:para>
            <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
            <maml:para>To replace all existing proxy email addresses with the values you specify, use the following syntax: `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`.</maml:para>
            <maml:para>To add or remove specify proxy addresses without affecting other existing values, use the following syntax: `@{Add="Type:EmailAddress1","Type:EmailAddress2",...; Remove="Type:EmailAddress3","Type:EmailAddress4",...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ProxyAddressCollection</command:parameterValue>
          <dev:type>
            <maml:name>ProxyAddressCollection</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute1</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute1 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute2</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute2 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute3</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute3 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute4</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute4 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute5</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute5 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ForceUpgrade</maml:name>
          <maml:description>
            <maml:para>The ForceUpgrade switch specifies whether to suppress the confirmation message that appears if the object was created in a previous version of Exchange. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GrantSendOnBehalfTo</maml:name>
          <maml:description>
            <maml:para>The GrantSendOnBehalfTo parameter specifies who can send on behalf of this group. Although messages send on behalf of the group clearly show the sender in the From field (`&lt;Sender&gt; on behalf of &lt;Group&gt;`), replies to these messages are delivered to the group, not the sender.</maml:para>
            <maml:para>The sender you specify for this parameter must a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>By default, this parameter is blank, which means no one else has permission to send on behalf of this group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HiddenFromAddressListsEnabled</maml:name>
          <maml:description>
            <maml:para>The HiddenFromAddressListsEnabled parameter specifies whether this recipient is visible in address lists. Valid values are:</maml:para>
            <maml:para>- $true: The recipient isn't visible in address lists.</maml:para>
            <maml:para>- $false: The recipient is visible in address lists. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IgnoreNamingPolicy</maml:name>
          <maml:description>
            <maml:para>The IgnoreNamingPolicy switch specifies whether to prevent this group from being affected by your organization's group naming policy. You don't need to specify a value with this switch.</maml:para>
            <maml:para>The group naming policy is defined by the DistributionGroupNamingPolicy and DistributionGroupNameBlockedWordList parameters on the Set-OrganizationConfig cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTip</maml:name>
          <maml:description>
            <maml:para>The MailTip parameter specifies the custom MailTip text for this recipient. The MailTip is shown to senders when they start drafting an email message to this recipient. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>When you add a MailTip to a recipient, two things happen:</maml:para>
            <maml:para>- HTML tags are automatically added to the text. For example, if you enter the text: "This mailbox is not monitored", the MailTip automatically becomes: `&lt;html&gt;&lt;body&gt;This mailbox is not monitored&lt;/body&gt;&lt;/html&gt;`. Additional HTML tags aren't supported, and the length of the MailTip can't exceed 175 displayed characters.</maml:para>
            <maml:para>- The text is automatically added to the MailTipTranslations property of the recipient as the default value: `default:&lt;MailTip text&gt;`. If you modify the MailTip text, the default value is automatically updated in the MailTipTranslations property, and vice-versa.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipTranslations</maml:name>
          <maml:description>
            <maml:para>The MailTipTranslations parameter specifies additional languages for the custom MailTip text that's defined by the MailTip parameter. HTML tags are automatically added to the MailTip translation, additional HTML tags aren't supported, and the length of the MailTip translation can't exceed 175 displayed characters.</maml:para>
            <maml:para>To add or remove MailTip translations without affecting the default MailTip or other MailTip translations, use the following syntax:</maml:para>
            <maml:para>`@{Add="Culture1:Localized text 1","\Culture2:Localized text 2"...; Remove="Culture3:Localized text 3","Culture4:Localized text 4"...}`.</maml:para>
            <maml:para>CultureN is a valid ISO 639 two-letter culture code that's associated with the language.</maml:para>
            <maml:para>For example, suppose this recipient currently has the MailTip text: "This mailbox is not monitored." To add the Spanish translation, use the following value for this parameter: `@{Add="ES:Esta caja no se supervisa."}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
            <maml:para>- Modify the properties of the group</maml:para>
            <maml:para>- Add or remove group members</maml:para>
            <maml:para>- Delete the group</maml:para>
            <maml:para>- Approve member depart or join requests (if available)</maml:para>
            <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
            <maml:para></maml:para>
            <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple owners and overwrite all existing entries, use the following syntax: `Owner1,Owner2,...OwnerN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Owner1","Owner2",..."OwnerN"`.</maml:para>
            <maml:para>To add or remove owners without affecting other existing entries, use the following syntax: `@{Add="Owner1","Owner2",...; Remove="Owner3","Owner4"...}`.</maml:para>
            <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MemberDepartRestriction</maml:name>
          <maml:description>
            <maml:para>The MemberDepartRestriction parameter specifies the restrictions that you put on requests to leave the group. Valid values are:</maml:para>
            <maml:para>- Open: Members can leave the group without approval from one of the group owners. This is the default value for universal distribution groups. You can't use this value on universal security groups.</maml:para>
            <maml:para>- Closed: Members can't remove themselves from the group, and requests to leave the group are rejected automatically. Group membership is controlled by the group owners. This is the default value for universal security groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
          <dev:type>
            <maml:name>MemberUpdateType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MemberJoinRestriction</maml:name>
          <maml:description>
            <maml:para>The MemberJoinRestriction parameter specifies the restrictions that you put on requests to join the group. Valid values are:</maml:para>
            <maml:para>- Open: Users can add themselves to the group without approval from a group owner. You can't use this value on universal security groups.</maml:para>
            <maml:para>- Closed: Users can't add themselves to the group, and requests to join the group are rejected automatically. Group membership is controlled by the group owners. This is the default value on universal security groups and universal distribution groups.</maml:para>
            <maml:para>- ApprovalRequired: Users can request to join the group. The user is added to the group after the request is approved by one of the group owners. Although you can use this value on universal security groups, user requests to join the group aren't sent to the group owners, so this setting is only effective on universal distribution groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
          <dev:type>
            <maml:name>MemberUpdateType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModeratedBy</maml:name>
          <maml:description>
            <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>For mail-enabled security groups, you need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
            <maml:para>For distribution groups, if you set the ModerationEnabled parameter to the value $true, but you don't use this parameter to specify any moderators, the group owners that are specified by the ManagedBy parameter are responsible for approving messages sent to the group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
            <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
            <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PrimarySmtpAddress</maml:name>
          <maml:description>
            <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient. You can't use the EmailAddresses and PrimarySmtpAddress parameters in the same command.</maml:para>
            <maml:para>If you set the EmailAddressPolicyEnabled parameter to $false, you can specify the primary address using the PrimarySmtpAddress parameter, but that means the email addresses of the mail user no longer automatically updated by email address policies.</maml:para>
            <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFrom</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFrom parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>The senders you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFrom and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFromDLMembers</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFromDLMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group aren't allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
            <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
            <maml:para>The groups you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFromDLMembers and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFromSendersOrMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group aren't allowed to send messages to this recipient.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the RejectMessagesFrom and RejectMessagesFromDLMembers parameters.</maml:para>
            <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the RejectMessagesFrom and RejectMessagesFromDLMembers properties, respectively. Therefore, you can't use the RejectMessagesFromSendersOrMembers parameter and the RejectMessagesFrom or RejectMessagesFromDLMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReportToManagerEnabled</maml:name>
          <maml:description>
            <maml:para>The ReportToManagerEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to the owners of the group (defined by the ManagedBy property). Valid values are:</maml:para>
            <maml:para>- $true: Delivery status notifications are sent to the owners of the group.</maml:para>
            <maml:para>- $false: Delivery status notifications aren't sent to the owners of the group. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReportToOriginatorEnabled</maml:name>
          <maml:description>
            <maml:para>The ReportToOriginatorEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to senders who send messages to this group. Valid values are:</maml:para>
            <maml:para>- $true: Delivery status notifications are sent to the message senders. This is the default value.</maml:para>
            <maml:para>- $false: Delivery status notifications aren't sent to the message senders.</maml:para>
            <maml:para></maml:para>
            <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RequireSenderAuthenticationEnabled</maml:name>
          <maml:description>
            <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
            <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
            <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResetMigrationToUnifiedGroup</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The ResetMigrationToUnifiedGroup switch specifies whether you want to reset the flag that indicates the migration of the distribution group to a Microsoft 365 Group is in progress. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RoomList</maml:name>
          <maml:description>
            <maml:para>The RoomList switch specifies that all members of this distribution group are room mailboxes. You don't need to specify a value with this switch.</maml:para>
            <maml:para>You can create a distribution group for an office building in your organization and add all rooms in that building to the distribution group. Room list distribution groups are used to generate a list of building locations for meeting requests in Outlook 2010 or later. Room lists allow a user to select a building and get availability information for all rooms in that building, without having to add each room individually.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendModerationNotifications</maml:name>
          <maml:description>
            <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
            <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
            <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
            <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
          <dev:type>
            <maml:name>TransportModerationNotificationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendOofMessageToOriginatorEnabled</maml:name>
          <maml:description>
            <maml:para>The SendOofMessageToOriginatorEnabled parameter specifies how to handle out of office (OOF) messages for members of the group. Valid values are:</maml:para>
            <maml:para>- $true: When messages are sent to the group, OOF messages for any of the group members are sent to the message sender.</maml:para>
            <maml:para>- $false: When messages are sent to the group, OOF messages for any of the group members aren't sent to the message sender. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SimpleDisplayName</maml:name>
          <maml:description>
            <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
            <maml:para>- a - z</maml:para>
            <maml:para>- A - Z</maml:para>
            <maml:para>- 0 - 9</maml:para>
            <maml:para>- space</maml:para>
            <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UMDtmfMap</maml:name>
          <maml:description>
            <maml:para>The UMDtmfMap parameter specifies the dual-tone multiple-frequency (DTMF) map values for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Typically, these DTMF values are automatically created and updated, but you can use this parameter to make changes manually. This parameter uses the following syntax:</maml:para>
            <maml:para>- `emailAddress:&lt;integers&gt;`</maml:para>
            <maml:para>- `lastNameFirstName:&lt;integers&gt;`</maml:para>
            <maml:para>- `firstNameLastName:&lt;integers&gt;`</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter values that overwrite all existing entries, use the following syntax: `emailAddress:&lt;integers&gt;,lastNameFirstName:&lt;integers&gt;,firstNameLastName:&lt;integers&gt;`.</maml:para>
            <maml:para>If you use this syntax and you omit any of the DTMF map values, those values are removed from the recipient. For example, if you specify only `emailAddress:&lt;integers&gt;`, all existing lastNameFirstName and firstNameLastName values are removed.</maml:para>
            <maml:para>To add or remove values without affecting other existing entries, use the following syntax: `@{Add="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"; Remove="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"}`.</maml:para>
            <maml:para>If you use this syntax, you don't need to specify all of the DTMF map values, and you can specify multiple DTMF map values. For example, you can use `@{Add="emailAddress:&lt;integers1&gt;","emailAddress:&lt;integers2&gt;}` to add two new values for emailAddress without affecting the existing lastNameFirstName and firstNameLastName values.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WindowsEmailAddress</maml:name>
          <maml:description>
            <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
            <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
            <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
            <maml:para></maml:para>
            <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFrom</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFrom parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>The senders you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFromDLMembers</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFromDLMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group are allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
          <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
          <maml:para>The groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFromDLMembers and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFromSendersOrMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group are allowed to send messages to this recipient.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the AcceptMessagesOnlyFrom and AcceptMessageOnlyFromDLMembers parameters.</maml:para>
          <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromDLMembers properties, respectively. Therefore, you can't use the AcceptMessagesOnlyFromSendersOrMembers parameter and the AcceptMessagesOnlyFrom or AcceptMessagesOnlyFromDLMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
          <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
          <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
          <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
          <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
          <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
          <maml:para></maml:para>
          <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
          <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassModerationFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The BypassModerationFromSendersOrMembers parameter specifies who is allowed to send messages to this moderated recipient without approval from a moderator. Valid values for this parameter are individual senders and groups in your organization. Specifying a group means all members of the group are allowed to send messages to this recipient without approval from a moderator.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple senders and overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove one or more senders without affecting any existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>This parameter is meaningful only when moderation is enabled for the recipient. By default, this parameter is blank ($null), which means messages from all senders other than the designated moderators are moderated. When a moderator sends a message to this recipient, the message is isn't moderated. In other words, you don't need to use this parameter to include the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassNestedModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ByPassNestedModerationEnabled parameter specifies how to handle message approval when a moderated group contains other moderated groups as members. Valid values are:</maml:para>
          <maml:para>- $true: After a moderator approves a message sent to the group, the message is automatically approved for all other moderated groups that are members of the group.</maml:para>
          <maml:para>- $false: After a moderator approves a message sent to the group, separate approval is required for each moderated group that's a member of the group. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CreateDTMFMap</maml:name>
        <maml:description>
          <maml:para>The CreateDTMFMap parameter specifies whether to create a dual-tone multiple-frequency (DTMF) map for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Valid values are:</maml:para>
          <maml:para>- $true: A DTMF map is created for the recipient. This is the default value.</maml:para>
          <maml:para>- $false: A DTMF map isn't created for the recipient.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute1</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute10</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute10 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute11</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute11 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute12</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute12 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute13</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute13 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute14</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute14 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute15</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute15 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute2</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute3</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute4</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute5</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute6</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute6 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute7</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute7 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute8</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute8 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute9</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute9 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>If a group naming policy is enforced in your organization, users need to follow the naming constraints as specified by the DistributionGroupNameBlockedWordList parameter on the Set-OrganizationConfig cmdlet. To bypass this requirement, use the IgnoreNamingPolicy switch.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EmailAddresses</maml:name>
        <maml:description>
          <maml:para>The EmailAddresses parameter specifies all the email addresses (proxy addresses) for the recipient, including the primary SMTP address. In on-premises Exchange organizations, the primary SMTP address and other proxy addresses are typically set by email address policies. However, you can use this parameter to configure other proxy addresses for the recipient. For more information, see Email address policies in Exchange Server (https://docs.microsoft.com/Exchange/email-addresses-and-address-books/email-address-policies/email-address-policies).</maml:para>
          <maml:para>Valid syntax for this parameter is `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`. The optional `Type value specifies the type of email address. Examples of valid values include:</maml:para>
          <maml:para>- SMTP: The primary SMTP address. You can use this value only once in a command.</maml:para>
          <maml:para>- smtp: Other SMTP email addresses.</maml:para>
          <maml:para>- X400: X.400 addresses in on-premises Exchange.</maml:para>
          <maml:para>- X500: X.500 addresses in on-premises Exchange.</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't include a Type value for an email address, the value smtp is assumed. Note that Exchange doesn't validate the syntax of custom address types (including X.400 addresses). Therefore, you need to verify that any custom addresses are formatted correctly.</maml:para>
          <maml:para>To specify the primary SMTP email address, you can use any of the following methods:</maml:para>
          <maml:para>- Use the Type value SMTP on the address.</maml:para>
          <maml:para>- The first email address when you don't use any Type values, or when you use multiple lowercase smtp Type values.</maml:para>
          <maml:para>- Use the PrimarySmtpAddress parameter instead. You can't use the EmailAddresses parameter and the PrimarySmtpAddress parameter in the same command.</maml:para>
          <maml:para></maml:para>
          <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
          <maml:para>To replace all existing proxy email addresses with the values you specify, use the following syntax: `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`.</maml:para>
          <maml:para>To add or remove specify proxy addresses without affecting other existing values, use the following syntax: `@{Add="Type:EmailAddress1","Type:EmailAddress2",...; Remove="Type:EmailAddress3","Type:EmailAddress4",...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ProxyAddressCollection</command:parameterValue>
        <dev:type>
          <maml:name>ProxyAddressCollection</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute1</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute1 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute2</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute2 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute3</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute3 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute4</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute4 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute5</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute5 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ForceUpgrade</maml:name>
        <maml:description>
          <maml:para>The ForceUpgrade switch specifies whether to suppress the confirmation message that appears if the object was created in a previous version of Exchange. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GrantSendOnBehalfTo</maml:name>
        <maml:description>
          <maml:para>The GrantSendOnBehalfTo parameter specifies who can send on behalf of this group. Although messages send on behalf of the group clearly show the sender in the From field (`&lt;Sender&gt; on behalf of &lt;Group&gt;`), replies to these messages are delivered to the group, not the sender.</maml:para>
          <maml:para>The sender you specify for this parameter must a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>By default, this parameter is blank, which means no one else has permission to send on behalf of this group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HiddenFromAddressListsEnabled</maml:name>
        <maml:description>
          <maml:para>The HiddenFromAddressListsEnabled parameter specifies whether this recipient is visible in address lists. Valid values are:</maml:para>
          <maml:para>- $true: The recipient isn't visible in address lists.</maml:para>
          <maml:para>- $false: The recipient is visible in address lists. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IgnoreNamingPolicy</maml:name>
        <maml:description>
          <maml:para>The IgnoreNamingPolicy switch specifies whether to prevent this group from being affected by your organization's group naming policy. You don't need to specify a value with this switch.</maml:para>
          <maml:para>The group naming policy is defined by the DistributionGroupNamingPolicy and DistributionGroupNameBlockedWordList parameters on the Set-OrganizationConfig cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTip</maml:name>
        <maml:description>
          <maml:para>The MailTip parameter specifies the custom MailTip text for this recipient. The MailTip is shown to senders when they start drafting an email message to this recipient. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>When you add a MailTip to a recipient, two things happen:</maml:para>
          <maml:para>- HTML tags are automatically added to the text. For example, if you enter the text: "This mailbox is not monitored", the MailTip automatically becomes: `&lt;html&gt;&lt;body&gt;This mailbox is not monitored&lt;/body&gt;&lt;/html&gt;`. Additional HTML tags aren't supported, and the length of the MailTip can't exceed 175 displayed characters.</maml:para>
          <maml:para>- The text is automatically added to the MailTipTranslations property of the recipient as the default value: `default:&lt;MailTip text&gt;`. If you modify the MailTip text, the default value is automatically updated in the MailTipTranslations property, and vice-versa.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipTranslations</maml:name>
        <maml:description>
          <maml:para>The MailTipTranslations parameter specifies additional languages for the custom MailTip text that's defined by the MailTip parameter. HTML tags are automatically added to the MailTip translation, additional HTML tags aren't supported, and the length of the MailTip translation can't exceed 175 displayed characters.</maml:para>
          <maml:para>To add or remove MailTip translations without affecting the default MailTip or other MailTip translations, use the following syntax:</maml:para>
          <maml:para>`@{Add="Culture1:Localized text 1","\Culture2:Localized text 2"...; Remove="Culture3:Localized text 3","Culture4:Localized text 4"...}`.</maml:para>
          <maml:para>CultureN is a valid ISO 639 two-letter culture code that's associated with the language.</maml:para>
          <maml:para>For example, suppose this recipient currently has the MailTip text: "This mailbox is not monitored." To add the Spanish translation, use the following value for this parameter: `@{Add="ES:Esta caja no se supervisa."}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
          <maml:para>- Modify the properties of the group</maml:para>
          <maml:para>- Add or remove group members</maml:para>
          <maml:para>- Delete the group</maml:para>
          <maml:para>- Approve member depart or join requests (if available)</maml:para>
          <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
          <maml:para></maml:para>
          <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple owners and overwrite all existing entries, use the following syntax: `Owner1,Owner2,...OwnerN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Owner1","Owner2",..."OwnerN"`.</maml:para>
          <maml:para>To add or remove owners without affecting other existing entries, use the following syntax: `@{Add="Owner1","Owner2",...; Remove="Owner3","Owner4"...}`.</maml:para>
          <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MemberDepartRestriction</maml:name>
        <maml:description>
          <maml:para>The MemberDepartRestriction parameter specifies the restrictions that you put on requests to leave the group. Valid values are:</maml:para>
          <maml:para>- Open: Members can leave the group without approval from one of the group owners. This is the default value for universal distribution groups. You can't use this value on universal security groups.</maml:para>
          <maml:para>- Closed: Members can't remove themselves from the group, and requests to leave the group are rejected automatically. Group membership is controlled by the group owners. This is the default value for universal security groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
        <dev:type>
          <maml:name>MemberUpdateType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MemberJoinRestriction</maml:name>
        <maml:description>
          <maml:para>The MemberJoinRestriction parameter specifies the restrictions that you put on requests to join the group. Valid values are:</maml:para>
          <maml:para>- Open: Users can add themselves to the group without approval from a group owner. You can't use this value on universal security groups.</maml:para>
          <maml:para>- Closed: Users can't add themselves to the group, and requests to join the group are rejected automatically. Group membership is controlled by the group owners. This is the default value on universal security groups and universal distribution groups.</maml:para>
          <maml:para>- ApprovalRequired: Users can request to join the group. The user is added to the group after the request is approved by one of the group owners. Although you can use this value on universal security groups, user requests to join the group aren't sent to the group owners, so this setting is only effective on universal distribution groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MemberUpdateType</command:parameterValue>
        <dev:type>
          <maml:name>MemberUpdateType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModeratedBy</maml:name>
        <maml:description>
          <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>For mail-enabled security groups, you need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
          <maml:para>For distribution groups, if you set the ModerationEnabled parameter to the value $true, but you don't use this parameter to specify any moderators, the group owners that are specified by the ManagedBy parameter are responsible for approving messages sent to the group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
          <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
          <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PrimarySmtpAddress</maml:name>
        <maml:description>
          <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient. You can't use the EmailAddresses and PrimarySmtpAddress parameters in the same command.</maml:para>
          <maml:para>If you set the EmailAddressPolicyEnabled parameter to $false, you can specify the primary address using the PrimarySmtpAddress parameter, but that means the email addresses of the mail user no longer automatically updated by email address policies.</maml:para>
          <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFrom</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFrom parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>The senders you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFrom and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFromDLMembers</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFromDLMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group aren't allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
          <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
          <maml:para>The groups you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFromDLMembers and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFromSendersOrMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group aren't allowed to send messages to this recipient.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the RejectMessagesFrom and RejectMessagesFromDLMembers parameters.</maml:para>
          <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the RejectMessagesFrom and RejectMessagesFromDLMembers properties, respectively. Therefore, you can't use the RejectMessagesFromSendersOrMembers parameter and the RejectMessagesFrom or RejectMessagesFromDLMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReportToManagerEnabled</maml:name>
        <maml:description>
          <maml:para>The ReportToManagerEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to the owners of the group (defined by the ManagedBy property). Valid values are:</maml:para>
          <maml:para>- $true: Delivery status notifications are sent to the owners of the group.</maml:para>
          <maml:para>- $false: Delivery status notifications aren't sent to the owners of the group. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReportToOriginatorEnabled</maml:name>
        <maml:description>
          <maml:para>The ReportToOriginatorEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to senders who send messages to this group. Valid values are:</maml:para>
          <maml:para>- $true: Delivery status notifications are sent to the message senders. This is the default value.</maml:para>
          <maml:para>- $false: Delivery status notifications aren't sent to the message senders.</maml:para>
          <maml:para></maml:para>
          <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RequireSenderAuthenticationEnabled</maml:name>
        <maml:description>
          <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
          <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
          <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResetMigrationToUnifiedGroup</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The ResetMigrationToUnifiedGroup switch specifies whether you want to reset the flag that indicates the migration of the distribution group to a Microsoft 365 Group is in progress. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RoomList</maml:name>
        <maml:description>
          <maml:para>The RoomList switch specifies that all members of this distribution group are room mailboxes. You don't need to specify a value with this switch.</maml:para>
          <maml:para>You can create a distribution group for an office building in your organization and add all rooms in that building to the distribution group. Room list distribution groups are used to generate a list of building locations for meeting requests in Outlook 2010 or later. Room lists allow a user to select a building and get availability information for all rooms in that building, without having to add each room individually.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendModerationNotifications</maml:name>
        <maml:description>
          <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
          <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
          <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
          <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
        <dev:type>
          <maml:name>TransportModerationNotificationFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendOofMessageToOriginatorEnabled</maml:name>
        <maml:description>
          <maml:para>The SendOofMessageToOriginatorEnabled parameter specifies how to handle out of office (OOF) messages for members of the group. Valid values are:</maml:para>
          <maml:para>- $true: When messages are sent to the group, OOF messages for any of the group members are sent to the message sender.</maml:para>
          <maml:para>- $false: When messages are sent to the group, OOF messages for any of the group members aren't sent to the message sender. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SimpleDisplayName</maml:name>
        <maml:description>
          <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
          <maml:para>- a - z</maml:para>
          <maml:para>- A - Z</maml:para>
          <maml:para>- 0 - 9</maml:para>
          <maml:para>- space</maml:para>
          <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UMDtmfMap</maml:name>
        <maml:description>
          <maml:para>The UMDtmfMap parameter specifies the dual-tone multiple-frequency (DTMF) map values for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Typically, these DTMF values are automatically created and updated, but you can use this parameter to make changes manually. This parameter uses the following syntax:</maml:para>
          <maml:para>- `emailAddress:&lt;integers&gt;`</maml:para>
          <maml:para>- `lastNameFirstName:&lt;integers&gt;`</maml:para>
          <maml:para>- `firstNameLastName:&lt;integers&gt;`</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter values that overwrite all existing entries, use the following syntax: `emailAddress:&lt;integers&gt;,lastNameFirstName:&lt;integers&gt;,firstNameLastName:&lt;integers&gt;`.</maml:para>
          <maml:para>If you use this syntax and you omit any of the DTMF map values, those values are removed from the recipient. For example, if you specify only `emailAddress:&lt;integers&gt;`, all existing lastNameFirstName and firstNameLastName values are removed.</maml:para>
          <maml:para>To add or remove values without affecting other existing entries, use the following syntax: `@{Add="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"; Remove="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"}`.</maml:para>
          <maml:para>If you use this syntax, you don't need to specify all of the DTMF map values, and you can specify multiple DTMF map values. For example, you can use `@{Add="emailAddress:&lt;integers1&gt;","emailAddress:&lt;integers2&gt;}` to add two new values for emailAddress without affecting the existing lastNameFirstName and firstNameLastName values.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WindowsEmailAddress</maml:name>
        <maml:description>
          <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
          <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
          <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
          <maml:para></maml:para>
          <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-DistributionGroup -Identity "Accounting" -DisplayName "Accounting Group"</dev:code>
        <dev:remarks>
          <maml:para>This example changes the display name of an existing distribution group from Accounting to Accounting Group.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-DistributionGroup -Identity "Bldg34 Conf Rooms" -RoomList</dev:code>
        <dev:remarks>
          <maml:para>This example converts the Bldg34 Conf Rooms distribution group to a room list.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Set-DistributionGroup -Identity Ed_DirectReports -Name Ayla_DirectReports -IgnoreNamingPolicy</dev:code>
        <dev:remarks>
          <maml:para>This example changes the name of an existing distribution group from Ed_DirectReports to Ayla_DirectReports and ignores the group naming policy.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-distributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-DynamicDistributionGroup</command:name>
      <command:verb>Set</command:verb>
      <command:noun>DynamicDistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-DynamicDistributionGroup cmdlet to modify existing dynamic distribution groups.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>A dynamic distribution group queries mail-enabled objects and builds the group membership based on the results. The group membership is recalculated whenever an email message is sent to a group. You can use the Set-DynamicDistributionGroup cmdlet to overwrite existing settings or to add new settings.</maml:para>
      <maml:para>The Conditional parameters that are used with the IncludedRecipients parameter are subject to the following limitations:</maml:para>
      <maml:para>- The EQV operator is used for every property value, as in "Department equals Sales". Wildcards and partial matches aren't supported.</maml:para>
      <maml:para>- The OR operator is always used for multiple values of the same property, as in "Department equals Sales OR Marketing".</maml:para>
      <maml:para>- The AND operator is always used for multiple properties, as in "Department equals Sales AND Company equals Contoso".</maml:para>
      <maml:para></maml:para>
      <maml:para>To create flexible filters that use any available recipient property and that aren't subject to these limitations, you can use the RecipientFilter parameter to create a custom OPath filter.</maml:para>
      <maml:para>You can't use this cmdlet to replace a precanned filter with a custom OPath filter, or vice-versa. You can only modify the existing filter.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-DynamicDistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the dynamic distribution group that you want to modify. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DynamicGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFrom</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFrom parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>The senders you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFromDLMembers</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFromDLMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group are allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
            <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
            <maml:para>The groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFromDLMembers and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AcceptMessagesOnlyFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The AcceptMessagesOnlyFromSendersOrMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group are allowed to send messages to this recipient.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the AcceptMessagesOnlyFrom and AcceptMessageOnlyFromDLMembers parameters.</maml:para>
            <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromDLMembers properties, respectively. Therefore, you can't use the AcceptMessagesOnlyFromSendersOrMembers parameter and the AcceptMessagesOnlyFrom or AcceptMessagesOnlyFromDLMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Alias</maml:name>
          <maml:description>
            <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
            <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
            <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
            <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
            <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
            <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
            <maml:para></maml:para>
            <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
            <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassModerationFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The BypassModerationFromSendersOrMembers parameter specifies who is allowed to send messages to this moderated recipient without approval from a moderator. Valid values for this parameter are individual senders and groups in your organization. Specifying a group means all members of the group are allowed to send messages to this recipient without approval from a moderator.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple senders and overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove one or more senders without affecting any existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>This parameter is meaningful only when moderation is enabled for the recipient. By default, this parameter is blank ($null), which means messages from all senders other than the designated moderators are moderated. When a moderator sends a message to this recipient, the message is isn't moderated. In other words, you don't need to use this parameter to include the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCompany</maml:name>
          <maml:description>
            <maml:para>The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute1</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute10</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute11</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute12</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute13</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute14</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute15</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute2</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute3</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute4</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute5</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute6</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute7</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute8</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalCustomAttribute9</maml:name>
          <maml:description>
            <maml:para>The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalDepartment</maml:name>
          <maml:description>
            <maml:para>The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConditionalStateOrProvince</maml:name>
          <maml:description>
            <maml:para>The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. You can specify multiple values separated by commas.</maml:para>
            <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CreateDTMFMap</maml:name>
          <maml:description>
            <maml:para>The CreateDTMFMap parameter specifies whether to create a dual-tone multiple-frequency (DTMF) map for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Valid values are:</maml:para>
            <maml:para>- $true: A DTMF map is created for the recipient. This is the default value.</maml:para>
            <maml:para>- $false: A DTMF map isn't created for the recipient.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute1</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute10</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute10 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute11</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute11 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute12</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute12 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute13</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute13 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute14</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute14 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute15</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute15 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute2</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute3</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute4</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute5</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute6</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute6 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute7</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute7 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute8</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute8 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CustomAttribute9</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the CustomAttribute9 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DirectMembershipOnly</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the dynamic distribution group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EmailAddresses</maml:name>
          <maml:description>
            <maml:para>The EmailAddresses parameter specifies all the email addresses (proxy addresses) for the recipient, including the primary SMTP address. In on-premises Exchange organizations, the primary SMTP address and other proxy addresses are typically set by email address policies. However, you can use this parameter to configure other proxy addresses for the recipient. For more information, see Email address policies in Exchange Server (https://docs.microsoft.com/Exchange/email-addresses-and-address-books/email-address-policies/email-address-policies).</maml:para>
            <maml:para>Valid syntax for this parameter is `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`. The optional `Type value specifies the type of email address. Examples of valid values include:</maml:para>
            <maml:para>- SMTP: The primary SMTP address. You can use this value only once in a command.</maml:para>
            <maml:para>- smtp: Other SMTP email addresses.</maml:para>
            <maml:para>- X400: X.400 addresses in on-premises Exchange.</maml:para>
            <maml:para>- X500: X.500 addresses in on-premises Exchange.</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't include a Type value for an email address, the value smtp is assumed. Note that Exchange doesn't validate the syntax of custom address types (including X.400 addresses). Therefore, you need to verify that any custom addresses are formatted correctly.</maml:para>
            <maml:para>To specify the primary SMTP email address, you can use any of the following methods:</maml:para>
            <maml:para>- Use the Type value SMTP on the address.</maml:para>
            <maml:para>- The first email address when you don't use any Type values, or when you use multiple lowercase smtp Type values.</maml:para>
            <maml:para>- Use the PrimarySmtpAddress parameter instead. You can't use the EmailAddresses parameter and the PrimarySmtpAddress parameter in the same command.</maml:para>
            <maml:para></maml:para>
            <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
            <maml:para>To replace all existing proxy email addresses with the values you specify, use the following syntax: `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`.</maml:para>
            <maml:para>To add or remove specify proxy addresses without affecting other existing values, use the following syntax: `@{Add="Type:EmailAddress1","Type:EmailAddress2",...; Remove="Type:EmailAddress3","Type:EmailAddress4",...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">ProxyAddressCollection</command:parameterValue>
          <dev:type>
            <maml:name>ProxyAddressCollection</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute1</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute1 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute2</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute2 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute3</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute3 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute4</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute4 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExtensionCustomAttribute5</maml:name>
          <maml:description>
            <maml:para>This parameter specifies a value for the ExtensionCustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
            <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute5 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ForceUpgrade</maml:name>
          <maml:description>
            <maml:para>The ForceUpgrade switch specifies whether to suppress the confirmation message that appears if the object was created in a previous version of Exchange. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GrantSendOnBehalfTo</maml:name>
          <maml:description>
            <maml:para>The GrantSendOnBehalfTo parameter specifies who can send on behalf of this dynamic distribution group. Although messages send on behalf of the group clearly show the sender in the From field (`&lt;Sender&gt; on behalf of &lt;Group&gt;`), replies to these messages are delivered to the group, not the sender.</maml:para>
            <maml:para>The sender you specify for this parameter must a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>By default, this parameter is blank, which means no one else has permission to send on behalf of this group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>HiddenFromAddressListsEnabled</maml:name>
          <maml:description>
            <maml:para>The HiddenFromAddressListsEnabled parameter specifies whether this recipient is visible in address lists. Valid values are:</maml:para>
            <maml:para>- $true: The recipient isn't visible in address lists.</maml:para>
            <maml:para>- $false: The recipient is visible in address lists. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludedRecipients</maml:name>
          <maml:description>
            <maml:para>The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. Valid values are:</maml:para>
            <maml:para>- AllRecipients: This value can be used only by itself.</maml:para>
            <maml:para>- MailboxUsers</maml:para>
            <maml:para>- MailContacts</maml:para>
            <maml:para>- MailGroups</maml:para>
            <maml:para>- MailUsers</maml:para>
            <maml:para>- Resources: This value indicates room or equipment mailboxes.</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas. When you use multiple values, the OR Boolean operator is applied.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">WellKnownRecipientType</command:parameterValue>
          <dev:type>
            <maml:name>WellKnownRecipientType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTip</maml:name>
          <maml:description>
            <maml:para>The MailTip parameter specifies the custom MailTip text for this recipient. The MailTip is shown to senders when they start drafting an email message to this recipient. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>When you add a MailTip to a recipient, two things happen:</maml:para>
            <maml:para>- HTML tags are automatically added to the text. For example, if you enter the text: "This mailbox is not monitored", the MailTip automatically becomes: `&lt;html&gt;&lt;body&gt;This mailbox is not monitored&lt;/body&gt;&lt;/html&gt;`. Additional HTML tags aren't supported, and the length of the MailTip can't exceed 175 displayed characters.</maml:para>
            <maml:para>- The text is automatically added to the MailTipTranslations property of the recipient as the default value: `default:&lt;MailTip text&gt;`. If you modify the MailTip text, the default value is automatically updated in the MailTipTranslations property, and vice-versa.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipTranslations</maml:name>
          <maml:description>
            <maml:para>The MailTipTranslations parameter specifies additional languages for the custom MailTip text that's defined by the MailTip parameter. HTML tags are automatically added to the MailTip translation, additional HTML tags aren't supported, and the length of the MailTip translation can't exceed 175 displayed characters.</maml:para>
            <maml:para>To add or remove MailTip translations without affecting the default MailTip or other MailTip translations, use the following syntax:</maml:para>
            <maml:para>`@{Add="Culture1:Localized text 1","\Culture2:Localized text 2"...; Remove="Culture3:Localized text 3","Culture4:Localized text 4"...}`.</maml:para>
            <maml:para>CultureN is a valid ISO 639 two-letter culture code that's associated with the language.</maml:para>
            <maml:para>For example, suppose this recipient currently has the MailTip text: "This mailbox is not monitored." To add the Spanish translation, use the following value for this parameter: `@{Add="ES:Esta caja no se supervisa."}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter specifies an owner for the group. A dynamic group can only have one owner. The group owner is able to:</maml:para>
            <maml:para>- Modify the properties of the group</maml:para>
            <maml:para>- Delete the group</maml:para>
            <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
            <maml:para></maml:para>
            <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModeratedBy</maml:name>
          <maml:description>
            <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>You need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ModerationEnabled</maml:name>
          <maml:description>
            <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
            <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
            <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the dynamic distribution group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Notes</maml:name>
          <maml:description>
            <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PhoneticDisplayName</maml:name>
          <maml:description>
            <maml:para>The PhoneticDisplayName parameter specifies an alternate spelling of the user's name that's used for text to speech in Unified Messaging (UM) environments. Typically, you use this parameter when the pronunciation and spelling of the user's name don't match. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PrimarySmtpAddress</maml:name>
          <maml:description>
            <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient. You can't use the EmailAddresses and PrimarySmtpAddress parameters in the same command.</maml:para>
            <maml:para>If you set the EmailAddressPolicyEnabled parameter to $false, you can specify the primary address using the PrimarySmtpAddress parameter, but that means the email addresses of the mail user no longer automatically updated by email address policies.</maml:para>
            <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientContainer</maml:name>
          <maml:description>
            <maml:para>The RecipientContainer parameter specifies a filter that's based on the recipient's location in Active Directory. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, the default value is the OU where the object was created.</maml:para>
            <maml:para>Note that the RecipientContainer property can't be blank. The group is always limited to looking for recipients in a specific location (the value you specify for this parameter, or the location where the group was created).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationalUnitIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RecipientFilter</maml:name>
          <maml:description>
            <maml:para>The RecipientFilter parameter specifies a custom OPath filter that's based on the value of any available recipient property. You can use any available Windows PowerShell operator, and wildcards and partial matches are supported. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
            <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
            <maml:para>- Property is a filterable property. For filterable properties, see Filterable properties for the RecipientFilter parameter (https://docs.microsoft.com/powershell/exchange/recipientfilter-properties). - Value is the property value to filter on. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
            <maml:para>- ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - In cloud-based environments, you can't use a wildcard as the first character. For example, `'Sales '` is allowed, but `' Sales'` isn't allowed. - In on-premises Exchange, wildcards are valid only as the first or last character. For example, `'Sales '` or `' Sales'` are allowed, but `'Sa*les'` isn't allowed.</maml:para>
            <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFrom</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFrom parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
            <maml:para>The senders you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFrom and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFromDLMembers</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFromDLMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group aren't allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
            <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
            <maml:para>The groups you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFromDLMembers and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RejectMessagesFromSendersOrMembers</maml:name>
          <maml:description>
            <maml:para>The RejectMessagesFromSendersOrMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
            <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group aren't allowed to send messages to this recipient.</maml:para>
            <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
            <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the RejectMessagesFrom and RejectMessagesFromDLMembers parameters.</maml:para>
            <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the RejectMessagesFrom and RejectMessagesFromDLMembers properties, respectively. Therefore, you can't use the RejectMessagesFromSendersOrMembers parameter and the RejectMessagesFrom or RejectMessagesFromDLMembers parameters in the same command.</maml:para>
            <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReportToManagerEnabled</maml:name>
          <maml:description>
            <maml:para>The ReportToManagerEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to the owners of the group (defined by the ManagedBy property). Valid values are:</maml:para>
            <maml:para>- $true: Delivery status notifications are sent to the owners of the group.</maml:para>
            <maml:para>- $false: Delivery status notifications aren't sent to the owners of the group. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ReportToOriginatorEnabled</maml:name>
          <maml:description>
            <maml:para>The ReportToOriginatorEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to senders who send messages to this group. Valid values are:</maml:para>
            <maml:para>- $true: Delivery status notifications are sent to the message senders. This is the default value.</maml:para>
            <maml:para>- $false: Delivery status notifications aren't sent to the message senders.</maml:para>
            <maml:para></maml:para>
            <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RequireSenderAuthenticationEnabled</maml:name>
          <maml:description>
            <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
            <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
            <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendModerationNotifications</maml:name>
          <maml:description>
            <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
            <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
            <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
            <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
          <dev:type>
            <maml:name>TransportModerationNotificationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendOofMessageToOriginatorEnabled</maml:name>
          <maml:description>
            <maml:para>The SendOofMessageToOriginatorEnabled parameter specifies how to handle out of office (OOF) messages for members of the group. Valid values are:</maml:para>
            <maml:para>- $true: When messages are sent to the group, OOF messages for any of the group members are sent to the message sender. This is the default value.</maml:para>
            <maml:para>- $false: When messages are sent to the group, OOF messages for any of the group members aren't sent to the message sender.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SimpleDisplayName</maml:name>
          <maml:description>
            <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
            <maml:para>- a - z</maml:para>
            <maml:para>- A - Z</maml:para>
            <maml:para>- 0 - 9</maml:para>
            <maml:para>- space</maml:para>
            <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UMDtmfMap</maml:name>
          <maml:description>
            <maml:para>The UMDtmfMap parameter specifies the dual-tone multiple-frequency (DTMF) map values for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Typically, these DTMF values are automatically created and updated, but you can use this parameter to make changes manually. This parameter uses the following syntax:</maml:para>
            <maml:para>- `emailAddress:&lt;integers&gt;`</maml:para>
            <maml:para>- `lastNameFirstName:&lt;integers&gt;`</maml:para>
            <maml:para>- `firstNameLastName:&lt;integers&gt;`</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter values that overwrite all existing entries, use the following syntax: `emailAddress:&lt;integers&gt;,lastNameFirstName:&lt;integers&gt;,firstNameLastName:&lt;integers&gt;`.</maml:para>
            <maml:para>If you use this syntax and you omit any of the DTMF map values, those values are removed from the recipient. For example, if you specify only `emailAddress:&lt;integers&gt;`, all existing lastNameFirstName and firstNameLastName values are removed.</maml:para>
            <maml:para>To add or remove values without affecting other existing entries, use the following syntax: `@{Add="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"; Remove="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"}`.</maml:para>
            <maml:para>If you use this syntax, you don't need to specify all of the DTMF map values, and you can specify multiple DTMF map values. For example, you can use `@{Add="emailAddress:&lt;integers1&gt;","emailAddress:&lt;integers2&gt;}` to add two new values for emailAddress without affecting the existing lastNameFirstName and firstNameLastName values.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WindowsEmailAddress</maml:name>
          <maml:description>
            <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
            <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
            <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
            <maml:para></maml:para>
            <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the dynamic distribution group that you want to modify. You can use any value that uniquely identifies the dynamic distribution group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DynamicGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DynamicGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFrom</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFrom parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>The senders you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFromDLMembers</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFromDLMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group are allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
          <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
          <maml:para>The groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFromSendersOrMembers property. Therefore, you can't use the AcceptMessagesOnlyFromDLMembers and AcceptMessagesOnlyFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AcceptMessagesOnlyFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The AcceptMessagesOnlyFromSendersOrMembers parameter specifies who is allowed to send messages to this recipient. Messages from other senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group are allowed to send messages to this recipient.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the AcceptMessagesOnlyFrom and AcceptMessageOnlyFromDLMembers parameters.</maml:para>
          <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the AcceptMessagesOnlyFrom and AcceptMessagesOnlyFromDLMembers properties, respectively. Therefore, you can't use the AcceptMessagesOnlyFromSendersOrMembers parameter and the AcceptMessagesOnlyFrom or AcceptMessagesOnlyFromDLMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Alias</maml:name>
        <maml:description>
          <maml:para>The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value.</maml:para>
          <maml:para>The value of Alias can contain letters, numbers and the following characters: !, #, $, %, &amp;, ', *, +, -, /, =, ?, ^, _, `, {, }, |, and ~. Periods (.) are allowed, but each period must be surrounded by other valid characters (for example, help.desk). Unicode characters from U+00A1 to U+00FF are also allowed. The maximum length of the Alias value is 64 characters.</maml:para>
          <maml:para>When you create a recipient without specifying an email address, the Alias value you specify is used to generate the primary email address (`alias@domain`). Supported Unicode characters are mapped to best-fit US-ASCII text characters. For example, U+00F6 (ö) is changed to oe in the primary email address.</maml:para>
          <maml:para>If you don't use the Alias parameter when you create a recipient, the value of a different required parameter is used for the Alias property value:</maml:para>
          <maml:para>- Recipients with user accounts (for example, user mailboxes, and mail users): The left side of the MicrosoftOnlineServicesID or UserPrincipalName parameter is used. For example, helpdesk@contoso.com results in the Alias property value helpdesk.</maml:para>
          <maml:para>- Recipients without user accounts (for example, room mailboxes, mail contacts, and distribution groups): The value of the Name parameter is used. Spaces are removed and unsupported characters are converted to question marks (?).</maml:para>
          <maml:para></maml:para>
          <maml:para>If you modify the Alias value of an existing recipient, the primary email address is automatically updated only in environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is True for the recipient).</maml:para>
          <maml:para>The Alias parameter never generates or updates the primary email address of a mail contact or a mail user.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassModerationFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The BypassModerationFromSendersOrMembers parameter specifies who is allowed to send messages to this moderated recipient without approval from a moderator. Valid values for this parameter are individual senders and groups in your organization. Specifying a group means all members of the group are allowed to send messages to this recipient without approval from a moderator.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple senders and overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove one or more senders without affecting any existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>This parameter is meaningful only when moderation is enabled for the recipient. By default, this parameter is blank ($null), which means messages from all senders other than the designated moderators are moderated. When a moderator sends a message to this recipient, the message is isn't moderated. In other words, you don't need to use this parameter to include the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCompany</maml:name>
        <maml:description>
          <maml:para>The ConditionalCompany parameter specifies a precanned filter that's based on the value of the recipient's Company property.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute1</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute1 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute1 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute10</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute10 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute10 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute11</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute11 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute11 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute12</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute12 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute12 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute13</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute13 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute13 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute14</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute14 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute14 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute15</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute15 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute15 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute2</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute2 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute2 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute3</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute3 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute3 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute4</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute4 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute4 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute5</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute5 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute5 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute6</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute6 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute6 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute7</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute7 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute7 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute8</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute8 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute8 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalCustomAttribute9</maml:name>
        <maml:description>
          <maml:para>The ConditionalCustomAttribute9 parameter specifies a precanned filter that's based on the value of the recipient's CustomAttribute9 property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalDepartment</maml:name>
        <maml:description>
          <maml:para>The ConditionalDepartment parameter specifies a precanned filter that's based on the value of the recipient's Department property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConditionalStateOrProvince</maml:name>
        <maml:description>
          <maml:para>The ConditionalStateOrProvince parameter specifies a precanned filter that's based on the value of the recipient's StateOrProvince property. You can specify multiple values separated by commas.</maml:para>
          <maml:para>When you use multiple values for this parameter, the OR Boolean operator is applied. For more information about how Conditional parameters work, see the Detailed Description section of this topic.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CreateDTMFMap</maml:name>
        <maml:description>
          <maml:para>The CreateDTMFMap parameter specifies whether to create a dual-tone multiple-frequency (DTMF) map for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Valid values are:</maml:para>
          <maml:para>- $true: A DTMF map is created for the recipient. This is the default value.</maml:para>
          <maml:para>- $false: A DTMF map isn't created for the recipient.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute1</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute10</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute10 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute11</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute11 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute12</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute12 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute13</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute13 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute14</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute14 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute15</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute15 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute2</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute3</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute4</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute5</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute6</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute6 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute7</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute7 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute8</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute8 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CustomAttribute9</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the CustomAttribute9 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. The maximum length is 1024 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DirectMembershipOnly</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>The DisplayName parameter specifies the display name of the dynamic distribution group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EmailAddresses</maml:name>
        <maml:description>
          <maml:para>The EmailAddresses parameter specifies all the email addresses (proxy addresses) for the recipient, including the primary SMTP address. In on-premises Exchange organizations, the primary SMTP address and other proxy addresses are typically set by email address policies. However, you can use this parameter to configure other proxy addresses for the recipient. For more information, see Email address policies in Exchange Server (https://docs.microsoft.com/Exchange/email-addresses-and-address-books/email-address-policies/email-address-policies).</maml:para>
          <maml:para>Valid syntax for this parameter is `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`. The optional `Type value specifies the type of email address. Examples of valid values include:</maml:para>
          <maml:para>- SMTP: The primary SMTP address. You can use this value only once in a command.</maml:para>
          <maml:para>- smtp: Other SMTP email addresses.</maml:para>
          <maml:para>- X400: X.400 addresses in on-premises Exchange.</maml:para>
          <maml:para>- X500: X.500 addresses in on-premises Exchange.</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't include a Type value for an email address, the value smtp is assumed. Note that Exchange doesn't validate the syntax of custom address types (including X.400 addresses). Therefore, you need to verify that any custom addresses are formatted correctly.</maml:para>
          <maml:para>To specify the primary SMTP email address, you can use any of the following methods:</maml:para>
          <maml:para>- Use the Type value SMTP on the address.</maml:para>
          <maml:para>- The first email address when you don't use any Type values, or when you use multiple lowercase smtp Type values.</maml:para>
          <maml:para>- Use the PrimarySmtpAddress parameter instead. You can't use the EmailAddresses parameter and the PrimarySmtpAddress parameter in the same command.</maml:para>
          <maml:para></maml:para>
          <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
          <maml:para>To replace all existing proxy email addresses with the values you specify, use the following syntax: `"Type:EmailAddress1","Type:EmailAddress2",..."Type:EmailAddressN"`.</maml:para>
          <maml:para>To add or remove specify proxy addresses without affecting other existing values, use the following syntax: `@{Add="Type:EmailAddress1","Type:EmailAddress2",...; Remove="Type:EmailAddress3","Type:EmailAddress4",...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ProxyAddressCollection</command:parameterValue>
        <dev:type>
          <maml:name>ProxyAddressCollection</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute1</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute1 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute1 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute2</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute2 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute2 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute3</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute3 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute3 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute4</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute4 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute4 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExtensionCustomAttribute5</maml:name>
        <maml:description>
          <maml:para>This parameter specifies a value for the ExtensionCustomAttribute5 property on the recipient. You can use this property to store custom information about the recipient, and to identify the recipient in filters. You can specify up to 1300 values separated by commas.</maml:para>
          <maml:para>To enter multiple values that overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>Although this is a multivalued property, the filter `"ExtensionCustomAttribute5 -eq 'Value'"` will return a match if the property contains the specified value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ForceUpgrade</maml:name>
        <maml:description>
          <maml:para>The ForceUpgrade switch specifies whether to suppress the confirmation message that appears if the object was created in a previous version of Exchange. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GrantSendOnBehalfTo</maml:name>
        <maml:description>
          <maml:para>The GrantSendOnBehalfTo parameter specifies who can send on behalf of this dynamic distribution group. Although messages send on behalf of the group clearly show the sender in the From field (`&lt;Sender&gt; on behalf of &lt;Group&gt;`), replies to these messages are delivered to the group, not the sender.</maml:para>
          <maml:para>The sender you specify for this parameter must a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>By default, this parameter is blank, which means no one else has permission to send on behalf of this group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>HiddenFromAddressListsEnabled</maml:name>
        <maml:description>
          <maml:para>The HiddenFromAddressListsEnabled parameter specifies whether this recipient is visible in address lists. Valid values are:</maml:para>
          <maml:para>- $true: The recipient isn't visible in address lists.</maml:para>
          <maml:para>- $false: The recipient is visible in address lists. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludedRecipients</maml:name>
        <maml:description>
          <maml:para>The IncludedRecipients parameter specifies a precanned filter that's based on the recipient type. Valid values are:</maml:para>
          <maml:para>- AllRecipients: This value can be used only by itself.</maml:para>
          <maml:para>- MailboxUsers</maml:para>
          <maml:para>- MailContacts</maml:para>
          <maml:para>- MailGroups</maml:para>
          <maml:para>- MailUsers</maml:para>
          <maml:para>- Resources: This value indicates room or equipment mailboxes.</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas. When you use multiple values, the OR Boolean operator is applied.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">WellKnownRecipientType</command:parameterValue>
        <dev:type>
          <maml:name>WellKnownRecipientType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTip</maml:name>
        <maml:description>
          <maml:para>The MailTip parameter specifies the custom MailTip text for this recipient. The MailTip is shown to senders when they start drafting an email message to this recipient. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>When you add a MailTip to a recipient, two things happen:</maml:para>
          <maml:para>- HTML tags are automatically added to the text. For example, if you enter the text: "This mailbox is not monitored", the MailTip automatically becomes: `&lt;html&gt;&lt;body&gt;This mailbox is not monitored&lt;/body&gt;&lt;/html&gt;`. Additional HTML tags aren't supported, and the length of the MailTip can't exceed 175 displayed characters.</maml:para>
          <maml:para>- The text is automatically added to the MailTipTranslations property of the recipient as the default value: `default:&lt;MailTip text&gt;`. If you modify the MailTip text, the default value is automatically updated in the MailTipTranslations property, and vice-versa.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipTranslations</maml:name>
        <maml:description>
          <maml:para>The MailTipTranslations parameter specifies additional languages for the custom MailTip text that's defined by the MailTip parameter. HTML tags are automatically added to the MailTip translation, additional HTML tags aren't supported, and the length of the MailTip translation can't exceed 175 displayed characters.</maml:para>
          <maml:para>To add or remove MailTip translations without affecting the default MailTip or other MailTip translations, use the following syntax:</maml:para>
          <maml:para>`@{Add="Culture1:Localized text 1","\Culture2:Localized text 2"...; Remove="Culture3:Localized text 3","Culture4:Localized text 4"...}`.</maml:para>
          <maml:para>CultureN is a valid ISO 639 two-letter culture code that's associated with the language.</maml:para>
          <maml:para>For example, suppose this recipient currently has the MailTip text: "This mailbox is not monitored." To add the Spanish translation, use the following value for this parameter: `@{Add="ES:Esta caja no se supervisa."}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter specifies an owner for the group. A dynamic group can only have one owner. The group owner is able to:</maml:para>
          <maml:para>- Modify the properties of the group</maml:para>
          <maml:para>- Delete the group</maml:para>
          <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
          <maml:para></maml:para>
          <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModeratedBy</maml:name>
        <maml:description>
          <maml:para>The ModeratedBy parameter specifies one or more moderators for this recipient. A moderator approves messages sent to the recipient before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization. You can use any value that uniquely identifies the moderator. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>You need to use this parameter to specify at least one moderator when you set the ModerationEnabled parameter to the value $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ModerationEnabled</maml:name>
        <maml:description>
          <maml:para>The ModerationEnabled parameter specifies whether moderation is enabled for this recipient. Valid value are:</maml:para>
          <maml:para>- $true: Moderation is enabled for this recipient. Messages sent to this recipient must be approved by a moderator before the messages are delivered.</maml:para>
          <maml:para>- $false: Moderation is disabled for this recipient. Messages sent to this recipient are delivered without the approval of a moderator. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You use the ModeratedBy parameter to specify the moderators.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the dynamic distribution group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Notes</maml:name>
        <maml:description>
          <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PhoneticDisplayName</maml:name>
        <maml:description>
          <maml:para>The PhoneticDisplayName parameter specifies an alternate spelling of the user's name that's used for text to speech in Unified Messaging (UM) environments. Typically, you use this parameter when the pronunciation and spelling of the user's name don't match. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PrimarySmtpAddress</maml:name>
        <maml:description>
          <maml:para>The PrimarySmtpAddress parameter specifies the primary return email address that's used for the recipient. You can't use the EmailAddresses and PrimarySmtpAddress parameters in the same command.</maml:para>
          <maml:para>If you set the EmailAddressPolicyEnabled parameter to $false, you can specify the primary address using the PrimarySmtpAddress parameter, but that means the email addresses of the mail user no longer automatically updated by email address policies.</maml:para>
          <maml:para>The PrimarySmtpAddress parameter updates the primary email address and WindowsEmailAddress property to the same value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientContainer</maml:name>
        <maml:description>
          <maml:para>The RecipientContainer parameter specifies a filter that's based on the recipient's location in Active Directory. Valid input for this parameter is an organizational unit (OU) or domain that's returned by the Get-OrganizationalUnit cmdlet. You can use any value that uniquely identifies the OU or domain. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't use this parameter, the default value is the OU where the object was created.</maml:para>
          <maml:para>Note that the RecipientContainer property can't be blank. The group is always limited to looking for recipients in a specific location (the value you specify for this parameter, or the location where the group was created).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationalUnitIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationalUnitIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RecipientFilter</maml:name>
        <maml:description>
          <maml:para>The RecipientFilter parameter specifies a custom OPath filter that's based on the value of any available recipient property. You can use any available Windows PowerShell operator, and wildcards and partial matches are supported. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.</maml:para>
          <maml:para>- Enclose the whole OPath filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.</maml:para>
          <maml:para>- Property is a filterable property. For filterable properties, see Filterable properties for the RecipientFilter parameter (https://docs.microsoft.com/powershell/exchange/recipientfilter-properties). - Value is the property value to filter on. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values (for example, `500`, `$true`, `$false`, or `$null`).</maml:para>
          <maml:para>- ComparisonOperator is an OPath comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see about_Comparison_Operators (https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators). - In cloud-based environments, you can't use a wildcard as the first character. For example, `'Sales '` is allowed, but `' Sales'` isn't allowed. - In on-premises Exchange, wildcards are valid only as the first or last character. For example, `'Sales '` or `' Sales'` are allowed, but `'Sa*les'` isn't allowed.</maml:para>
          <maml:para>For detailed information about OPath filters in Exchange, see Additional OPATH syntax information (https://docs.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFrom</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFrom parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders in your organization (mailboxes, mail users, and mail contacts). You can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove senders without affecting other existing entries, use the following syntax: `@{Add="Sender1","Sender2"...; Remove="Sender3","Sender4"...}`.</maml:para>
          <maml:para>The senders you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFrom and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFromDLMembers</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFromDLMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are groups in your organization (distribution groups, mail-enabled security groups, and dynamic distribution groups). Specifying a group means all members of the group aren't allowed to send messages to this recipient. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple groups separated by commas. To overwrite any existing entries, use the following syntax: `Group1,Group2,...GroupN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Group1","Group2",..."GroupN"`.</maml:para>
          <maml:para>To add or remove groups without affecting other existing entries, use the following syntax: `@{Add="Group1","Group2"...; Remove="Group3","Group4"...}`.</maml:para>
          <maml:para>The groups you specify for this parameter are automatically copied to the RejectMessagesFromSendersOrMembers property. Therefore, you can't use the RejectMessagesFromDLMembers and RejectMessagesFromSendersOrMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RejectMessagesFromSendersOrMembers</maml:name>
        <maml:description>
          <maml:para>The RejectMessagesFromSendersOrMembers parameter specifies who isn't allowed to send messages to this recipient. Messages from these senders are rejected.</maml:para>
          <maml:para>Valid values for this parameter are individual senders and groups in your organization. Individual senders are mailboxes, mail users, and mail contacts. Groups are distribution groups, mail-enabled security groups, and dynamic distribution groups. Specifying a group means all members of the group aren't allowed to send messages to this recipient.</maml:para>
          <maml:para>To specify senders for this parameter, you can use any value that uniquely identifies the sender. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple senders separated by commas. To overwrite any existing entries, use the following syntax: `Sender1,Sender2,...SenderN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Sender1","Sender2",..."SenderN"`.</maml:para>
          <maml:para>To add or remove individual senders or groups without affecting other existing entries, use the RejectMessagesFrom and RejectMessagesFromDLMembers parameters.</maml:para>
          <maml:para>The individual senders and groups you specify for this parameter are automatically copied to the RejectMessagesFrom and RejectMessagesFromDLMembers properties, respectively. Therefore, you can't use the RejectMessagesFromSendersOrMembers parameter and the RejectMessagesFrom or RejectMessagesFromDLMembers parameters in the same command.</maml:para>
          <maml:para>By default, this parameter is blank ($null), which allows this recipient to accept messages from all senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReportToManagerEnabled</maml:name>
        <maml:description>
          <maml:para>The ReportToManagerEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to the owners of the group (defined by the ManagedBy property). Valid values are:</maml:para>
          <maml:para>- $true: Delivery status notifications are sent to the owners of the group.</maml:para>
          <maml:para>- $false: Delivery status notifications aren't sent to the owners of the group. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ReportToOriginatorEnabled</maml:name>
        <maml:description>
          <maml:para>The ReportToOriginatorEnabled parameter specifies whether delivery status notifications (also known as DSNs, non-delivery reports, NDRs, or bounce messages) are sent to senders who send messages to this group. Valid values are:</maml:para>
          <maml:para>- $true: Delivery status notifications are sent to the message senders. This is the default value.</maml:para>
          <maml:para>- $false: Delivery status notifications aren't sent to the message senders.</maml:para>
          <maml:para></maml:para>
          <maml:para>The ReportToManagerEnabled and ReportToOriginatorEnabled parameters affect the return path for messages sent to the group. Some email servers reject messages that don't have a return path. Therefore, you should set one parameter to $false and one to $true, but not both to $false or both to $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RequireSenderAuthenticationEnabled</maml:name>
        <maml:description>
          <maml:para>The RequireSenderAuthenticationEnabled parameter specifies whether to accept messages only from authenticated (internal) senders. Valid values are:</maml:para>
          <maml:para>- $true: Messages are accepted only from authenticated (internal) senders. Messages from unauthenticated (external) senders are rejected.</maml:para>
          <maml:para>- $false: Messages are accepted from authenticated (internal) and unauthenticated (external) senders.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendModerationNotifications</maml:name>
        <maml:description>
          <maml:para>The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are:</maml:para>
          <maml:para>- Always: Notify all senders when their messages aren't approved. This is the default value.</maml:para>
          <maml:para>- Internal: Notify senders in the organization when their messages aren't approved.</maml:para>
          <maml:para>- Never: Don't notify anyone when a message isn't approved.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when moderation is enabled (the ModerationEnabled parameter has the value $true).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TransportModerationNotificationFlags</command:parameterValue>
        <dev:type>
          <maml:name>TransportModerationNotificationFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendOofMessageToOriginatorEnabled</maml:name>
        <maml:description>
          <maml:para>The SendOofMessageToOriginatorEnabled parameter specifies how to handle out of office (OOF) messages for members of the group. Valid values are:</maml:para>
          <maml:para>- $true: When messages are sent to the group, OOF messages for any of the group members are sent to the message sender. This is the default value.</maml:para>
          <maml:para>- $false: When messages are sent to the group, OOF messages for any of the group members aren't sent to the message sender.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SimpleDisplayName</maml:name>
        <maml:description>
          <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
          <maml:para>- a - z</maml:para>
          <maml:para>- A - Z</maml:para>
          <maml:para>- 0 - 9</maml:para>
          <maml:para>- space</maml:para>
          <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UMDtmfMap</maml:name>
        <maml:description>
          <maml:para>The UMDtmfMap parameter specifies the dual-tone multiple-frequency (DTMF) map values for the recipient. This allows the recipient to be identified by using a telephone keypad in Unified Messaging (UM) environments. Typically, these DTMF values are automatically created and updated, but you can use this parameter to make changes manually. This parameter uses the following syntax:</maml:para>
          <maml:para>- `emailAddress:&lt;integers&gt;`</maml:para>
          <maml:para>- `lastNameFirstName:&lt;integers&gt;`</maml:para>
          <maml:para>- `firstNameLastName:&lt;integers&gt;`</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter values that overwrite all existing entries, use the following syntax: `emailAddress:&lt;integers&gt;,lastNameFirstName:&lt;integers&gt;,firstNameLastName:&lt;integers&gt;`.</maml:para>
          <maml:para>If you use this syntax and you omit any of the DTMF map values, those values are removed from the recipient. For example, if you specify only `emailAddress:&lt;integers&gt;`, all existing lastNameFirstName and firstNameLastName values are removed.</maml:para>
          <maml:para>To add or remove values without affecting other existing entries, use the following syntax: `@{Add="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"; Remove="emailAddress:&lt;integers&gt;","lastNameFirstName:&lt;integers&gt;","firstNameLastName:&lt;integers&gt;"}`.</maml:para>
          <maml:para>If you use this syntax, you don't need to specify all of the DTMF map values, and you can specify multiple DTMF map values. For example, you can use `@{Add="emailAddress:&lt;integers1&gt;","emailAddress:&lt;integers2&gt;}` to add two new values for emailAddress without affecting the existing lastNameFirstName and firstNameLastName values.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WindowsEmailAddress</maml:name>
        <maml:description>
          <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
          <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
          <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
          <maml:para></maml:para>
          <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-DynamicDistributionGroup -Identity Developers -IncludedRecipients MailboxUsers -ConditionalCompany "Contoso" -ConditionalCustomAttribute1 "Internal"</dev:code>
        <dev:remarks>
          <maml:para>This example applies the following changes to the existing dynamic distribution group named Developers:</maml:para>
          <maml:para>Change the ConditionalCompany query filter to Contoso.</maml:para>
          <maml:para>Change the IncludedRecipients query filter to MailboxUsers.</maml:para>
          <maml:para>Add the value Internal to the ConditionalCustomAttribute1 attribute.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>$extAtrValue="Contoso"
Set-DynamicDistributionGroup -Identity Developers -RecipientFilter "ExtensionCustomAttribute1 -eq '$extAtrValue'"</dev:code>
        <dev:remarks>
          <maml:para>This example applies the following changes to the existing dynamic distribution group named Developers:</maml:para>
          <maml:para>Sets the RecipientFilter custom OPath filter using a variable based value of a specific recipient property.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-dynamicdistributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-FederatedOrganizationIdentifier</command:name>
      <command:verb>Set</command:verb>
      <command:noun>FederatedOrganizationIdentifier</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-FederatedOrganizationIdentifier cmdlet to configure the federated organization identifier for the Exchange organization.</maml:para>
        <maml:para>For more details, see Federation (https://docs.microsoft.com/exchange/federation-exchange-2013-help).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You must configure a federated organization identifier to create an account namespace for your Exchange organization with the Microsoft Federation Gateway and enable federation for the purpose of sharing calendars or contacts, accessing free/busy information across Exchange organizations and securing cross-premises email delivery using federated delivery. When you create a federation trust, a value for the AccountNamespace parameter is automatically created with the Microsoft Federation Gateway. The AccountNamespace parameter is a combination of a pre-defined string and the domain specified. For example, if you specify the federated domain contoso.com as the domain, "FYDIBOHF25SPDLT.contoso.com" is automatically created as the value for the AccountNamespace parameter. You can add and remove Additional domain names later by using the Add-FederatedDomain and Remove-FederatedDomain cmdlets.</maml:para>
      <maml:para>You can temporarily disable federation by disabling the organization identifier.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-FederatedOrganizationIdentifier</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the federated organization identifier.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AccountNamespace</maml:name>
          <maml:description>
            <maml:para>The AccountNamespace parameter specifies the federated domain to be used to establish the organization identifier with the Microsoft Federation Gateway.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
          <dev:type>
            <maml:name>SmtpDomain</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DefaultDomain</maml:name>
          <maml:description>
            <maml:para>The DefaultDomain parameter specifies the federated domain used for delegation tokens issued by the Microsoft Federation Gateway for user accounts in the Exchange organization. If the DefaultDomain parameter isn't set, the primary SMTP domain for each user account is used in delegation tokens issued by the Microsoft Federation Gateway. Only a single domain or subdomain for the Exchange organization should be configured, and it applies to all delegation tokens issued for the Exchange organization, for example, contoso.com.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
          <dev:type>
            <maml:name>SmtpDomain</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DelegationFederationTrust</maml:name>
          <maml:description>
            <maml:para>The DelegationFederationTrust parameter specifies the identity of the federation trust to be used by the organization identifier.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">FederationTrustIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>FederationTrustIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter specifies whether the organization identifier is enabled. Valid values include $true or $false.</maml:para>
            <maml:para>Setting the parameter to $false disables federation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationContact</maml:name>
          <maml:description>
            <maml:para>The OrganizationContact parameter specifies the SMTP address of the federation contact.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the federated organization identifier.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AccountNamespace</maml:name>
        <maml:description>
          <maml:para>The AccountNamespace parameter specifies the federated domain to be used to establish the organization identifier with the Microsoft Federation Gateway.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
        <dev:type>
          <maml:name>SmtpDomain</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DefaultDomain</maml:name>
        <maml:description>
          <maml:para>The DefaultDomain parameter specifies the federated domain used for delegation tokens issued by the Microsoft Federation Gateway for user accounts in the Exchange organization. If the DefaultDomain parameter isn't set, the primary SMTP domain for each user account is used in delegation tokens issued by the Microsoft Federation Gateway. Only a single domain or subdomain for the Exchange organization should be configured, and it applies to all delegation tokens issued for the Exchange organization, for example, contoso.com.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpDomain</command:parameterValue>
        <dev:type>
          <maml:name>SmtpDomain</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DelegationFederationTrust</maml:name>
        <maml:description>
          <maml:para>The DelegationFederationTrust parameter specifies the identity of the federation trust to be used by the organization identifier.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">FederationTrustIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>FederationTrustIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter specifies whether the organization identifier is enabled. Valid values include $true or $false.</maml:para>
          <maml:para>Setting the parameter to $false disables federation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationContact</maml:name>
        <maml:description>
          <maml:para>The OrganizationContact parameter specifies the SMTP address of the federation contact.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-FederatedOrganizationIdentifier -DelegationFederationTrust "Microsoft Federation Gateway" -AccountNamespace "Contoso.com" -Enabled $true</dev:code>
        <dev:remarks>
          <maml:para>This example configures a federated organization identifier for the Exchange organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-FederatedOrganizationIdentifier -Enabled $false</dev:code>
        <dev:remarks>
          <maml:para>This example temporarily disables federation for the Exchange organization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Set-FederatedOrganizationIdentifier -Enabled $true</dev:code>
        <dev:remarks>
          <maml:para>This example enables the organization identifier. This enables federation for the Exchange organization.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-federatedorganizationidentifier</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Group</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Group</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-Group cmdlet to modify group object settings. If the group is a mail-enabled security group or a distribution group, you can use the Set-DistributionGroup cmdlet to modify other Microsoft Exchange settings that aren't available by using the Set-Group cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You can't use the Set-Group cmdlet to modify dynamic distribution groups. To modify dynamic distribution groups, use the Set-DynamicDistributionGroup cmdlet.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Group</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>This parameter is meaningful only if the group is mail-enabled.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IsHierarchicalGroup</maml:name>
          <maml:description>
            <maml:para>The IsHierarchicalGroup parameter specifies whether the group is part of a hierarchical address book. Valid values are $true or $false. The default value is $false.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ManagedBy</maml:name>
          <maml:description>
            <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
            <maml:para>- Modify the properties of the group</maml:para>
            <maml:para>- Add or remove group members</maml:para>
            <maml:para>- Delete the group</maml:para>
            <maml:para>- Approve member depart or join requests (if available)</maml:para>
            <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
            <maml:para></maml:para>
            <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple owners and overwrite all existing entries, use the following syntax: `Owner1,Owner2,...OwnerN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Owner1","Owner2",..."OwnerN"`.</maml:para>
            <maml:para>To add or remove owners without affecting other existing entries, use the following syntax: `@{Add="Owner1","Owner2",...; Remove="Owner3","Owner4"...}`.</maml:para>
            <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter[]</command:parameterValue>
          <dev:type>
            <maml:name>GeneralRecipientIdParameter[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Notes</maml:name>
          <maml:description>
            <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PhoneticDisplayName</maml:name>
          <maml:description>
            <maml:para>The PhoneticDisplayName parameter specifies an alternate spelling of the user's name that's used for text to speech in Unified Messaging (UM) environments. Typically, you use this parameter when the pronunciation and spelling of the user's name don't match. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SeniorityIndex</maml:name>
          <maml:description>
            <maml:para>The SeniorityIndex parameter specifies the order in which this group will display in a hierarchical address book. A group with a value of 2 will display higher in an address book than a group with a value of 1.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SimpleDisplayName</maml:name>
          <maml:description>
            <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
            <maml:para>- a - z</maml:para>
            <maml:para>- A - Z</maml:para>
            <maml:para>- 0 - 9</maml:para>
            <maml:para>- space</maml:para>
            <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is meaningful only if the group is mail-enabled.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Universal</maml:name>
          <maml:description>
            <maml:para>The Universal switch changes the scope of the group from Global or DomainLocal to Universal. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WindowsEmailAddress</maml:name>
          <maml:description>
            <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
            <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
            <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
            <maml:para></maml:para>
            <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>The DisplayName parameter specifies the display name of the group. The display name is visible in the Exchange admin center and in address lists. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>This parameter is meaningful only if the group is mail-enabled.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IsHierarchicalGroup</maml:name>
        <maml:description>
          <maml:para>The IsHierarchicalGroup parameter specifies whether the group is part of a hierarchical address book. Valid values are $true or $false. The default value is $false.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ManagedBy</maml:name>
        <maml:description>
          <maml:para>The ManagedBy parameter specifies an owner for the group. A group must have at least one owner. If you don't use this parameter to specify the owner when you create the group, the user account that created the group is the owner. The group owner is able to:</maml:para>
          <maml:para>- Modify the properties of the group</maml:para>
          <maml:para>- Add or remove group members</maml:para>
          <maml:para>- Delete the group</maml:para>
          <maml:para>- Approve member depart or join requests (if available)</maml:para>
          <maml:para>- Approve messages sent to the group if moderation is enabled, but no moderators are specified.</maml:para>
          <maml:para></maml:para>
          <maml:para>The owner you specify for this parameter must be a mailbox, mail user or mail-enabled security group (a mail-enabled security principal that can have permissions assigned). You can use any value that uniquely identifies the owner. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple owners and overwrite all existing entries, use the following syntax: `Owner1,Owner2,...OwnerN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Owner1","Owner2",..."OwnerN"`.</maml:para>
          <maml:para>To add or remove owners without affecting other existing entries, use the following syntax: `@{Add="Owner1","Owner2",...; Remove="Owner3","Owner4"...}`.</maml:para>
          <maml:para>An owner that you specify with this parameter isn't automatically a member of the group. You need to manually add the owner as a member.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeneralRecipientIdParameter[]</command:parameterValue>
        <dev:type>
          <maml:name>GeneralRecipientIdParameter[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the group. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Notes</maml:name>
        <maml:description>
          <maml:para>The Notes parameters specifies additional information about the object. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PhoneticDisplayName</maml:name>
        <maml:description>
          <maml:para>The PhoneticDisplayName parameter specifies an alternate spelling of the user's name that's used for text to speech in Unified Messaging (UM) environments. Typically, you use this parameter when the pronunciation and spelling of the user's name don't match. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SeniorityIndex</maml:name>
        <maml:description>
          <maml:para>The SeniorityIndex parameter specifies the order in which this group will display in a hierarchical address book. A group with a value of 2 will display higher in an address book than a group with a value of 1.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SimpleDisplayName</maml:name>
        <maml:description>
          <maml:para>The SimpleDisplayName parameter is used to display an alternative description of the object when only a limited set of characters is permitted. Valid characters are:</maml:para>
          <maml:para>- a - z</maml:para>
          <maml:para>- A - Z</maml:para>
          <maml:para>- 0 - 9</maml:para>
          <maml:para>- space</maml:para>
          <maml:para>- `" ' ( ) + , - . / : ?`</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is meaningful only if the group is mail-enabled.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Universal</maml:name>
        <maml:description>
          <maml:para>The Universal switch changes the scope of the group from Global or DomainLocal to Universal. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WindowsEmailAddress</maml:name>
        <maml:description>
          <maml:para>The WindowsEmailAddress parameter specifies the Windows email address for this recipient. This is a common Active Directory attribute that's present in all environments, including environments without Exchange. Using the WindowsEmailAddress parameter on a recipient has one of the following results:</maml:para>
          <maml:para>- In environments where the recipient is subject to email address policies (the EmailAddressPolicyEnabled property is set to the value True for the recipient), the WindowsEmailAddress parameter has no effect on the WindowsEmailAddress property or the primary email address value.</maml:para>
          <maml:para>- In environments where the recipient isn't subject to email address policies (the EmailAddressPolicyEnabled property is set to the value False for the recipient), the WindowsEmailAddress parameter updates the WindowsEmailAddress property and the primary email address to the same value.</maml:para>
          <maml:para></maml:para>
          <maml:para>The WindowsEmailAddress property is visible for the recipient in Active Directory Users and Computers in the E-mail attribute. The attribute common name is E-mail-Addresses, and the Ldap-Display-Name is mail. If you modify this attribute in Active Directory, the recipient's primary email address is not updated to the same value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-Group -Identity "Legal Department" -Universal -Notes "verified"</dev:code>
        <dev:remarks>
          <maml:para>This example applies the following changes to the existing global security group Legal Department:</maml:para>
          <maml:para>Change the group's scope to universal.</maml:para>
          <maml:para>Add a Notes parameter value of verified.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-Group -Identity "Human Resources" -IsHierarchicalGroup $true -SeniorityIndex 1</dev:code>
        <dev:remarks>
          <maml:para>This example specifies that the group Human Resources is a hierarchical group and will display last within its hierarchy because its index number is 1.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-group</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-IntraOrganizationConnector</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IntraOrganizationConnector</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-IntraOrganizationConnector cmdlet to modify an existing Intra-Organization connector between two on-premises Exchange forests in an organization, between an on-premises Exchange organization and an Exchange Online organization or between two Exchange Online organizations.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Intra-Organizational connectors enable features and services between divisions in your Exchange organization. It allows for the expansion of organizational boundaries for features and services across different hosts and network boundaries, such as between Active Directory forests, between on-premises and cloud-based organizations or between tenants hosted in the same or different datacenters.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-IntraOrganizationConnector</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to modify. You can use any value that uniquely identifies the connector. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DiscoveryEndpoint</maml:name>
          <maml:description>
            <maml:para>The DiscoveryEndpoint parameter specifies the externally accessible URL used for the Autodiscover service for the domain configured in the IntraOrganization Connector. This parameter is automatically populated with the TargetAutodiscoverEpr value from the Get-FederationInformation cmdlet for the defined domain.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter enables or disabled the Intra-organization connector. The valid values for this parameter are $true or $false. The default value is $true.</maml:para>
            <maml:para>When you set the value to $false, you completely stop connectivity for the specific connection.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetAddressDomains</maml:name>
          <maml:description>
            <maml:para>The TargetAddressDomains parameter specifies the domain namespaces that will be used in the Intra-Organization connector. The domains must have valid Autodiscover endpoints defined in their organizations. The domains and their associated Autodiscover endpoints are used by the Intra-Organization connector for feature and service connectivity.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetSharingEpr</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services that will be used in the Intra-Organization connector.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the Intra-Organization connector that you want to modify. You can use any value that uniquely identifies the connector. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">IntraOrganizationConnectorIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>IntraOrganizationConnectorIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DiscoveryEndpoint</maml:name>
        <maml:description>
          <maml:para>The DiscoveryEndpoint parameter specifies the externally accessible URL used for the Autodiscover service for the domain configured in the IntraOrganization Connector. This parameter is automatically populated with the TargetAutodiscoverEpr value from the Get-FederationInformation cmdlet for the defined domain.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter enables or disabled the Intra-organization connector. The valid values for this parameter are $true or $false. The default value is $true.</maml:para>
          <maml:para>When you set the value to $false, you completely stop connectivity for the specific connection.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetAddressDomains</maml:name>
        <maml:description>
          <maml:para>The TargetAddressDomains parameter specifies the domain namespaces that will be used in the Intra-Organization connector. The domains must have valid Autodiscover endpoints defined in their organizations. The domains and their associated Autodiscover endpoints are used by the Intra-Organization connector for feature and service connectivity.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetSharingEpr</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services that will be used in the Intra-Organization connector.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-IntraOrganizationConnector "MainCloudConnector" -Enabled $false</dev:code>
        <dev:remarks>
          <maml:para>This example disables the Intra-Organization connector named "MainCloudConnector".</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-intraorganizationconnector</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-MailboxCalendarFolder</command:name>
      <command:verb>Set</command:verb>
      <command:noun>MailboxCalendarFolder</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-MailboxCalendarFolder cmdlet to configure calendar publishing or sharing settings on a mailbox for the visibility of calendar information to external users. To add or modify the permissions so internal users can access the calendar, use the Add-MailboxFolderPermission or Set-MailboxFolderPermission cmdlets.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-MailboxCalendarFolder cmdlet configures calendar publishing information. The calendar folder can be configured as follows:</maml:para>
      <maml:para>- Whether the calendar folder is enabled for publishing</maml:para>
      <maml:para>- Range of start and end calendar days to publish</maml:para>
      <maml:para>- Level of detail to publish for the calendar</maml:para>
      <maml:para>- Whether the published URL of the calendar is enabled for search on the web</maml:para>
      <maml:para></maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-MailboxCalendarFolder</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the calendar folder that you want to modify. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
            <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Calendar`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DetailLevel</maml:name>
          <maml:description>
            <maml:para>The DetailLevel parameter specifies the level of calendar detail that's published and available to anonymous users. Valid values are:</maml:para>
            <maml:para>- AvailabilityOnly (This is the default value)</maml:para>
            <maml:para>- LimitedDetails</maml:para>
            <maml:para>- FullDetails</maml:para>
            <maml:para>- Editor</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DetailLevelEnumType</command:parameterValue>
          <dev:type>
            <maml:name>DetailLevelEnumType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PublishDateRangeFrom</maml:name>
          <maml:description>
            <maml:para>The PublishDateRangeFrom parameter specifies the start date of calendar information to publish (past information). Valid values are:</maml:para>
            <maml:para>- OneDay</maml:para>
            <maml:para>- ThreeDays</maml:para>
            <maml:para>- OneWeek</maml:para>
            <maml:para>- OneMonth</maml:para>
            <maml:para>- ThreeMonths (This is the default value)</maml:para>
            <maml:para>- SixMonths</maml:para>
            <maml:para>- OneYear</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DateRangeEnumType</command:parameterValue>
          <dev:type>
            <maml:name>DateRangeEnumType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PublishDateRangeTo</maml:name>
          <maml:description>
            <maml:para>The PublishDateRangeTo parameter specifies the end date of calendar information to publish (future information). Valid values are:</maml:para>
            <maml:para>- OneDay</maml:para>
            <maml:para>- ThreeDays</maml:para>
            <maml:para>- OneWeek</maml:para>
            <maml:para>- OneMonth</maml:para>
            <maml:para>- ThreeMonths (This is the default value)</maml:para>
            <maml:para>- SixMonths</maml:para>
            <maml:para>- OneYear</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DateRangeEnumType</command:parameterValue>
          <dev:type>
            <maml:name>DateRangeEnumType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PublishEnabled</maml:name>
          <maml:description>
            <maml:para>The PublishEnabled parameter specifies whether to publish the specified calendar information. Valid values are:</maml:para>
            <maml:para>- $true: The calendar information is published.</maml:para>
            <maml:para>- $false: The calendar information is not published. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResetUrl</maml:name>
          <maml:description>
            <maml:para>The ResetUrl switch replaces the existing non-public URL with a new URL for a calendar that has been published without being publicly searchable. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SearchableUrlEnabled</maml:name>
          <maml:description>
            <maml:para>The SearchableUrlEnabled parameter specifies whether the published calendar URL is discoverable on the web.</maml:para>
            <maml:para>- $true: The published calendar URL is discoverable on the web.</maml:para>
            <maml:para>- $false: The published calendar URL is not discoverable on the web. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SetAsSharingSource</maml:name>
          <maml:description>
            <maml:para>The SetAsSharingSource switch specifies whether to set the calendar folder as a sharing source. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseHttps</maml:name>
          <maml:description>
            <maml:para>The UseHttps switch specifies whether to use HTTPS for the published URL of the calendar folder. You don't need to specify a value with this switch.</maml:para>
            <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the calendar folder that you want to modify. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
          <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Calendar`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DetailLevel</maml:name>
        <maml:description>
          <maml:para>The DetailLevel parameter specifies the level of calendar detail that's published and available to anonymous users. Valid values are:</maml:para>
          <maml:para>- AvailabilityOnly (This is the default value)</maml:para>
          <maml:para>- LimitedDetails</maml:para>
          <maml:para>- FullDetails</maml:para>
          <maml:para>- Editor</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DetailLevelEnumType</command:parameterValue>
        <dev:type>
          <maml:name>DetailLevelEnumType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PublishDateRangeFrom</maml:name>
        <maml:description>
          <maml:para>The PublishDateRangeFrom parameter specifies the start date of calendar information to publish (past information). Valid values are:</maml:para>
          <maml:para>- OneDay</maml:para>
          <maml:para>- ThreeDays</maml:para>
          <maml:para>- OneWeek</maml:para>
          <maml:para>- OneMonth</maml:para>
          <maml:para>- ThreeMonths (This is the default value)</maml:para>
          <maml:para>- SixMonths</maml:para>
          <maml:para>- OneYear</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DateRangeEnumType</command:parameterValue>
        <dev:type>
          <maml:name>DateRangeEnumType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PublishDateRangeTo</maml:name>
        <maml:description>
          <maml:para>The PublishDateRangeTo parameter specifies the end date of calendar information to publish (future information). Valid values are:</maml:para>
          <maml:para>- OneDay</maml:para>
          <maml:para>- ThreeDays</maml:para>
          <maml:para>- OneWeek</maml:para>
          <maml:para>- OneMonth</maml:para>
          <maml:para>- ThreeMonths (This is the default value)</maml:para>
          <maml:para>- SixMonths</maml:para>
          <maml:para>- OneYear</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DateRangeEnumType</command:parameterValue>
        <dev:type>
          <maml:name>DateRangeEnumType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PublishEnabled</maml:name>
        <maml:description>
          <maml:para>The PublishEnabled parameter specifies whether to publish the specified calendar information. Valid values are:</maml:para>
          <maml:para>- $true: The calendar information is published.</maml:para>
          <maml:para>- $false: The calendar information is not published. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResetUrl</maml:name>
        <maml:description>
          <maml:para>The ResetUrl switch replaces the existing non-public URL with a new URL for a calendar that has been published without being publicly searchable. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SearchableUrlEnabled</maml:name>
        <maml:description>
          <maml:para>The SearchableUrlEnabled parameter specifies whether the published calendar URL is discoverable on the web.</maml:para>
          <maml:para>- $true: The published calendar URL is discoverable on the web.</maml:para>
          <maml:para>- $false: The published calendar URL is not discoverable on the web. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SetAsSharingSource</maml:name>
        <maml:description>
          <maml:para>The SetAsSharingSource switch specifies whether to set the calendar folder as a sharing source. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseHttps</maml:name>
        <maml:description>
          <maml:para>The UseHttps switch specifies whether to use HTTPS for the published URL of the calendar folder. You don't need to specify a value with this switch.</maml:para>
          <maml:para>This parameter is meaningful only when the PublishEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-MailboxCalendarFolder -Identity kai:\Calendar -DetailLevel LimitedDetails</dev:code>
        <dev:remarks>
          <maml:para>This example sets the level of details to publish for Kai's shared calendar to LimitedDetails, which means limited details are displayed.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-MailboxCalendarFolder -Identity kai:\Calendar -SearchableUrlEnabled $true</dev:code>
        <dev:remarks>
          <maml:para>This example enables the calendar in Kai's mailbox to be searchable on the web.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-mailboxcalendarfolder</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-MailboxFolderPermission</command:name>
      <command:verb>Set</command:verb>
      <command:noun>MailboxFolderPermission</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-MailboxFolderPermission cmdlet to modify folder-level permissions for users in mailboxes. This cmdlet differs from the Add-MailboxFolderPermission cmdlet in that it modifies existing permission entries. To configure calendar publishing or sharing settings for a mailbox so calendar information is visible to external users, use the Set-MailboxCalendarFolder cmdlet.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>In Exchange Online PowerShell, if you don't use the SendNotificationToUser or SharingPermissionFlags parameters, there are no changes to the functionality of the cmdlet. For example, if the user is an existing delegate, and you change their permissions to Editor without using the SendNotificationToUser or SharingPermissionFlags parameters, the user remains a delegate. But, if you use the SendNotificationToUser parameter ($true or $false), the SharingPermissionFlags parameter has the default value None, which can affect delegate access for existing users. For example, you change an existing delegate's permission to Editor, and you use SendNotificationToUser with the value $true. The user will no longer be a delegate and will only have Editor permissions to the folder.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-MailboxFolderPermission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
            <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Domain\Username</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- LegacyExchangeDN</maml:para>
            <maml:para>- SamAccountName</maml:para>
            <maml:para>- User ID or user principal name (UPN)</maml:para>
            <maml:para></maml:para>
            <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AccessRights</maml:name>
          <maml:description>
            <maml:para>The AccessRights parameter specifies the permissions that you want to modify for the user on the mailbox folder. The values that you specify replace the existing permissions for the user on the folder.</maml:para>
            <maml:para>You can specify individual folder permissions or roles, which are combinations of permissions. You can specify multiple permissions and roles separated by commas.</maml:para>
            <maml:para>The following individual permissions are available:</maml:para>
            <maml:para>- CreateItems: The user can create items in the specified folder.</maml:para>
            <maml:para>- CreateSubfolders: The user can create subfolders in the specified folder.</maml:para>
            <maml:para>- DeleteAllItems: The user can delete all items in the specified folder.</maml:para>
            <maml:para>- DeleteOwnedItems: The user can only delete items that they created from the specified folder.</maml:para>
            <maml:para>- EditAllItems: The user can edit all items in the specified folder.</maml:para>
            <maml:para>- EditOwnedItems: The user can only edit items that they created in the specified folder.</maml:para>
            <maml:para>- FolderContact: The user is the contact for the specified public folder.</maml:para>
            <maml:para>- FolderOwner: The user is the owner of the specified folder. The user can view the folder, move the folder, and create subfolders. The user can't read items, edit items, delete items, or create items.</maml:para>
            <maml:para>- FolderVisible: The user can view the specified folder, but can't read or edit items within the specified public folder.</maml:para>
            <maml:para>- ReadItems: The user can read items within the specified folder.</maml:para>
            <maml:para></maml:para>
            <maml:para>The roles that are available, along with the permissions that they assign, are described in the following list:</maml:para>
            <maml:para>- Author:CreateItems, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Contributor:CreateItems, FolderVisible</maml:para>
            <maml:para>- Editor:CreateItems, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- None:FolderVisible</maml:para>
            <maml:para>- NonEditingAuthor:CreateItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Owner:CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderContact, FolderOwner, FolderVisible, ReadItems</maml:para>
            <maml:para>- PublishingEditor:CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- PublishingAuthor:CreateItems, CreateSubfolders, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
            <maml:para>- Reviewer:FolderVisible, ReadItems</maml:para>
            <maml:para></maml:para>
            <maml:para>The following roles apply specifically to calendar folders:</maml:para>
            <maml:para>- AvailabilityOnly: View only availability data</maml:para>
            <maml:para>- LimitedDetails: View availability data with subject and location</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderAccessRight[]</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderAccessRight[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>The User parameter specifies the mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderUserIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SendNotificationToUser</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The SendNotificationToUser parameter specifies whether to send a sharing invitation to the user when you modify their calendar permissions. The message will be a normal calendar sharing invitation that can be accepted by the recipient. Valid values are:</maml:para>
            <maml:para>- $true: A sharing invitation is sent.</maml:para>
            <maml:para>- $false: No sharing invitation is sent. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter only applies to calendar folders and can only be used with the following AccessRights parameter values:</maml:para>
            <maml:para>- AvailabilityOnly</maml:para>
            <maml:para>- LimitedDetails</maml:para>
            <maml:para>- Reviewer</maml:para>
            <maml:para>- Editor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SharingPermissionFlags</maml:name>
          <maml:description>
            <maml:para>This parameter is available only in the cloud-based service.</maml:para>
            <maml:para>The SharingPermissionFlags parameter assigns calendar delegate permissions. This parameter only applies to calendar folders and can only be used when the AccessRights parameter value is Editor. Valid values are:</maml:para>
            <maml:para>- None: Removes delegate permissions and updates the meeting message rule so the user stops receiving meeting invites and responses for the mailbox. This is the default value when you use the SendNotificationToUser parameter without specifying a value for the SharingPermissionFlags parameter.</maml:para>
            <maml:para>- Delegate: The user is made a calendar delegate, which includes receiving meeting invites and responses. If there are no other delegates, this value will create the meeting message rule. If there are existing delegates, the user is added to the meeting message rule without changing how delegate messages are sent.</maml:para>
            <maml:para>- CanViewPrivateItems: The user can access private items on the calendar. You must use this value with the Delegate value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailboxFolderPermissionFlags</command:parameterValue>
          <dev:type>
            <maml:name>MailboxFolderPermissionFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the target mailbox and folder. The syntax is `MailboxID:\ParentFolder[\SubFolder]`.</maml:para>
          <maml:para>For the value of `MailboxID`, you can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Domain\Username</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- LegacyExchangeDN</maml:para>
          <maml:para>- SamAccountName</maml:para>
          <maml:para>- User ID or user principal name (UPN)</maml:para>
          <maml:para></maml:para>
          <maml:para>Example values for this parameter are `john@contoso.com:\Calendar` or `John:\Inbox\Reports`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AccessRights</maml:name>
        <maml:description>
          <maml:para>The AccessRights parameter specifies the permissions that you want to modify for the user on the mailbox folder. The values that you specify replace the existing permissions for the user on the folder.</maml:para>
          <maml:para>You can specify individual folder permissions or roles, which are combinations of permissions. You can specify multiple permissions and roles separated by commas.</maml:para>
          <maml:para>The following individual permissions are available:</maml:para>
          <maml:para>- CreateItems: The user can create items in the specified folder.</maml:para>
          <maml:para>- CreateSubfolders: The user can create subfolders in the specified folder.</maml:para>
          <maml:para>- DeleteAllItems: The user can delete all items in the specified folder.</maml:para>
          <maml:para>- DeleteOwnedItems: The user can only delete items that they created from the specified folder.</maml:para>
          <maml:para>- EditAllItems: The user can edit all items in the specified folder.</maml:para>
          <maml:para>- EditOwnedItems: The user can only edit items that they created in the specified folder.</maml:para>
          <maml:para>- FolderContact: The user is the contact for the specified public folder.</maml:para>
          <maml:para>- FolderOwner: The user is the owner of the specified folder. The user can view the folder, move the folder, and create subfolders. The user can't read items, edit items, delete items, or create items.</maml:para>
          <maml:para>- FolderVisible: The user can view the specified folder, but can't read or edit items within the specified public folder.</maml:para>
          <maml:para>- ReadItems: The user can read items within the specified folder.</maml:para>
          <maml:para></maml:para>
          <maml:para>The roles that are available, along with the permissions that they assign, are described in the following list:</maml:para>
          <maml:para>- Author:CreateItems, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Contributor:CreateItems, FolderVisible</maml:para>
          <maml:para>- Editor:CreateItems, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- None:FolderVisible</maml:para>
          <maml:para>- NonEditingAuthor:CreateItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Owner:CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderContact, FolderOwner, FolderVisible, ReadItems</maml:para>
          <maml:para>- PublishingEditor:CreateItems, CreateSubfolders, DeleteAllItems, DeleteOwnedItems, EditAllItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- PublishingAuthor:CreateItems, CreateSubfolders, DeleteOwnedItems, EditOwnedItems, FolderVisible, ReadItems</maml:para>
          <maml:para>- Reviewer:FolderVisible, ReadItems</maml:para>
          <maml:para></maml:para>
          <maml:para>The following roles apply specifically to calendar folders:</maml:para>
          <maml:para>- AvailabilityOnly: View only availability data</maml:para>
          <maml:para>- LimitedDetails: View availability data with subject and location</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderAccessRight[]</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderAccessRight[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>The User parameter specifies the mailbox, mail user, or mail-enabled security group (security principal) that's granted permission to the mailbox folder. You can use any value that uniquely identifies the user or group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderUserIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderUserIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SendNotificationToUser</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The SendNotificationToUser parameter specifies whether to send a sharing invitation to the user when you modify their calendar permissions. The message will be a normal calendar sharing invitation that can be accepted by the recipient. Valid values are:</maml:para>
          <maml:para>- $true: A sharing invitation is sent.</maml:para>
          <maml:para>- $false: No sharing invitation is sent. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter only applies to calendar folders and can only be used with the following AccessRights parameter values:</maml:para>
          <maml:para>- AvailabilityOnly</maml:para>
          <maml:para>- LimitedDetails</maml:para>
          <maml:para>- Reviewer</maml:para>
          <maml:para>- Editor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SharingPermissionFlags</maml:name>
        <maml:description>
          <maml:para>This parameter is available only in the cloud-based service.</maml:para>
          <maml:para>The SharingPermissionFlags parameter assigns calendar delegate permissions. This parameter only applies to calendar folders and can only be used when the AccessRights parameter value is Editor. Valid values are:</maml:para>
          <maml:para>- None: Removes delegate permissions and updates the meeting message rule so the user stops receiving meeting invites and responses for the mailbox. This is the default value when you use the SendNotificationToUser parameter without specifying a value for the SharingPermissionFlags parameter.</maml:para>
          <maml:para>- Delegate: The user is made a calendar delegate, which includes receiving meeting invites and responses. If there are no other delegates, this value will create the meeting message rule. If there are existing delegates, the user is added to the meeting message rule without changing how delegate messages are sent.</maml:para>
          <maml:para>- CanViewPrivateItems: The user can access private items on the calendar. You must use this value with the Delegate value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailboxFolderPermissionFlags</command:parameterValue>
        <dev:type>
          <maml:name>MailboxFolderPermissionFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Marketing -User ed@contoso.com -AccessRights Owner</dev:code>
        <dev:remarks>
          <maml:para>This example overwrites Ed's existing permissions for the Marketing folder in Ayla's mailbox. Ed is now granted the Owner role on the folder.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User ed@contoso.com -AccessRights Editor -SharingPermissionFlags Delegate -SendNotificationToUser $true</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example resends the sharing invitation to an existing delegate without changing their effective permissions (Ed is already a delegate with Editor permissions to Ayla's mailbox).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User ed@contoso.com -AccessRights Editor -SharingPermissionFlags Delegate</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example removes access to private items for an existing delegate.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User ed@contoso.com -AccessRights Editor -SharingPermissionFlags None</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example changes an existing calendar delegate to Editor.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 5 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User ed@contoso.com -AccessRights Editor</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example changes an existing user's permissions to Editor without changing their current delegate status.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 6 --------------------------</maml:title>
        <dev:code>Set-MailboxFolderPermission -Identity ayla@contoso.com:\Calendar -User ed@contoso.com -AccessRights Editor -SendNotificationToUser $false</dev:code>
        <dev:remarks>
          <maml:para>In Exchange Online, this example changes an existing user's permissions to Editor and removes their current delegate status.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-mailboxfolderpermission</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-EXOMailboxFolderPermission</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-OrganizationRelationship</command:name>
      <command:verb>Set</command:verb>
      <command:noun>OrganizationRelationship</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-OrganizationRelationship cmdlet to modify existing organization relationships. Organization relationships define the settings that are used with external Exchange organizations to access calendar free/busy information or to move mailboxes between on-premises Exchange servers and Exchange Online as part of hybrid deployments.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-OrganizationRelationship</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the organization relationship that you want to modify. You can use any value that uniquely identifies the organization relationship. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationRelationshipIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ArchiveAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The ArchiveAccessEnabled parameter specifies whether the organization relationship has been configured to provide remote archive access. Valid values are:</maml:para>
            <maml:para>- $true: The external organization provides remote access to mailbox archives.</maml:para>
            <maml:para>- $false: The external organization doesn't provide remote access to mailbox archives. This is the default value</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DeliveryReportEnabled</maml:name>
          <maml:description>
            <maml:para>The DeliveryReportEnabled parameter specifies whether Delivery Reports should be shared over the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: Delivery Reports should be shared over the organization relationship. This value means the organization has agreed to share all Delivery Reports with the external organization, and the organization relationship should be used to retrieve Delivery Report information from the external organization.</maml:para>
            <maml:para>- $false: Delivery Reports shouldn't be shared over the organization relationship. This is the default value</maml:para>
            <maml:para></maml:para>
            <maml:para>For message tracking to work in a cross-premises Exchange scenario, this parameter must be set to $true on both sides of the organization relationship. If the value of this parameter is set to $false on one or both sides of the organization relationship, message tracking between the organizations won't work in either direction.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>DomainNames</maml:name>
          <maml:description>
            <maml:para>The DomainNames parameter specifies the SMTP domains of the external organization. You can specify multiple domains separated by commas (for example, "contoso.com","northamerica.contoso.com").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter specifies whether to enable the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: The organization relationship is enabled. This is the default value.</maml:para>
            <maml:para>- $false: The organization relationship is disabled. This value completely stops sharing for the organization relationship.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>The Force switch specifies whether to suppress warning or confirmation messages. You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessEnabled parameter specifies whether the organization relationship should be used to retrieve free/busy information from the external organization. Valid values are:</maml:para>
            <maml:para>- $true: Free/busy information is retrieved from the external organization.</maml:para>
            <maml:para>- $false: Free/busy information isn't retrieved from the external organization. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You control the free/busy access level and scope by using the FreeBusyAccessLevel and FreeBusyAccessScope parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessLevel</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessLevel parameter specifies the maximum amount of detail returned to the requesting organization. Valid values are:</maml:para>
            <maml:para>- None: No free/busy access.</maml:para>
            <maml:para>- AvailabilityOnly: Free/busy access with time only.</maml:para>
            <maml:para>- LimitedDetails: Free/busy access with time, subject, and location.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">FreeBusyAccessLevel</command:parameterValue>
          <dev:type>
            <maml:name>FreeBusyAccessLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FreeBusyAccessScope</maml:name>
          <maml:description>
            <maml:para>The FreeBusyAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailboxMoveEnabled</maml:name>
          <maml:description>
            <maml:para>The MailboxMoveEnabled parameter specifies whether the organization relationship enables moving mailboxes to or from the external organization. Valid values are:</maml:para>
            <maml:para>- $true: Mailbox moves to or from the external organization are allowed.</maml:para>
            <maml:para>- $false: Mailbox moves to from the external organization aren't allowed. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessEnabled</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessEnabled parameter specifies whether MailTips for users in this organization are returned over this organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: MailTips for users in this organization are returned over the organization relationship.</maml:para>
            <maml:para>- $false: MailTips for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>You control the MailTips access level by using the MailTipsAccessLevel parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessLevel</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessLevel parameter specifies the level of MailTips data externally shared over this organization relationship. This parameter can have the following values:</maml:para>
            <maml:para>- All: All MailTips are returned, but the recipients in the remote organization are considered external. For the Auto Reply MailTip, the external Auto Reply message is returned.</maml:para>
            <maml:para>- Limited: Only those MailTips that could prevent a non-delivery report (NDR) or an Auto Reply are returned. Custom MailTips, the Large Audience MailTip, and Moderated Recipient MailTips won't be returned.</maml:para>
            <maml:para>- None: No MailTips are returned to the remote organization. This is the default value.</maml:para>
            <maml:para></maml:para>
            <maml:para>This parameter is only meaningful when the MailTipsAccessEnabled parameter value is $true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MailTipsAccessLevel</command:parameterValue>
          <dev:type>
            <maml:name>MailTipsAccessLevel</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MailTipsAccessScope</maml:name>
          <maml:description>
            <maml:para>The MailTipsAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>The default value is blank ($null), which means no group is specified.</maml:para>
            <maml:para>If you use this parameter, recipient-specific MailTips are returned only for those recipients that are members of the specified group. The recipient-specific MailTips are:</maml:para>
            <maml:para>- Auto Reply</maml:para>
            <maml:para>- Mailbox Full</maml:para>
            <maml:para>- Custom</maml:para>
            <maml:para></maml:para>
            <maml:para>If you don't use this parameter, recipient-specific MailTips are returned for all recipients in the organization.</maml:para>
            <maml:para>This restriction only applies to mailboxes, mail users, and mail contacts. It doesn't apply to distribution groups.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>GroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the organization relationship. The maximum length is 64 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OrganizationContact</maml:name>
          <maml:description>
            <maml:para>The OrganizationContact parameter specifies the email address that can be used to contact the external organization (for example, administrator@fourthcoffee.com).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
          <dev:type>
            <maml:name>SmtpAddress</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PhotosEnabled</maml:name>
          <maml:description>
            <maml:para>The PhotosEnabled parameter specifies whether photos for users in the internal organization are returned over the organization relationship. Valid values are:</maml:para>
            <maml:para>- $true: Photos for users in this organization are returned over the organization relationship.</maml:para>
            <maml:para>- $false: Photos for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetApplicationUri</maml:name>
          <maml:description>
            <maml:para>The TargetApplicationUri parameter specifies the target Uniform Resource Identifier (URI) of the external organization. The TargetApplicationUri parameter is specified by Exchange when requesting a delegated token to retrieve free and busy information, for example, mail.contoso.com.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetAutodiscoverEpr</maml:name>
          <maml:description>
            <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.svc/wssecurity`. Exchange uses Autodiscover to automatically detect the correct Exchange server endpoint to use for external requests.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>TargetOwaURL</maml:name>
          <maml:description>
            <maml:para>The TargetOwaURL parameter specifies the Outlook on the web (formerly Outlook Web App) URL of the external organization that's defined in the organization relationship. It is used for Outlook on the web redirection in a cross-premise Exchange scenario. Configuring this attribute enables users in the organization to use their current Outlook on the web URL to access Outlook on the web in the external organization.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TargetSharingEpr</maml:name>
          <maml:description>
            <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services for the external organization.</maml:para>
            <maml:para>If you use this parameter, this URL is always used to reach the external Exchange server. TheURL that's specified by the TargetAutoDiscoverEpr parameter isn't used to locate the external Exchange server.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
          <dev:type>
            <maml:name>Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the organization relationship that you want to modify. You can use any value that uniquely identifies the organization relationship. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationRelationshipIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ArchiveAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The ArchiveAccessEnabled parameter specifies whether the organization relationship has been configured to provide remote archive access. Valid values are:</maml:para>
          <maml:para>- $true: The external organization provides remote access to mailbox archives.</maml:para>
          <maml:para>- $false: The external organization doesn't provide remote access to mailbox archives. This is the default value</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DeliveryReportEnabled</maml:name>
        <maml:description>
          <maml:para>The DeliveryReportEnabled parameter specifies whether Delivery Reports should be shared over the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: Delivery Reports should be shared over the organization relationship. This value means the organization has agreed to share all Delivery Reports with the external organization, and the organization relationship should be used to retrieve Delivery Report information from the external organization.</maml:para>
          <maml:para>- $false: Delivery Reports shouldn't be shared over the organization relationship. This is the default value</maml:para>
          <maml:para></maml:para>
          <maml:para>For message tracking to work in a cross-premises Exchange scenario, this parameter must be set to $true on both sides of the organization relationship. If the value of this parameter is set to $false on one or both sides of the organization relationship, message tracking between the organizations won't work in either direction.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>DomainNames</maml:name>
        <maml:description>
          <maml:para>The DomainNames parameter specifies the SMTP domains of the external organization. You can specify multiple domains separated by commas (for example, "contoso.com","northamerica.contoso.com").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter specifies whether to enable the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: The organization relationship is enabled. This is the default value.</maml:para>
          <maml:para>- $false: The organization relationship is disabled. This value completely stops sharing for the organization relationship.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>The Force switch specifies whether to suppress warning or confirmation messages. You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessEnabled parameter specifies whether the organization relationship should be used to retrieve free/busy information from the external organization. Valid values are:</maml:para>
          <maml:para>- $true: Free/busy information is retrieved from the external organization.</maml:para>
          <maml:para>- $false: Free/busy information isn't retrieved from the external organization. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You control the free/busy access level and scope by using the FreeBusyAccessLevel and FreeBusyAccessScope parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessLevel</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessLevel parameter specifies the maximum amount of detail returned to the requesting organization. Valid values are:</maml:para>
          <maml:para>- None: No free/busy access.</maml:para>
          <maml:para>- AvailabilityOnly: Free/busy access with time only.</maml:para>
          <maml:para>- LimitedDetails: Free/busy access with time, subject, and location.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">FreeBusyAccessLevel</command:parameterValue>
        <dev:type>
          <maml:name>FreeBusyAccessLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FreeBusyAccessScope</maml:name>
        <maml:description>
          <maml:para>The FreeBusyAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the FreeBusyAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailboxMoveEnabled</maml:name>
        <maml:description>
          <maml:para>The MailboxMoveEnabled parameter specifies whether the organization relationship enables moving mailboxes to or from the external organization. Valid values are:</maml:para>
          <maml:para>- $true: Mailbox moves to or from the external organization are allowed.</maml:para>
          <maml:para>- $false: Mailbox moves to from the external organization aren't allowed. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessEnabled</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessEnabled parameter specifies whether MailTips for users in this organization are returned over this organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: MailTips for users in this organization are returned over the organization relationship.</maml:para>
          <maml:para>- $false: MailTips for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>You control the MailTips access level by using the MailTipsAccessLevel parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessLevel</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessLevel parameter specifies the level of MailTips data externally shared over this organization relationship. This parameter can have the following values:</maml:para>
          <maml:para>- All: All MailTips are returned, but the recipients in the remote organization are considered external. For the Auto Reply MailTip, the external Auto Reply message is returned.</maml:para>
          <maml:para>- Limited: Only those MailTips that could prevent a non-delivery report (NDR) or an Auto Reply are returned. Custom MailTips, the Large Audience MailTip, and Moderated Recipient MailTips won't be returned.</maml:para>
          <maml:para>- None: No MailTips are returned to the remote organization. This is the default value.</maml:para>
          <maml:para></maml:para>
          <maml:para>This parameter is only meaningful when the MailTipsAccessEnabled parameter value is $true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MailTipsAccessLevel</command:parameterValue>
        <dev:type>
          <maml:name>MailTipsAccessLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MailTipsAccessScope</maml:name>
        <maml:description>
          <maml:para>The MailTipsAccessScope parameter specifies a mail-enabled security group in the internal organization that contains users whose free/busy information is accessible by an external organization. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>The default value is blank ($null), which means no group is specified.</maml:para>
          <maml:para>If you use this parameter, recipient-specific MailTips are returned only for those recipients that are members of the specified group. The recipient-specific MailTips are:</maml:para>
          <maml:para>- Auto Reply</maml:para>
          <maml:para>- Mailbox Full</maml:para>
          <maml:para>- Custom</maml:para>
          <maml:para></maml:para>
          <maml:para>If you don't use this parameter, recipient-specific MailTips are returned for all recipients in the organization.</maml:para>
          <maml:para>This restriction only applies to mailboxes, mail users, and mail contacts. It doesn't apply to distribution groups.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>GroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the organization relationship. The maximum length is 64 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OrganizationContact</maml:name>
        <maml:description>
          <maml:para>The OrganizationContact parameter specifies the email address that can be used to contact the external organization (for example, administrator@fourthcoffee.com).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SmtpAddress</command:parameterValue>
        <dev:type>
          <maml:name>SmtpAddress</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PhotosEnabled</maml:name>
        <maml:description>
          <maml:para>The PhotosEnabled parameter specifies whether photos for users in the internal organization are returned over the organization relationship. Valid values are:</maml:para>
          <maml:para>- $true: Photos for users in this organization are returned over the organization relationship.</maml:para>
          <maml:para>- $false: Photos for users in this organization aren't returned over the organization relationship. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetApplicationUri</maml:name>
        <maml:description>
          <maml:para>The TargetApplicationUri parameter specifies the target Uniform Resource Identifier (URI) of the external organization. The TargetApplicationUri parameter is specified by Exchange when requesting a delegated token to retrieve free and busy information, for example, mail.contoso.com.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetAutodiscoverEpr</maml:name>
        <maml:description>
          <maml:para>The TargetAutodiscoverEpr parameter specifies the Autodiscover URL of Exchange Web Services for the external organization, for example, `https://contoso.com/autodiscover/autodiscover.svc/wssecurity`. Exchange uses Autodiscover to automatically detect the correct Exchange server endpoint to use for external requests.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>TargetOwaURL</maml:name>
        <maml:description>
          <maml:para>The TargetOwaURL parameter specifies the Outlook on the web (formerly Outlook Web App) URL of the external organization that's defined in the organization relationship. It is used for Outlook on the web redirection in a cross-premise Exchange scenario. Configuring this attribute enables users in the organization to use their current Outlook on the web URL to access Outlook on the web in the external organization.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TargetSharingEpr</maml:name>
        <maml:description>
          <maml:para>The TargetSharingEpr parameter specifies the URL of the target Exchange Web Services for the external organization.</maml:para>
          <maml:para>If you use this parameter, this URL is always used to reach the external Exchange server. TheURL that's specified by the TargetAutoDiscoverEpr parameter isn't used to locate the external Exchange server.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-OrganizationRelationship -Identity "Fourth Coffee" -FreeBusyAccessLevel LimitedDetails</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the free/busy access level to LimitedDetails, which includes time, subject, and location.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-OrganizationRelationship -Identity "Contoso" -Enabled $false</dev:code>
        <dev:remarks>
          <maml:para>This example disables the organization relationship with Contoso</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-organizationrelationship</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Place</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Place</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Set-Place cmdlet to update room mailboxes with additional metadata, which provides a better search and room suggestion experience. Note : In hybrid environments, this cmdlet doesn't work on the following properties on synchronized room mailboxes: City, CountryOrRegion, GeoCoordinates, Phone, PostalCode, State, and Street. To modify these properties on synchronized room mailboxes, use the Set-User or Set-Mailbox cmdlets in on-premises Exchange. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Place</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the room mailbox that you want to modify. You can use any value that uniquely identifies the room. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AudioDeviceName</maml:name>
          <maml:description>
            <maml:para>The AudioDeviceName parameter specifies the name of the audio device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>The default value is blank ($null). To indicate that this room has no audio device, use the value $null for this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Building</maml:name>
          <maml:description>
            <maml:para>The Building parameter specifies the building name or building number that the room is in. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Capacity</maml:name>
          <maml:description>
            <maml:para>The Capacity parameter specifies the capacity of the room. A valid value is an integer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>City</maml:name>
          <maml:description>
            <maml:para>The City parameter specifies the room's city. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CountryOrRegion</maml:name>
          <maml:description>
            <maml:para>The CountryOrRegion parameter specifies the room's country or region. A valid value is a valid ISO 3166-1 two-letter country code (for example, AU for Australia) or the corresponding friendly name for the country (which might be different from the official ISO 3166 Maintenance Agency short name).</maml:para>
            <maml:para>A reference for two-letter country codes is available at Country Codes List (https://www.nationsonline.org/oneworld/country_code_list.htm).</maml:para>
            <maml:para>The friendly name is returned in the CountryOrRegion property value by the Get-Place cmdlet, but you can use either the friendly name or the two-letter country code in filter operations.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CountryInfo</command:parameterValue>
          <dev:type>
            <maml:name>CountryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DisplayDeviceName</maml:name>
          <maml:description>
            <maml:para>The DisplayDeviceName parameter specifies the name of the display device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>The default value is blank ($null). To indicate that this room has no display device, use the value $null for this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Floor</maml:name>
          <maml:description>
            <maml:para>The Floor parameter specifies the floor number that the room is on.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>FloorLabel</maml:name>
          <maml:description>
            <maml:para>The FloorLabel parameter specifies a descriptive label for the floor that the room is on. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GeoCoordinates</maml:name>
          <maml:description>
            <maml:para>The GeoCoordinates parameter specifies the room's location in latitude, longitude and (optionally) altitude coordinates. A valid value for this parameter uses one of the following formats:</maml:para>
            <maml:para>- Latitude and longitude: For example, "47,644125;-122,122411"</maml:para>
            <maml:para>- Latitude, longitude, and altitude: For example, "47,644125;-122,122411;161,432"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">GeoCoordinates</command:parameterValue>
          <dev:type>
            <maml:name>GeoCoordinates</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IsWheelChairAccessible</maml:name>
          <maml:description>
            <maml:para>The IsWheelChairAccessible parameter specifies whether the room is wheelchair accessible. Valid values are:</maml:para>
            <maml:para>- $true: The room is wheelchair accessible.</maml:para>
            <maml:para>- $false: The room is not wheelchair accessible. This is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>The Label parameter specifies a descriptive label for the room (for example, a number or name). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Phone</maml:name>
          <maml:description>
            <maml:para>The Phone parameter specifies the room's telephone number.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PostalCode</maml:name>
          <maml:description>
            <maml:para>The PostalCode parameter specifies the room's postal code.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>State</maml:name>
          <maml:description>
            <maml:para>The State parameter specifies the room's state or province.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Street</maml:name>
          <maml:description>
            <maml:para>The Street parameter specifies the room's physical address.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tags</maml:name>
          <maml:description>
            <maml:para>The Tags parameter specifies additional features of the room (for example, details like the type of view or furniture type).</maml:para>
            <maml:para>You can specify multiple labels separated by commas. If the labels contains spaces, enclose the values in quotation marks: `"Label 1","Label 2",..."Label N"`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>VideoDeviceName</maml:name>
          <maml:description>
            <maml:para>The VideoDeviceName parameter specifies the name of the video device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
            <maml:para>The default value is blank ($null). To indicate that this room has no video device, use the value $null for this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the room mailbox that you want to modify. You can use any value that uniquely identifies the room. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AudioDeviceName</maml:name>
        <maml:description>
          <maml:para>The AudioDeviceName parameter specifies the name of the audio device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>The default value is blank ($null). To indicate that this room has no audio device, use the value $null for this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Building</maml:name>
        <maml:description>
          <maml:para>The Building parameter specifies the building name or building number that the room is in. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Capacity</maml:name>
        <maml:description>
          <maml:para>The Capacity parameter specifies the capacity of the room. A valid value is an integer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>City</maml:name>
        <maml:description>
          <maml:para>The City parameter specifies the room's city. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CountryOrRegion</maml:name>
        <maml:description>
          <maml:para>The CountryOrRegion parameter specifies the room's country or region. A valid value is a valid ISO 3166-1 two-letter country code (for example, AU for Australia) or the corresponding friendly name for the country (which might be different from the official ISO 3166 Maintenance Agency short name).</maml:para>
          <maml:para>A reference for two-letter country codes is available at Country Codes List (https://www.nationsonline.org/oneworld/country_code_list.htm).</maml:para>
          <maml:para>The friendly name is returned in the CountryOrRegion property value by the Get-Place cmdlet, but you can use either the friendly name or the two-letter country code in filter operations.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CountryInfo</command:parameterValue>
        <dev:type>
          <maml:name>CountryInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DisplayDeviceName</maml:name>
        <maml:description>
          <maml:para>The DisplayDeviceName parameter specifies the name of the display device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>The default value is blank ($null). To indicate that this room has no display device, use the value $null for this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Floor</maml:name>
        <maml:description>
          <maml:para>The Floor parameter specifies the floor number that the room is on.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>FloorLabel</maml:name>
        <maml:description>
          <maml:para>The FloorLabel parameter specifies a descriptive label for the floor that the room is on. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GeoCoordinates</maml:name>
        <maml:description>
          <maml:para>The GeoCoordinates parameter specifies the room's location in latitude, longitude and (optionally) altitude coordinates. A valid value for this parameter uses one of the following formats:</maml:para>
          <maml:para>- Latitude and longitude: For example, "47,644125;-122,122411"</maml:para>
          <maml:para>- Latitude, longitude, and altitude: For example, "47,644125;-122,122411;161,432"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">GeoCoordinates</command:parameterValue>
        <dev:type>
          <maml:name>GeoCoordinates</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IsWheelChairAccessible</maml:name>
        <maml:description>
          <maml:para>The IsWheelChairAccessible parameter specifies whether the room is wheelchair accessible. Valid values are:</maml:para>
          <maml:para>- $true: The room is wheelchair accessible.</maml:para>
          <maml:para>- $false: The room is not wheelchair accessible. This is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>The Label parameter specifies a descriptive label for the room (for example, a number or name). If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MTREnabled</maml:name>
        <maml:description>
          <maml:para>Note: Currently, this parameter is informational only and results in no additional functionality.</maml:para>
          <maml:para>The MTREnabled parameter identifies the room as configured with a Microsoft Teams room system. You can add Teams room systems as audio sources in Teams meetings that involve the room. Valid values are:</maml:para>
          <maml:para>- $true: The room is has a Teams room system. You can add the Teams room system to Microsoft Teams meetings when selecting to join a meeting with room audio.</maml:para>
          <maml:para>- $false: The room is does not have a Teams room system. Users will join Teams meetings using their PC or mobile device audio instead of using room audio. This is the default value.</maml:para>
          <maml:para>For more information about Microsoft Teams Rooms, see Microsoft Teams Rooms (https://learn.microsoft.com/en-us/microsoftteams/rooms/).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Phone</maml:name>
        <maml:description>
          <maml:para>The Phone parameter specifies the room's telephone number.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PostalCode</maml:name>
        <maml:description>
          <maml:para>The PostalCode parameter specifies the room's postal code.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>State</maml:name>
        <maml:description>
          <maml:para>The State parameter specifies the room's state or province.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Street</maml:name>
        <maml:description>
          <maml:para>The Street parameter specifies the room's physical address.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Tags</maml:name>
        <maml:description>
          <maml:para>The Tags parameter specifies additional features of the room (for example, details like the type of view or furniture type).</maml:para>
          <maml:para>You can specify multiple labels separated by commas. If the labels contains spaces, enclose the values in quotation marks: `"Label 1","Label 2",..."Label N"`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>VideoDeviceName</maml:name>
        <maml:description>
          <maml:para>The VideoDeviceName parameter specifies the name of the video device in the room. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          <maml:para>The default value is blank ($null). To indicate that this room has no video device, use the value $null for this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ParentId</maml:name>
        <maml:description>
          <maml:para>Note: This feature is still experimental and will only be available for Tenants using Microsoft Places.</maml:para>
          <maml:para>To link one Place with its Location Hierarchy in Microsoft Places, you must provide its Parent Type and ID.</maml:para>
          <maml:para>Tenants that are onboarding Rooms and Workspaces to Microsoft Places must run this command to be able to use Microsoft Places properly.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ParentType</maml:name>
        <maml:description>
          <maml:para>The Type of the Parent in Microsoft Places currently can be one of:</maml:para>
          <maml:para>- Floor</maml:para>
          <maml:para>- Section</maml:para>
          <maml:para>You must provide both the Type and the ID of the parent of a Room or Workspace to properly onboard it to Microsoft Places.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">ParentLocationType</command:parameterValue>
        <dev:type>
          <maml:name>ParentLocationType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-Place -Identity "Conference Room 01" -IsWheelChairAccessible $true -AudioDeviceName PolyCom -VideoDeviceName "InFocus WXGA Projector"</dev:code>
        <dev:remarks>
          <maml:para>The example adds the specified metadata to the room mailbox named Conference Room 01.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-Place -Identity "Conference Room 02" -Building "Building 02" -Capacity 5 -CountryOrRegion ES -Floor 3 -FloorLabel "Human Resources" -Label Interviews</dev:code>
        <dev:remarks>
          <maml:para>The example adds the specified metadata to the room mailbox named Conference Room 02.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-place</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ResourceConfig</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ResourceConfig</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-ResourceConfig cmdlet to create custom resource properties that you can add to room and equipment mailboxes.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>After you use this cmdlet to create custom resource properties, you use the ResourceCustom parameter on the Set-Mailbox cmdlet to add one or more of those properties to a room or equipment mailbox. For more information, see the ResourceCustom parameter description in Set-Mailbox.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ResourceConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ResourcePropertySchema</maml:name>
          <maml:description>
            <maml:para>The ResourcePropertySchema parameter specifies the custom resource property that you want to make available to room or equipment mailboxes. This parameter uses the syntax `Room/&lt;Text&gt;` or `Equipment/&lt;Text&gt;` where the `&lt;Text&gt;` value doesn't contain spaces. For example, `Room/Whiteboard` or `Equipment/Van`. You can specify multiple values separated by commas.</maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ResourcePropertySchema</maml:name>
        <maml:description>
          <maml:para>The ResourcePropertySchema parameter specifies the custom resource property that you want to make available to room or equipment mailboxes. This parameter uses the syntax `Room/&lt;Text&gt;` or `Equipment/&lt;Text&gt;` where the `&lt;Text&gt;` value doesn't contain spaces. For example, `Room/Whiteboard` or `Equipment/Van`. You can specify multiple values separated by commas.</maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-ResourceConfig -ResourcePropertySchema Room/Whiteboard,Equipment/Van</dev:code>
        <dev:remarks>
          <maml:para>This example adds the custom resource properties Room/Whiteboard and Equipment/Van. These values replace any existing custom resource properties that are already configured.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-ResourceConfig -ResourcePropertySchema @{Add="Room/TV"
Remove="Equipment/Laptop"}</dev:code>
        <dev:remarks>
          <maml:para>This example adds the custom resource property Room/TV and removes Equipment/Laptop without affecting other custom resource properties that are already configured.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-resourceconfig</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-SharingPolicy</command:name>
      <command:verb>Set</command:verb>
      <command:noun>SharingPolicy</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Set-SharingPolicy cmdlet to modify existing sharing policies that control how users inside your organization can share free/busy and contact information with users outside your organization.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Users can only share free/busy and contact information after federation has been configured between Exchange organizations. After that, users can send sharing invitations to the external recipients as long as those invitations comply with the sharing policy. A sharing policy needs to be assigned to a mailbox to be effective. If a mailbox doesn't have a specific sharing policy assigned, a default policy enforces the sharing options for the mailbox.</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-SharingPolicy</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the identity of the sharing policy that you want to modify. You can use one of the following values:</maml:para>
            <maml:para>- ADObjectID</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Legacy DN</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>SharingPolicyIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Default</maml:name>
          <maml:description>
            <maml:para>The Default switch specifies that the sharing policy is the default sharing policy for all mailboxes. You don't need to specify a value with this switch.</maml:para>
            <maml:para>If no sharing policy has been applied to a mailbox, the default policy is automatically applied. If you want to disable sharing across your organization, you disable the default policy.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Domains</maml:name>
          <maml:description>
            <maml:para>The Domains parameter specifies domains to which this policy applies and the sharing policy action. Values for this parameter use the format `Domain:SharingPolicyAction`.</maml:para>
            <maml:para>The following SharingPolicyAction values can be used:</maml:para>
            <maml:para>- CalendarSharingFreeBusySimple: Share free/busy hours only.</maml:para>
            <maml:para>- CalendarSharingFreeBusyDetail: Share free/busy hours, subject, and location.</maml:para>
            <maml:para>- CalendarSharingFreeBusyReviewer: Share free/busy hours, subject, location, and the body of the message or calendar item.</maml:para>
            <maml:para>- ContactsSharing: Share contacts only.</maml:para>
            <maml:para></maml:para>
            <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
            <maml:para>A domain doesn't include subdomains. You need to configure each subdomain separately.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enabled</maml:name>
          <maml:description>
            <maml:para>The Enabled parameter specifies whether to enable the sharing policy. Valid values for this parameter are $true or $false. The default is $true.</maml:para>
            <maml:para>When the sharing policy is disabled, users who are provisioned to use this policy continue to share information until the sharing policy assistant runs.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
          <dev:type>
            <maml:name>Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The Name parameter specifies the unique name of the sharing policy. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the identity of the sharing policy that you want to modify. You can use one of the following values:</maml:para>
          <maml:para>- ADObjectID</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Legacy DN</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">SharingPolicyIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>SharingPolicyIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Default</maml:name>
        <maml:description>
          <maml:para>The Default switch specifies that the sharing policy is the default sharing policy for all mailboxes. You don't need to specify a value with this switch.</maml:para>
          <maml:para>If no sharing policy has been applied to a mailbox, the default policy is automatically applied. If you want to disable sharing across your organization, you disable the default policy.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Domains</maml:name>
        <maml:description>
          <maml:para>The Domains parameter specifies domains to which this policy applies and the sharing policy action. Values for this parameter use the format `Domain:SharingPolicyAction`.</maml:para>
          <maml:para>The following SharingPolicyAction values can be used:</maml:para>
          <maml:para>- CalendarSharingFreeBusySimple: Share free/busy hours only.</maml:para>
          <maml:para>- CalendarSharingFreeBusyDetail: Share free/busy hours, subject, and location.</maml:para>
          <maml:para>- CalendarSharingFreeBusyReviewer: Share free/busy hours, subject, location, and the body of the message or calendar item.</maml:para>
          <maml:para>- ContactsSharing: Share contacts only.</maml:para>
          <maml:para></maml:para>
          <maml:para>To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.</maml:para>
          <maml:para>A domain doesn't include subdomains. You need to configure each subdomain separately.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enabled</maml:name>
        <maml:description>
          <maml:para>The Enabled parameter specifies whether to enable the sharing policy. Valid values for this parameter are $true or $false. The default is $true.</maml:para>
          <maml:para>When the sharing policy is disabled, users who are provisioned to use this policy continue to share information until the sharing policy assistant runs.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The Name parameter specifies the unique name of the sharing policy. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Set-SharingPolicy -Identity Contoso -Domains "mail.contoso.com: CalendarSharingFreeBusySimple"</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the sharing policy Contoso for contoso.com, which is a domain outside your organization. This policy allows users in the Contoso domain to see simple free/busy information.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>Set-SharingPolicy -Identity SharingPolicy01 -Domains "contoso.com: CalendarSharingFreeBusySimple", "atlanta.contoso.com: CalendarSharingFreeBusyReviewer", "beijing.contoso.com: CalendarSharingFreeBusyReviewer"</dev:code>
        <dev:remarks>
          <maml:para>This example adds a second domain to the sharing policy SharingPolicy01. When you're adding a domain to an existing policy, you must include any previously included domains.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>Set-SharingPolicy -Identity "SharingPolicy01" -Enabled $false</dev:code>
        <dev:remarks>
          <maml:para>This example disables the sharing policy SharingPolicy01.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/set-sharingpolicy</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-OrganizationRelationship</command:name>
      <command:verb>Test</command:verb>
      <command:noun>OrganizationRelationship</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Test-OrganizationRelationship cmdlet to verify that the organization relationship is properly configured and functioning as expected.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Test-OrganizationRelationship cmdlet doesn't include any functional tests of federated sharing features, such as accessing user free/busy information or moving mailboxes between organizations. It only verifies that the configuration will allow these features to work correctly.</maml:para>
      <maml:para>Before you can test an organization relationship, you must first create an organization relationship. For more information, see Create an organization relationship (https://docs.microsoft.com/exchange/create-an-organization-relationship-exchange-2013-help).</maml:para>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-OrganizationRelationship</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the organization relationship to be tested. You can use the following values:</maml:para>
            <maml:para>- Canonical name</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para>- Name</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>OrganizationRelationshipIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserIdentity</maml:name>
          <maml:description>
            <maml:para>The UserIdentity parameter specifies the mailbox for which a delegation token is requested to access the external organization's configuration information. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the organization relationship to be tested. You can use the following values:</maml:para>
          <maml:para>- Canonical name</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para>- Name</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">OrganizationRelationshipIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>OrganizationRelationshipIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UserIdentity</maml:name>
        <maml:description>
          <maml:para>The UserIdentity parameter specifies the mailbox for which a delegation token is requested to access the external organization's configuration information. You can use any value that uniquely identifies the mailbox. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Test-OrganizationRelationship -UserIdentity katherine@fabrikam.com -Identity contoso.com -Confirm</dev:code>
        <dev:remarks>
          <maml:para>This example validates the organization relationship deployed in the fabrikam.com on-premises Exchange organization and checks whether a delegation token can be retrieved for a mailbox in the external organization domain contoso.com.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/test-organizationrelationship</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Update-DistributionGroupMember</command:name>
      <command:verb>Update</command:verb>
      <command:noun>DistributionGroupMember</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.</maml:para>
        <maml:para>Use the Update-DistributionGroupMember cmdlet to replace all members of distribution groups and mail-enabled security groups. To add or remove existing group members, use the Add-DistributionGroupMember and Remove-DistributionGroupMember cmdlets.</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Update-DistributionGroupMember</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>DistributionGroupIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BypassSecurityGroupManagerCheck</maml:name>
          <maml:description>
            <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
            <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
            <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
            <maml:para></maml:para>
            <maml:para>You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
            <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
            <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>Members</maml:name>
          <maml:description>
            <maml:para>The Members parameter specifies the recipients (mail-enabled objects) that will replace the current group members. You can use any value that uniquely identifies the recipient. For example:</maml:para>
            <maml:para>- Name</maml:para>
            <maml:para>- Alias</maml:para>
            <maml:para>- Distinguished name (DN)</maml:para>
            <maml:para>- Canonical DN</maml:para>
            <maml:para>- Email address</maml:para>
            <maml:para>- GUID</maml:para>
            <maml:para></maml:para>
            <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
            <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>The Identity parameter specifies the distribution group or mail-enabled security group that you want to modify. You can use any value that uniquely identifies the group. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">DistributionGroupIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>DistributionGroupIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BypassSecurityGroupManagerCheck</maml:name>
        <maml:description>
          <maml:para>The BypassSecurityGroupManagerCheck switch specifies whether to allow a user who isn't an owner of the group to modify or delete the group. If you aren't defined in the ManagedBy property of the group, you need to use this switch in commands that modify or delete the group. To use this switch, your account requires specific permissions based on the group type:</maml:para>
          <maml:para>- Distribution groups or mail-enabled security groups: You need to be a member of the Organization Management role group or have the Security Group Creation and Membership role assigned.</maml:para>
          <maml:para>- Role groups: You need to be a member of the Organization Management role group or have the Role Management role assigned.</maml:para>
          <maml:para></maml:para>
          <maml:para>You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.</maml:para>
          <maml:para>- Destructive cmdlets (for example, Remove-* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.</maml:para>
          <maml:para>- Most other cmdlets (for example, New-\ and Set-\ cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>Members</maml:name>
        <maml:description>
          <maml:para>The Members parameter specifies the recipients (mail-enabled objects) that will replace the current group members. You can use any value that uniquely identifies the recipient. For example:</maml:para>
          <maml:para>- Name</maml:para>
          <maml:para>- Alias</maml:para>
          <maml:para>- Distinguished name (DN)</maml:para>
          <maml:para>- Canonical DN</maml:para>
          <maml:para>- Email address</maml:para>
          <maml:para>- GUID</maml:para>
          <maml:para></maml:para>
          <maml:para>You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.</maml:para>
          <maml:para>Although it isn't required, it's a good idea to add only security principals (for example, mailboxes and mail users with user accounts or other mail-enabled security groups) to mail-enabled security groups. If you assign permissions to a mail-enabled security group, any members that aren't security principals (for example, mail contacts or distribution groups) won't have the permissions assigned.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the input types that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para>To see the return types, which are also known as output types, that this cmdlet accepts, see Cmdlet Input and Output Types (https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Update-DistributionGroupMember -Identity "Research Reports" -Members chris@contoso.com,michelle@contoso.com,laura@contoso.com,julia@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example replaces the existing members of the distribution group name Research Reports with new members.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/update-distributiongroupmember</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Upgrade-DistributionGroup</command:name>
      <command:verb>Upgrade</command:verb>
      <command:noun>DistributionGroup</command:noun>
      <maml:description>
        <maml:para>This cmdlet is available only in the cloud-based service.</maml:para>
        <maml:para>Use the Upgrade-DistributionGroup cmdlet to upgrade distribution groups to Microsoft 365 Groups. This cmdlet only works on distribution groups, not mail-enabled security groups. Note : Before you use this cmdlet, verify there are no email address policies that you created with the IncludeUnifiedGroupRecipients parameter; otherwise the command will fail. Remove and recreate the email address policies after you upgrade your distribution groups to Microsoft 365 Groups. Note : We recommend that you use the Exchange Online PowerShell V2 module to connect to Exchange Online PowerShell. For instructions, see Connect to Exchange Online PowerShell (https://docs.microsoft.com/powershell/exchange/connect-to-exchange-online-powershell).</maml:para>
        <maml:para>For information about the parameter sets in the Syntax section below, see Exchange cmdlet syntax (https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see Find the permissions required to run any Exchange cmdlet (https://docs.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Upgrade-DistributionGroup</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
          <maml:name>DlIdentities</maml:name>
          <maml:description>
            <maml:para>The DlIdentities parameter specifies the email address of the distribution group that you want to upgrade to a Microsoft 365 Group.</maml:para>
            <maml:para>You can specify multiple values separated by commas.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
          <dev:type>
            <maml:name>MultiValuedProperty</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ActionType</maml:name>
          <maml:description>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ExecutingUser</maml:name>
          <maml:description>
            <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
          <dev:type>
            <maml:name>RecipientIdParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True" position="1" aliases="none">
        <maml:name>DlIdentities</maml:name>
        <maml:description>
          <maml:para>The DlIdentities parameter specifies the email address of the distribution group that you want to upgrade to a Microsoft 365 Group.</maml:para>
          <maml:para>You can specify multiple values separated by commas.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MultiValuedProperty</command:parameterValue>
        <dev:type>
          <maml:name>MultiValuedProperty</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ActionType</maml:name>
        <maml:description>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ExecutingUser</maml:name>
        <maml:description>
          <maml:para>This parameter is reserved for internal Microsoft use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">RecipientIdParameter</command:parameterValue>
        <dev:type>
          <maml:name>RecipientIdParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name> </maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Upgrade-DistributionGroup -DlIdentities hr@contoso.com,finance@contoso.com</dev:code>
        <dev:remarks>
          <maml:para>This example upgrades the specified distribution groups to Microsoft 365 Groups.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/exchange/upgrade-distributiongroup</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>
