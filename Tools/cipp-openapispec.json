{
  "openapi": "3.0.0",
  "info": {
    "title": "CIPP API",
    "description": "API for Cloud Identity and Policy Platform (CIPP)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "CIPP API Server"
    }
  ],
  "components": {
    "schemas": {
      "StandardResponse": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "object",
            "description": "The results of the operation"
          }
        }
      }
    }
  },
  "paths": {
    "/ListScheduledItems": {
      "get": {
        "summary": "List Scheduled Items",
        "description": "Retrieves a list of scheduled items",
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "ShowHidden",
            "in": "query",
            "description": "Whether to show hidden system jobs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Filter by job name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ExecutedTime": {
                        "type": "string",
                        "description": "When the job was last executed"
                      },
                      "TaskState": {
                        "type": "string",
                        "description": "Current state of the task",
                        "enum": ["Running", "Planned", "Failed", "Completed"]
                      },
                      "Tenant": {
                        "type": "string",
                        "description": "The tenant the job is for"
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name of the scheduled job"
                      },
                      "ScheduledTime": {
                        "type": "integer",
                        "description": "When the job is scheduled to run (Unix timestamp)"
                      },
                      "Command": {
                        "type": "string",
                        "description": "The command to execute"
                      },
                      "Parameters": {
                        "type": "object",
                        "description": "Parameters for the command"
                      },
                      "PostExecution": {
                        "type": "string",
                        "description": "Actions to take after execution"
                      },
                      "Recurrence": {
                        "type": "string",
                        "description": "How often the job recurs"
                      },
                      "Results": {
                        "type": "string",
                        "description": "Results of the job execution"
                      },
                      "RowKey": {
                        "type": "string",
                        "description": "Unique identifier for the job"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/RemoveScheduledItem": {
      "post": {
        "summary": "Remove Scheduled Item",
        "description": "Removes a scheduled item",
        "tags": [
          "Scheduler"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The RowKey of the scheduled item to remove"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scheduled item removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/AddScheduledItem": {
      "post": {
        "summary": "Add Scheduled Item",
        "description": "Adds a new scheduled item",
        "tags": [
          "Scheduler"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tenantFilter",
                  "Name",
                  "command",
                  "ScheduledTime",
                  "Recurrence"
                ],
                "properties": {
                  "tenantFilter": {
                    "type": "object",
                    "description": "The tenant to run the job for",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "Tenant ID or domain"
                      },
                      "label": {
                        "type": "string",
                        "description": "Tenant display name"
                      }
                    }
                  },
                  "Name": {
                    "type": "string",
                    "description": "Name of the scheduled job"
                  },
                  "command": {
                    "type": "object",
                    "description": "The command to execute",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Command display name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Command value"
                      }
                    }
                  },
                  "ScheduledTime": {
                    "type": "integer",
                    "description": "When the job is scheduled to run (Unix timestamp)"
                  },
                  "Recurrence": {
                    "type": "string",
                    "description": "How often the job recurs",
                    "enum": ["0", "1d", "7d", "30d", "365d"]
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Parameters for the command"
                  },
                  "RawJsonParameters": {
                    "type": "string",
                    "description": "JSON string of parameters for advanced configuration"
                  },
                  "postExecution": {
                    "type": "array",
                    "description": "Actions to take after execution",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string",
                          "enum": ["Webhook", "Email", "PSA"]
                        }
                      }
                    }
                  },
                  "RowKey": {
                    "type": "string",
                    "description": "Unique identifier for the job (for editing existing jobs)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scheduled item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListFunctionParameters": {
      "get": {
        "summary": "List Function Parameters",
        "description": "Retrieves a list of available functions and their parameters",
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "Module",
            "in": "query",
            "description": "The module to list functions for",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CIPPCore"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Function parameters retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Function": {
                        "type": "string",
                        "description": "Function name"
                      },
                      "Synopsis": {
                        "type": "string",
                        "description": "Function description"
                      },
                      "Parameters": {
                        "type": "array",
                        "description": "Function parameters",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "description": "Parameter name"
                            },
                            "Type": {
                              "type": "string",
                              "description": "Parameter type"
                            },
                            "Required": {
                              "type": "boolean",
                              "description": "Whether the parameter is required"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListTenants": {
      "get": {
        "summary": "List Tenants",
        "description": "Retrieves a list of tenants",
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "AllTenantSelector",
            "in": "query",
            "description": "Whether to include the 'All Tenants' option",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string",
                        "description": "Tenant ID"
                      },
                      "defaultDomainName": {
                        "type": "string",
                        "description": "Default domain name"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Clear Tenant Cache",
        "description": "Clears the tenant cache",
        "tags": [
          "Tenants"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ClearCache"
                ],
                "properties": {
                  "ClearCache": {
                    "type": "boolean",
                    "description": "Whether to clear the cache"
                  },
                  "TenantsOnly": {
                    "type": "boolean",
                    "description": "Whether to only clear the tenant cache"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cache cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecPasswordConfig": {
      "get": {
        "summary": "Get Password Configuration",
        "description": "Retrieves the current password configuration",
        "tags": [
          "Settings"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "Whether to list the password configuration",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Results": {
                      "type": "object",
                      "properties": {
                        "passwordType": {
                          "type": "string",
                          "description": "The type of password generation",
                          "enum": ["Classic", "Correct-Battery-Horse"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Update Password Configuration",
        "description": "Updates the password configuration",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "passwordType"
                ],
                "properties": {
                  "passwordType": {
                    "type": "string",
                    "description": "The type of password generation",
                    "enum": ["Classic", "Correct-Battery-Horse"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecListBackup": {
      "get": {
        "summary": "List Backups",
        "description": "Retrieves a list of backups",
        "tags": [
          "Backup"
        ],
        "parameters": [
          {
            "name": "NameOnly",
            "in": "query",
            "description": "Whether to only return backup names",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BackupName",
            "in": "query",
            "description": "The name of a specific backup to retrieve",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backups retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "BackupName": {
                        "type": "string",
                        "description": "Name of the backup"
                      },
                      "Timestamp": {
                        "type": "string",
                        "description": "When the backup was created"
                      },
                      "Backup": {
                        "type": "string",
                        "description": "The backup data (JSON string)"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecRunBackup": {
      "post": {
        "summary": "Run Backup",
        "description": "Creates a new backup",
        "tags": [
          "Backup"
        ],
        "responses": {
          "200": {
            "description": "Backup created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecSetCIPPAutoBackup": {
      "post": {
        "summary": "Set Automatic Backup",
        "description": "Enables or disables automatic backups",
        "tags": [
          "Backup"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Enabled"
                ],
                "properties": {
                  "Enabled": {
                    "type": "boolean",
                    "description": "Whether to enable automatic backups"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Automatic backup setting updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecRestoreBackup": {
      "post": {
        "summary": "Restore Backup",
        "description": "Restores a backup",
        "tags": [
          "Backup"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "BackupName"
                    ],
                    "properties": {
                      "BackupName": {
                        "type": "string",
                        "description": "The name of the backup to restore"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "The backup data to restore"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Backup restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/Listlogs": {
      "get": {
        "summary": "List Logs",
        "description": "Retrieves a list of logs",
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "DateFilter",
            "in": "query",
            "description": "Filter logs by date (YYYYMMDD format)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "Whether to apply filtering",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "DateTime": {
                        "type": "string",
                        "description": "When the log entry was created"
                      },
                      "Tenant": {
                        "type": "string",
                        "description": "The tenant the log entry is for"
                      },
                      "TenantID": {
                        "type": "string",
                        "description": "The tenant ID"
                      },
                      "User": {
                        "type": "string",
                        "description": "The user who performed the action"
                      },
                      "Message": {
                        "type": "string",
                        "description": "The log message"
                      },
                      "API": {
                        "type": "string",
                        "description": "The API that was called"
                      },
                      "Severity": {
                        "type": "string",
                        "description": "The severity of the log entry"
                      },
                      "AppId": {
                        "type": "string",
                        "description": "The application ID"
                      },
                      "IP": {
                        "type": "string",
                        "description": "The IP address of the user"
                      },
                      "LogData": {
                        "type": "string",
                        "description": "Additional log data"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListExtensionsConfig": {
      "get": {
        "summary": "List Extensions Configuration",
        "description": "Retrieves the configuration for extensions",
        "tags": [
          "Integrations"
        ],
        "responses": {
          "200": {
            "description": "Extensions configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "Enabled": {
                        "type": "boolean",
                        "description": "Whether the extension is enabled"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecExtensionsConfig": {
      "post": {
        "summary": "Update Extensions Configuration",
        "description": "Updates the configuration for extensions",
        "tags": [
          "Integrations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Whether the extension is enabled"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extensions configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecExtensionTest": {
      "get": {
        "summary": "Test Extension",
        "description": "Tests an extension",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "name": "extensionName",
            "in": "query",
            "description": "The name of the extension to test",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Extension test completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecExtensionSync": {
      "get": {
        "summary": "Sync Extension",
        "description": "Syncs an extension",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "name": "Extension",
            "in": "query",
            "description": "The name of the extension to sync",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Extension sync completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecExtensionMapping": {
      "get": {
        "summary": "Get Extension Mapping",
        "description": "Retrieves the mapping for an extension",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "name": "List",
            "in": "query",
            "description": "The name of the extension to get mapping for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Extension mapping retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mappings": {
                      "type": "array",
                      "description": "The mappings for the extension",
                      "items": {
                        "type": "object",
                        "properties": {
                          "TenantId": {
                            "type": "string",
                            "description": "The tenant ID"
                          },
                          "Tenant": {
                            "type": "string",
                            "description": "The tenant name"
                          },
                          "IntegrationName": {
                            "type": "string",
                            "description": "The integration name"
                          },
                          "IntegrationId": {
                            "type": "string",
                            "description": "The integration ID"
                          },
                          "TenantDomain": {
                            "type": "string",
                            "description": "The tenant domain"
                          }
                        }
                      }
                    },
                    "Companies": {
                      "type": "array",
                      "description": "The companies for the extension",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The company name"
                          },
                          "value": {
                            "type": "string",
                            "description": "The company ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Update Extension Mapping",
        "description": "Updates the mapping for an extension",
        "tags": [
          "Integrations"
        ],
        "parameters": [
          {
            "name": "AddMapping",
            "in": "query",
            "description": "The name of the extension to update mapping for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AutoMapping",
            "in": "query",
            "description": "The name of the extension to auto-map",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "TenantId": {
                      "type": "string",
                      "description": "The tenant ID"
                    },
                    "Tenant": {
                      "type": "string",
                      "description": "The tenant name"
                    },
                    "IntegrationName": {
                      "type": "string",
                      "description": "The integration name"
                    },
                    "IntegrationId": {
                      "type": "string",
                      "description": "The integration ID"
                    },
                    "TenantDomain": {
                      "type": "string",
                      "description": "The tenant domain"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extension mapping updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListExtensionSync": {
      "get": {
        "summary": "List Extension Sync Jobs",
        "description": "Retrieves a list of extension sync jobs",
        "tags": [
          "Integrations"
        ],
        "responses": {
          "200": {
            "description": "Extension sync jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Tenant": {
                        "type": "string",
                        "description": "The tenant the job is for"
                      },
                      "SyncType": {
                        "type": "string",
                        "description": "The type of sync"
                      },
                      "Task": {
                        "type": "string",
                        "description": "The task being performed"
                      },
                      "ScheduledTime": {
                        "type": "string",
                        "description": "When the job is scheduled to run"
                      },
                      "ExecutedTime": {
                        "type": "string",
                        "description": "When the job was last executed"
                      },
                      "LastRun": {
                        "type": "string",
                        "description": "When the job was last run"
                      },
                      "RepeatsEvery": {
                        "type": "string",
                        "description": "How often the job repeats"
                      },
                      "Results": {
                        "type": "string",
                        "description": "Results of the job execution"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListExoRequest": {
      "post": {
        "summary": "List Exchange Cmdlets",
        "description": "Retrieves a list of Exchange cmdlets",
        "tags": [
          "Exchange"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "availableCmdlets",
                      "tenantFilter"
                    ],
                    "properties": {
                      "availableCmdlets": {
                        "type": "boolean",
                        "description": "Whether to list available cmdlets"
                      },
                      "tenantFilter": {
                        "type": "string",
                        "description": "The tenant to list cmdlets for"
                      },
                      "compliance": {
                        "type": "boolean",
                        "description": "Whether to use compliance endpoints"
                      },
                      "asApp": {
                        "type": "boolean",
                        "description": "Whether to execute as app"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "cmdlet",
                      "cmdParams",
                      "tenantFilter"
                    ],
                    "properties": {
                      "cmdlet": {
                        "type": "string",
                        "description": "The cmdlet to execute"
                      },
                      "cmdParams": {
                        "type": "object",
                        "description": "The parameters for the cmdlet"
                      },
                      "compliance": {
                        "type": "boolean",
                        "description": "Whether to use compliance endpoints"
                      },
                      "tenantFilter": {
                        "type": "string",
                        "description": "The tenant to execute the cmdlet for"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exchange cmdlets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Cmdlet": {
                            "type": "string",
                            "description": "The cmdlet name"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecAzBobbyTables": {
      "post": {
        "summary": "Execute Azure Table Operations",
        "description": "Executes operations on Azure tables",
        "tags": [
          "Azure Tables"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "FunctionName"
                ],
                "properties": {
                  "FunctionName": {
                    "type": "string",
                    "description": "The function to execute",
                    "enum": [
                      "Get-AzDataTable",
                      "Get-AzDataTableEntity",
                      "Remove-AzDataTableEntity",
                      "New-AzDataTable",
                      "Remove-AzDataTable",
                      "Add-AzDataTableEntity"
                    ]
                  },
                  "TableName": {
                    "type": "string",
                    "description": "The name of the table"
                  },
                  "Parameters": {
                    "type": "object",
                    "description": "The parameters for the function"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Azure table operation executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecCippFunction": {
      "post": {
        "summary": "Execute CIPP Function",
        "description": "Executes a CIPP function",
        "tags": [
          "CIPP Functions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "FunctionName"
                ],
                "properties": {
                  "FunctionName": {
                    "type": "string",
                    "description": "The function to execute",
                    "enum": [
                      "Get-CIPPTimerFunctions",
                      "!Get-CIPPTimerFunctions"
                    ]
                  },
                  "Parameters": {
                    "type": "object",
                    "description": "The parameters for the function"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CIPP function executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ExecApiClient": {
      "get": {
        "summary": "Get API Client Information",
        "description": "Retrieves information about API clients",
        "tags": [
          "API Clients"
        ],
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "description": "The action to perform",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GetAzureConfiguration",
                "List",
                "ListAvailable"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API client information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Results": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "Enabled": {
                              "type": "boolean",
                              "description": "Whether Microsoft Authentication is enabled"
                            },
                            "ApiUrl": {
                              "type": "string",
                              "description": "The API URL"
                            },
                            "TenantID": {
                              "type": "string",
                              "description": "The tenant ID"
                            },
                            "ClientIDs": {
                              "type": "array",
                              "description": "The client IDs",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Enabled": {
                                "type": "boolean",
                                "description": "Whether the client is enabled"
                              },
                              "AppName": {
                                "type": "string",
                                "description": "The application name"
                              },
                              "ClientId": {
                                "type": "string",
                                "description": "The client ID"
                              },
                              "Role": {
                                "type": "string",
                                "description": "The client role"
                              },
                              "IPRange": {
                                "type": "array",
                                "description": "The allowed IP ranges",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Update API Client",
        "description": "Updates an API client",
        "tags": [
          "API Clients"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "The action to perform",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SaveToAzure"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Action"
                ],
                "properties": {
                  "Action": {
                    "type": "string",
                    "description": "The action to perform",
                    "enum": [
                      "AddUpdate",
                      "ResetSecret",
                      "Delete"
                    ]
                  },
                  "ClientId": {
                    "type": "string",
                    "description": "The client ID"
                  },
                  "AppName": {
                    "type": "string",
                    "description": "The application name"
                  },
                  "Role": {
                    "type": "string",
                    "description": "The client role"
                  },
                  "IPRange": {
                    "type": "array",
                    "description": "The allowed IP ranges",
                    "items": {
                      "type": "string"
                    }
                  },
                  "Enabled": {
                    "type": "boolean",
                    "description": "Whether the client is enabled"
                  },
                  "RemoveAppReg": {
                    "type": "boolean",
                    "description": "Whether to remove the app registration"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/ListCustomRole": {
      "get": {
        "summary": "List Custom Roles",
        "description": "Retrieves a list of custom roles",
        "tags": [
          "API Clients"
        ],
        "responses": {
          "200": {
            "description": "Custom roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "RowKey": {
                        "type": "string",
                        "description": "The role name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}